SchemaVersion: 2018-07-01
Owner: "@mongodb/query"
Description: |
  This workload tests the performance of conjunctive collection scan queries where the order of
  predicates matters due to selectivity of the predicates.

GlobalDefaults:
  Database: &Database {^Parameter: {Name: Database, Default: unused}}
  DocumentCount: &DocumentCount {^Parameter: {Name: DocumentCount, Default: -1}}
  Repeat: &Repeat {^Parameter: {Name: Repeat, Default: -1}}
  Collection: &Collection Collection0
  MaxPhases: &MaxPhases 31
  Billion: &Billion 1_000_000_000
  NegativeBillion: &NegativeBillion -1_000_000_000

ActorTemplates:
- TemplateName: FindQueryTemplate
  Config:
    Name: {^Parameter: {Name: "Name", Default: "unused"}}
    Type: CrudActor
    Database: *Database
    Threads: 1
    Phases:
      OnlyActiveInPhases:
        Active: [{^Parameter: {Name: "ActivePhase", Default: -1}}]
        NopInPhasesUpTo: *MaxPhases
        PhaseConfig:
          Repeat: *Repeat
          Collection: *Collection
          Operations:
          - OperationName: find
            OperationCommand:
              Filter: {^Parameter: {Name: "Filter", Default: {invalid: "invalid"}}}

Actors:
- Name: ClearCollection
  Type: CrudActor
  Database: *Database
  Threads: 1
  Phases:
    OnlyActiveInPhases:
      Active: [0]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: 1
        Threads: 1
        Collection: *Collection
        Operations:
        - OperationName: drop

- Name: InsertData
  Type: Loader
  Threads: 4
  Phases:
    OnlyActiveInPhases:
      Active: [1]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: 1
        Database: *Database
        MultipleThreadsPerCollection: true
        CollectionCount: 1
        DocumentCount: *DocumentCount
        BatchSize: 1000
        Document:
          {
            onePercentConstantOne: {^Choose: {from: ["not int", 1], weights: [99, 1]}},
            tenPercentConstantOne: {^Choose: {from: ["not int", 1], weights: [90, 10]}},
            quarterConstantOne: {^Choose: {from: ["not int", 1], weights: [75, 25]}},
            onePercentPositiveInt: {^Choose: {
              from: &PositiveAndNegativeIntegers [{^Inc: {start: 1, step: 1}}, {^Inc: {start: -1, step: -1}}], 
              weights: [1, 99]
            }},
            tenPercentPositiveInt: {^Choose: {from: *PositiveAndNegativeIntegers, weights: [10, 90]}},
            quarterPositiveInt: {^Choose: {from: *PositiveAndNegativeIntegers, weights: [25, 75]}},
            halfPositiveInt: {^Choose: {from: *PositiveAndNegativeIntegers, weights: [50, 50]}},
            quarterNegativeInt: {^Choose: {from: *PositiveAndNegativeIntegers, weights: [75, 25]}},
            tenPercentNegativeInt: {^Choose: {from: *PositiveAndNegativeIntegers, weights: [90, 10]}},
            onePercentNegativeInt: {^Choose: {from: *PositiveAndNegativeIntegers, weights: [99, 1]}},
            nested: [
              {
                onePercentConstantOne: {^Choose: {from: ["not int", 1], weights: [99, 1]}},
                tenPercentConstantOne: {^Choose: {from: ["not int", 1], weights: [90, 10]}},
                quarterConstantOne: {^Choose: {from: ["not int", 1], weights: [75, 25]}},
                onePercentPositiveInt: {^Choose: {from: *PositiveAndNegativeIntegers, weights: [1, 99]}},
                tenPercentPositiveInt: {^Choose: {from: *PositiveAndNegativeIntegers, weights: [10, 90]}},
                quarterPositiveInt: {^Choose: {from: *PositiveAndNegativeIntegers, weights: [25, 75]}},
                halfPositiveInt: {^Choose: {from: *PositiveAndNegativeIntegers, weights: [50, 50]}},
                quarterNegativeInt: {^Choose: {from: *PositiveAndNegativeIntegers, weights: [75, 25]}},
                tenPercentNegativeInt: {^Choose: {from: *PositiveAndNegativeIntegers, weights: [90, 10]}},
                onePercentNegativeInt: {^Choose: {from: *PositiveAndNegativeIntegers, weights: [99, 1]}},
              }
            ]
          }

- Name: Quiesce
  Type: QuiesceActor
  Threads: 1
  Database: *Database
  Phases:
    OnlyActiveInPhases:
      Active: [2]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: 1
        Threads: 1

# In actors' names, a 'good case' means that the ordering of predicates defined by actual
# selectivities matches the ordering defined by heuristic selectivity estimation. Heuristic CE 
# defines the following selectivity order for predicates:
# $eq < closed range (e.g. {$gt: 10, $lte: 20}) < open range (e.g. {$gt: 10}) < $ne

- ActorFromTemplate:
    TemplateName: FindQueryTemplate
    TemplateParameters:
      Name: HighSelectivityGoodCaseTwoClauses
      ActivePhase: 3
      Filter:
        # Here (0, 1e9) is the most selective predicate, both in reality and according to heuristic CE.
        # Note that without predicate reordering, predicates are ordered by first comparing field names.
        &HighSelectivityGoodCaseTwoClauses {
          onePercentPositiveInt: {$gt: 0, $lt: *Billion}, # Selectivity = .01
          onePercentNegativeInt: {$gt: 0}, # Selectivity = .99
        }

- ActorFromTemplate:
    TemplateName: FindQueryTemplate
    TemplateParameters:
      Name: MediumSelectivityGoodCaseTwoClauses
      ActivePhase: 4
      Filter:
        &MediumSelectivityGoodCaseTwoClauses {
          tenPercentPositiveInt: {$gt: 0, $lt: *Billion}, # Selectivity = .1
          tenPercentNegativeInt: {$gt: 0}, # Selectivity = .9
        }

- ActorFromTemplate:
    TemplateName: FindQueryTemplate
    TemplateParameters:
      Name: LowSelectivityGoodCaseTwoClauses
      ActivePhase: 5
      Filter:
        &LowSelectivityGoodCaseTwoClauses {
          quarterPositiveInt: {$gt: 0, $lt: *Billion}, # Selectivity = .25
          quarterNegativeInt: {$gt: 0}, # Selectivity = .75
        }

- ActorFromTemplate:
    TemplateName: FindQueryTemplate
    TemplateParameters:
      Name: HighSelectivityBadCaseTwoClauses
      ActivePhase: 6
      Filter:
        # Here (-1e9, 0) is the most selective predicate according heuristic CE. However, (-inf, 0)
        # is more selective in reality.
        &HighSelectivityBadCaseTwoClauses {
          onePercentPositiveInt: {$gt: *NegativeBillion, $lt: 0}, # Selectivity = .99
          onePercentNegativeInt: {$lt: 0}, # Selectivity = .01
        }

- ActorFromTemplate:
    TemplateName: FindQueryTemplate
    TemplateParameters:
      Name: MediumSelectivityBadCaseTwoClauses
      ActivePhase: 7
      Filter:
        &MediumSelectivityBadCaseTwoClauses {
          tenPercentPositiveInt: {$gt: *NegativeBillion, $lt: 0}, # Selectivity = .9
          tenPercentNegativeInt: {$lt: 0}, # Selectivity = .1
        }

- ActorFromTemplate:
    TemplateName: FindQueryTemplate
    TemplateParameters:
      Name: LowSelectivityBadCaseTwoClauses
      ActivePhase: 8
      Filter:
        &LowSelectivityBadCaseTwoClauses {
          quarterPositiveInt: {$gt: *NegativeBillion, $lt: 0}, # Selectivity = .75
          quarterNegativeInt: {$lt: 0}, # Selectivity = .25
        }

- ActorFromTemplate:
    TemplateName: FindQueryTemplate
    TemplateParameters:
      Name: HighSelectivityGoodCaseFourClauses
      ActivePhase: 9
      Filter:
        &HighSelectivityGoodCaseFourClauses {
          onePercentConstantOne: 1, # Selectivity = .01
          quarterPercentPositiveInt: {$gt: 0, $lt: *Billion}, # Selectivity = .25
          quarterNegativeInt: {$gt: 0}, # Selectivity = .75
          tenPercentConstantOne: {$ne: 1}, # Selectivity = .9
        }

- ActorFromTemplate:
    TemplateName: FindQueryTemplate
    TemplateParameters:
      Name: MediumSelectivityGoodCaseFourClauses
      ActivePhase: 10
      Filter:
        &MediumSelectivityGoodCaseFourClauses {
          tenPercentConstantOne: 1, # Selectivity = .1
          quarterPositiveInt: {$gt: 0, $lt: *Billion}, # Selectivity = .25
          quarterNegativeInt: {$gt: 0}, # Selectivity = .75
          onePercentConstantOne: {$ne: 1}, # Selectivity = .99
        }

- ActorFromTemplate:
    TemplateName: FindQueryTemplate
    TemplateParameters:
      Name: LowSelectivityGoodCaseFourClauses
      ActivePhase: 11
      Filter:
        &LowSelectivityGoodCaseFourClauses {
          quarterConstantOne: 1, # Selectivity = .25
          halfPositiveInt: {$gt: 0, $lt: *Billion}, # Selectivity = .5
          quarterNegativeInt: {$gt: 0}, # Selectivity = .75
          onePercentConstantOne: {$ne: 1}, # Selectivity = .99
        }

- ActorFromTemplate:
    TemplateName: FindQueryTemplate
    TemplateParameters:
      Name: HighSelectivityBadCaseFourClauses
      ActivePhase: 12
      Filter:
        &HighSelectivityBadCaseFourClauses {
          tenPercentConstantOne: "not int", # Selectivity = .9
          quarterPositiveInt: {$gt: *NegativeBillion, $lt: 0}, # Selectivity = .75
          quarterNegativeInt: {$lt: 0}, # Selectivity = .25
          onePercentConstantOne: {$ne: "not int"}, # Selectivity = .01
        }

- ActorFromTemplate:
    TemplateName: FindQueryTemplate
    TemplateParameters:
      Name: MediumSelectivityBadCaseFourClauses
      ActivePhase: 13
      Filter:
        &MediumSelectivityBadCaseFourClauses {
          onePercentConstantOne: "not int", # Selectivity = .99
          quarterPositiveInt: {$gt: *NegativeBillion, $lt: 0}, # Selectivity = .75
          quarterNegativeInt: {$lt: 0}, # Selectivity = .25
          tenPercentConstantOne: {$ne: "not int"}, # Selectivity = .1
        }

- ActorFromTemplate:
    TemplateName: FindQueryTemplate
    TemplateParameters:
      Name: LowSelectivityBadCaseFourClauses
      ActivePhase: 14
      Filter:
        &LowSelectivityBadCaseFourClauses {
          onePercentConstantOne: "not int", # Selectivity = .99
          quarterPositiveInt: {$gt: *NegativeBillion, $lt: 0}, # Selectivity = .75
          halfNegativeInt: {$lt: 0}, # Selectivity = .5
          quarterConstantOne: {$ne: "not int"}, # Selectivity = .25
        }

- ActorFromTemplate:
    TemplateName: FindQueryTemplate
    TemplateParameters:
      Name: HighSelectivityIndistinguishableByHeuristics
      ActivePhase: 15
      Filter:
        &HighSelectivityIndistinguishableByHeuristics {
          onePercentPositiveInt: {$gt: 0}, # Selectivity = .01
          tenPercentPositiveInt: {$gt: 0}, # Selectivity = .1
          quarterPositiveInt: {$gt: 0}, # Selectivity = .25
          halfPositiveInt: {$gt: 0}, # Selectivity = .5
          quarterNegativeInt: {$gt: 0}, # Selectivity = .75
          tenPercentNegativeInt: {$gt: 0}, # Selectivity = .9
          onePercentNegativeInt: {$gt: 0}, # Selectivity = .99
        }

- ActorFromTemplate:
    TemplateName: FindQueryTemplate
    TemplateParameters:
      Name: MediumSelectivityIndistinguishableByHeuristics
      ActivePhase: 16
      Filter:
        &MediumSelectivityIndistinguishableByHeuristics {
          tenPercentPositiveInt: {$gt: 0}, # Selectivity = .1
          quarterPositiveInt: {$gt: 0}, # Selectivity = .25
          halfPositiveInt: {$gt: 0}, # Selectivity = .5
          quarterNegativeInt: {$gt: 0}, # Selectivity = .75
          tenPercentNegativeInt: {$gt: 0}, # Selectivity = .9
          onePercentNegativeInt: {$gt: 0}, # Selectivity = .99
          onePercentPositiveInt: {$lt: 0}, # Selectivity = .99
        }

- ActorFromTemplate:
    TemplateName: FindQueryTemplate
    TemplateParameters:
      Name: LowSelectivityIndistinguishableByHeuristics
      ActivePhase: 16
      Filter:
        &LowSelectivityIndistinguishableByHeuristics {
          quarterPositiveInt: {$gt: 0}, # Selectivity = .25
          halfPositiveInt: {$gt: 0}, # Selectivity = .5
          quarterNegativeInt: {$gt: 0}, # Selectivity = .75
          tenPercentNegativeInt: {$gt: 0}, # Selectivity = .9
          onePercentNegativeInt: {$gt: 0}, # Selectivity = .99
          tenPercentPositiveInt: {$lt: 0}, # Selectivity = .9
          onePercentPositiveInt: {$lt: 0}, # Selectivity = .99
        }

- ActorFromTemplate:
    TemplateName: FindQueryTemplate
    TemplateParameters:
      Name: ElemMatchHighSelectivityGoodCaseTwoClauses
      ActivePhase: 17
      Filter:
        {nested: {$elemMatch: *HighSelectivityGoodCaseTwoClauses}}

- ActorFromTemplate:
    TemplateName: FindQueryTemplate
    TemplateParameters:
      Name: ElemMatchMediumSelectivityGoodCaseTwoClauses
      ActivePhase: 18
      Filter:
        {nested: {$elemMatch: *MediumSelectivityGoodCaseTwoClauses}}

- ActorFromTemplate:
    TemplateName: FindQueryTemplate
    TemplateParameters:
      Name: ElemMatchLowSelectivityGoodCaseTwoClauses
      ActivePhase: 19
      Filter:
        {nested: {$elemMatch: *LowSelectivityGoodCaseTwoClauses}}

- ActorFromTemplate:
    TemplateName: FindQueryTemplate
    TemplateParameters:
      Name: ElemMatchHighSelectivityBadCaseTwoClauses
      ActivePhase: 20
      Filter:
        {nested: {$elemMatch: *HighSelectivityBadCaseTwoClauses}}

- ActorFromTemplate:
    TemplateName: FindQueryTemplate
    TemplateParameters:
      Name: ElemMatchMediumSelectivityBadCaseTwoClauses
      ActivePhase: 21
      Filter:
        {nested: {$elemMatch: *MediumSelectivityBadCaseTwoClauses}}

- ActorFromTemplate:
    TemplateName: FindQueryTemplate
    TemplateParameters:
      Name: ElemMatchLowSelectivityBadCaseTwoClauses
      ActivePhase: 22
      Filter:
        {nested: {$elemMatch: *LowSelectivityBadCaseTwoClauses}}

- ActorFromTemplate:
    TemplateName: FindQueryTemplate
    TemplateParameters:
      Name: ElemMatchHighSelectivityGoodCaseFourClauses
      ActivePhase: 23
      Filter:
        {nested: {$elemMatch: *HighSelectivityGoodCaseFourClauses}}

- ActorFromTemplate:
    TemplateName: FindQueryTemplate
    TemplateParameters:
      Name: ElemMatchMediumSelectivityGoodCaseFourClauses
      ActivePhase: 24
      Filter:
        {nested: {$elemMatch: *MediumSelectivityGoodCaseFourClauses}}

- ActorFromTemplate:
    TemplateName: FindQueryTemplate
    TemplateParameters:
      Name: ElemMatchLowSelectivityGoodCaseFourClauses
      ActivePhase: 25
      Filter:
        {nested: {$elemMatch: *LowSelectivityGoodCaseFourClauses}}

- ActorFromTemplate:
    TemplateName: FindQueryTemplate
    TemplateParameters:
      Name: ElemMatchHighSelectivityBadCaseFourClauses
      ActivePhase: 26
      Filter:
        {nested: {$elemMatch: *HighSelectivityBadCaseFourClauses}}

- ActorFromTemplate:
    TemplateName: FindQueryTemplate
    TemplateParameters:
      Name: ElemMatchMediumSelectivityBadCaseFourClauses
      ActivePhase: 27
      Filter:
        {nested: {$elemMatch: *MediumSelectivityBadCaseFourClauses}}

- ActorFromTemplate:
    TemplateName: FindQueryTemplate
    TemplateParameters:
      Name: ElemMatchLowSelectivityBadCaseFourClauses
      ActivePhase: 28
      Filter:
        {nested: {$elemMatch: *LowSelectivityBadCaseFourClauses}}

- ActorFromTemplate:
    TemplateName: FindQueryTemplate
    TemplateParameters:
      Name: ElemMatchHighSelectivityIndistinguishableByHeuristics
      ActivePhase: 29
      Filter:
        {nested: {$elemMatch: *HighSelectivityIndistinguishableByHeuristics}}

- ActorFromTemplate:
    TemplateName: FindQueryTemplate
    TemplateParameters:
      Name: ElemMatchMediumSelectivityIndistinguishableByHeuristics
      ActivePhase: 30
      Filter:
        {nested: {$elemMatch: *MediumSelectivityIndistinguishableByHeuristics}}

- ActorFromTemplate:
    TemplateName: FindQueryTemplate
    TemplateParameters:
      Name: ElemMatchLowSelectivityIndistinguishableByHeuristics
      ActivePhase: 31
      Filter:
        {nested: {$elemMatch: *LowSelectivityIndistinguishableByHeuristics}}
