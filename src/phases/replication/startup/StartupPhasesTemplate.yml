SchemaVersion: 2018-07-01
Owner: mongodb/server-replication"
Description: |
  Common definitions to support the workloads in replication/startup.

DefaultNumPhases: &default_max_phase 13

# The default document that will be inserted during 'InsertDataTemplate' will have its size
# determined by the 'padding' field.
Document: &Doc
  t: {^RandomInt: {min: 0, max: 10}}
  w: {^RandomInt: {distribution: geometric, p: 0.1}}
  x: 0
  y: 1000 # Same key for all documents.
  z: {^RandomInt: {min: 0, max: 2147483647}}  # This is for max int for low probability of conflicts
  int0: &int {^RandomInt: {min: 0, max: 2147483647}}
  int1: *int
  int2: *int
  # Generates numbers from [0, 200] which will result in multiple docs with the same value.
  int3: {^RandomInt: {distribution: binomial, t: 200, p: 0.5}}
  int4: *int
  int5: *int
  int6: *int
  int7: *int
  int8: *int
  int9: *int
  intArray:
  - 1000
  - 2000
  - 3000
  - 4000
  - 5000
  - 6000
  - 7000
  - 8000
  - 9000
  string0: &string {^RandomString: {length: {^RandomInt: {min: 5, max: 15}}}}
  string1: *string
  string2: *string
  string3: *string
  string4: *string
  string5: *string
  string6: *string
  string7: *string
  string8: *string
  string9: *string
  stringShort: {^RandomString: {length: 1}}
  stringLong: {^RandomString: {length: 100}}
  padding: {^FastRandomString: {length: {^Parameter: {Name: "approxDocumentSize", Default: 100}}}}

# The default indexes that will be used in the 'InsertDataTemplate'.
IndexesForLoader: &IndexesForLoader  # 10 indexes
- keys: {t: 1, w: 1}
- keys: {y: 1}
- keys: {t: 1, stringShort: 1}
- keys: {string0: 1}
- keys: {stringLong: 1}
- keys: {stringShort: 1, y: 1}
- keys: {int0: 1, int1: 1, int2: 1}
- keys: {int3: 1}
- keys: {int4: 1}
- keys: {int5: 1, int6: 1}

# The default indexes that will be used in the 'CreateIndexesTemplate'.
IndexesForCreateCmd: &IndexesForCreateCmd  # 10 indexes
- key: {t: 1, w: 1}
  name: "index_t_w"
- key: {y: 1}
  name: "index_y"
- key: {t: 1, stringShort: 1}
  name: "index_t_stringShort"
- key: {string0: 1}
  name: "index_string0"
- key: {stringLong: 1}
  name: "index_stringLong"
- key: {stringShort: 1, y: 1}
  name: "index_stringShort_y"
- key: {int0: 1, int1: 1, int2: 1}
  name: "index_int0_int1_int2"
- key: {int3: 1}
  name: "index_int3"
- key: {int4: 1}
  name: "index_int4"
- key: {int5: 1, int6: 1}
  name: "index_int5_int6"

# Template that uses the 'Loader' actor to create and populate collections for startup workloads.
InsertDataTemplate:
  Name: InsertData
  Type: Loader
  Threads: 100
  Phases:
    OnlyActiveInPhases:
      Active: {^Parameter: {Name: "active", Default: [0]}}
      NopInPhasesUpTo: {^Parameter: {Name: "nopInPhasesUpTo", Default: *default_max_phase}}
      PhaseConfig:
        Threads: 100
        Repeat: 1
        Database: {^Parameter: {Name: "database", Default: test}}
        CollectionCount: {^Parameter: {Name: "collectionCount", Default: 1}}
        DocumentCount: {^Parameter: {Name: "documentCount", Default: 1e6}}
        BatchSize: {^Parameter: {Name: "batchSize", Default: 10000}}
        Document: *Doc
        Indexes: {^Parameter: {Name: "indexes", Default: *IndexesForLoader}}

# Template that uses the 'CrudActor' to issue 'update' operations to random collections.
CrudOperationsTemplate:
  Name: CrudOperations
  Type: CrudActor
  # Each thread will randomly choose a collection within the provided collectionCount.
  Threads: {^Parameter: {Name: "numOfCollectionsTargeted", Default: 1}}
  Database: {^Parameter: {Name: "database", Default: test}}
  Phases:
    OnlyActiveInPhases:
      Active: {^Parameter: {Name: "active", Default: [0]}}
      NopInPhasesUpTo: {^Parameter: {Name: "nopInPhasesUpTo", Default: *default_max_phase}}
      PhaseConfig:
        Repeat: {^Parameter: {Name: "numOfCrudOpsPerCollection", Default: 1}}
        GlobalRate: 100 per 31 milliseconds
        CollectionCount: {^Parameter: {Name: "collectionCount", Default: 1}}
        Operations:
        - OperationName: updateMany
          OperationCommand:
            Filter: {y: {^RandomInt: {distribution: poisson, mean: 100}}}
            Update: {$inc: {x: 1}}

# Template that uses the 'CrudActor' to issue 'find' operations to random collections.
ReadOperationsTemplate:
  Name: ReadOperations
  Type: CrudActor
  # Each thread will randomly choose a collection within the provided collectionCount.
  Threads: {^Parameter: {Name: "numOfCollectionsTargeted", Default: 1}}
  Database: {^Parameter: {Name: "database", Default: test}}
  Phases:
    OnlyActiveInPhases:
      Active: {^Parameter: {Name: "active", Default: [0]}}
      NopInPhasesUpTo: {^Parameter: {Name: "nopInPhasesUpTo", Default: *default_max_phase}}
      PhaseConfig:
        Repeat: {^Parameter: {Name: "numOfReadOpsPerCollection", Default: 1}}
        GlobalRate: 100 per 31 milliseconds
        CollectionCount: {^Parameter: {Name: "collectionCount", Default: 1}}
        Operations:
        - OperationName: find
          OperationCommand:
            Filter: {y: {^RandomInt: {distribution: poisson, mean: 100}}}
            Options:
              Limit: 100

# Template that uses the 'RunCommand' to create indexes for a specific collection.
CreateIndexesTemplate:
  Name: IndexCollection
  Type: RunCommand
  Threads: 1
  Phases:
    OnlyActiveInPhases:
      Active: {^Parameter: {Name: "active", Default: [0]}}
      NopInPhasesUpTo: {^Parameter: {Name: "nopInPhasesUpTo", Default: *default_max_phase}}
      PhaseConfig:
        Duration: 2 seconds
        Database: {^Parameter: {Name: "database", Default: test}}
        # Stepdown will cause the command to return with error.
        ThrowOnFailure: false
        Operations:
        - OperationName: RunCommand
          OperationCommand:
            dropIndexes: {^Parameter: {Name: "collection", Default: Collection0}}
            # This will drop all non-essential indexes (_id and any shard key index remain)
            index: '*'
        - OperationName: RunCommand
          OperationCommand:
            createIndexes: {^Parameter: {Name: "collection", Default: Collection0}}
            indexes: {^Parameter: {Name: "indexes", Default: *IndexesForCreateCmd}}

# Template that waits 10 seconds then uses the 'AdminCommand' to initiate a primary stepdown and
# then subsequently step it up again.
StepdownStepupCommandTemplate:
  Name: StepdownStepupCommand
  Type: AdminCommand
  Threads: 1
  Phases:
    OnlyActiveInPhases:
      Active: {^Parameter: {Name: "active", Default: [0]}}
      NopInPhasesUpTo: {^Parameter: {Name: "nopInPhasesUpTo", Default: *default_max_phase}}
      PhaseConfig:
        Repeat: 1
        SleepBefore: 10 seconds
        ThrowOnFailure: false
        Operations:
        - OperationMetricsName: "Stepdown"
          OperationName: AdminCommand
          OperationCommand:
            replSetStepDown: 60
          OperationAwaitStepdown: true
        - OperationMetricsName: "StepUp"
          OperationName: AdminCommand
          OperationCommand:
            replSetStepUp: 1

# Template that uses the 'AdminCommand' to enable 'disableSnapshotting' failpoint which stops mongod
# from taking more checkpoints.
StopCheckpointTemplate:
  Name: StopCheckpoint
  Type: AdminCommand
  Threads: 1
  Phases:
    OnlyActiveInPhases:
      Active: {^Parameter: {Name: "active", Default: [0]}}
      NopInPhasesUpTo: {^Parameter: {Name: "nopInPhasesUpTo", Default: *default_max_phase}}
      PhaseConfig:
        Repeat: 1
        Database: admin
        Operations:
        - OperationName: AdminCommand
          OperationCommand:
            configureFailPoint: "disableSnapshotting"
            mode: "alwaysOn"

# Template that uses the 'AdminCommand' to enable 'hangAfterInitializingIndexBuild' failpoint which
# hangs any index build.
HangIndexBuildTemplate:
  Name: StopIndexBuild
  Type: AdminCommand
  Threads: 1
  Phases:
    OnlyActiveInPhases:
      Active: {^Parameter: {Name: "active", Default: [0]}}
      NopInPhasesUpTo: {^Parameter: {Name: "nopInPhasesUpTo", Default: *default_max_phase}}
      PhaseConfig:
        Repeat: 1
        Database: admin
        Operations:
        - OperationName: AdminCommand
          OperationCommand:
            configureFailPoint: "hangAfterInitializingIndexBuild"
            mode: "alwaysOn"

# Template that uses the 'AdminCommand' to set default write concern to local.
SetDefaultWCToLocalTemplate:
  Name: SetDefaultWCToLocal
  Type: AdminCommand
  Threads: 1
  Phases:
    OnlyActiveInPhases:
      Active: {^Parameter: {Name: "active", Default: [0]}}
      NopInPhasesUpTo: {^Parameter: {Name: "nopInPhasesUpTo", Default: *default_max_phase}}
      PhaseConfig:
        Repeat: 1
        Database: admin
        Operations:
        - OperationName: AdminCommand
          OperationCommand:
            setDefaultRWConcern: 1
            defaultWriteConcern: {"w": 1}
