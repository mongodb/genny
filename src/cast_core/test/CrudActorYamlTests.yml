---

# Syntax is inspired by the Crud driver specs:
# https://github.com/mongodb/specifications/tree/master/source/crud/tests
# but modified for casing and to eliminate some boilerplate. Idea is that
# if we wanted to translate these tests to exactly the above spec it could
# be a trivial data-format conversion.
#
# Exception to this:
#
# - OutcomeCounts: is a shortcut these tests take to avoid having to
#   specify every single document in the collection.
#
# - Error: indicates a string of what type of error (syntax error
#   encountered during setup or a runtime error
#
# - name: (omitted) we always assume everything happens on the same db and collection
#
# - ExpectedCollectionsExist: allows tests to assert that a collection has been
#   created or dropped.
#

Tests:

  - Description: Inserts documents into the database.
    Operations:
      - OperationName: bulkWrite
        OperationCommand:
          WriteOperations:
            - WriteCommand: insertOne
              Document: { a: 1 }
    OutcomeData:
      - {a: 1}

  - Description: BulkWrite insert, delete, then re-insert
    Operations:
      - OperationName: bulkWrite
        OperationCommand:
          WriteOperations:
            - WriteCommand: insertOne
              Document: { a: 1 }
            - WriteCommand: deleteOne
              Filter: { a: 1 }
            - WriteCommand: insertOne
              Document: { a: 2 }
    OutcomeData:
      - {a: 2}

  - Description: Inserts and updates document in the database.
    Operations:
      - OperationName: bulkWrite
        OperationCommand:
          WriteOperations:
            - WriteCommand: insertOne
              Document: { a: 1 }
            - WriteCommand: updateOne
              Filter: { a: 1 }
              Update: { $set: { a: 5 } }
    OutcomeData:
      - {a: 5}

  - Description: Inserts and deletes documents in the database.
    Operations:
      - OperationName: bulkWrite
        OperationCommand:
          WriteOperations:
            - WriteCommand: insertOne
              Document: { a: 1 }
            - WriteCommand: deleteOne
              Filter: { a: 1 }
            - WriteCommand: insertOne
              Document: { a: 2 }
    OutcomeData:
      - {a: 2}

  - Description: Inserts and replaces document in the database.
    Operations:
      - OperationName: bulkWrite
        OperationCommand:
          WriteOperations:
            - WriteCommand: insertOne
              Document: { a: 1 }
            - WriteCommand: replaceOne
              Filter: { a : 1 }
              Replacement: { name: test }
    OutcomeData:
      - {name: test}

  - Description: Inserts and updates with 'BypassDocumentValidation' true and 'Ordered' false.
    Operations:
      - OperationName: bulkWrite
        OperationCommand:
          WriteOperations:
            - WriteCommand: insertOne
              Document: { a: 1 }
            - WriteCommand: updateOne
              Filter: { a: 1 }
              Update: { $set: { a: 5 } }
          Options:
            Ordered: false
            BypassDocumentValidation: true
    OutcomeData:
      - {a: 5}
    ExpectAllEvents:
      ordered: false
      bypassDocumentValidation: true

  - Description: Inserts and updates many documents in the database.
    Operations:
      - OperationName: bulkWrite
        OperationCommand:
          WriteOperations:
            - WriteCommand: insertOne
              Document: { a: {^RandomInt: {min: 5, max: 15} } }
            - WriteCommand: insertOne
              Document: { a: {^RandomInt: {min: 5, max: 15} } }
            - WriteCommand: insertOne
              Document: { a: {^RandomInt: {min: 5, max: 15} } }
            - WriteCommand: updateMany
              Filter: { a: {$gte: 5} }
              Update: { $set: { a: 1 } }
    OutcomeCounts:
      - Filter: {a: 1}
        Count: 3

  - Description: Inserts and deletes many documents in the database.
    Operations:
      - OperationName: bulkWrite
        OperationCommand:
          WriteOperations:
            - WriteCommand: insertOne
              Document: { a: {^RandomInt: {min: 5, max: 15} } }
            - WriteCommand: insertOne
              Document: { a: {^RandomInt: {min: 5, max: 15} } }
            - WriteCommand: insertOne
              Document: { a: {^RandomInt: {min: 5, max: 15} } }
            - WriteCommand: deleteMany
              Filter: { a: {$gte: 5} }
    OutcomeCounts:
      - Filter: {a: {$gte: 5}}
        Count: 0

  - Description: Insert randomly generated doc and update with write concern majority.
    Operations:
      - OperationName: bulkWrite
        OperationCommand:
          WriteOperations:
            - WriteCommand: insertOne
              Document: { a: {^RandomInt: {min: 2, max: 5} }}
            - WriteCommand: updateOne
              Filter: { a: { $gte: 2 } }
              Update: { $set: { a: 8 } }
          Options:
            WriteConcern:
              Level: majority
              Timeout: 6000 milliseconds
    OutcomeCounts:
      - Filter: {a: 8}
        Count: 1
    ExpectAllEvents:
      writeConcern:
        w: majority
        wtimeout: 6000

  - Description: Write concern without 'Level' field should throw.
    Operations:
      - OperationName: bulkWrite
        OperationCommand:
          WriteOperations:
            - WriteCommand: insertOne
              Document: { a: 1 }
            - WriteCommand: updateOne
              Filter: { a: 1 }
              Update: { $set: { a: 5 } }
          Options:
            WriteConcern:
              Timeout: 3000 milliseconds
              Journal: false
    Error: '.*bad conversion.*$'

  - Description: The 'test' collection is dropped with write concern majority.
    Operations:
      - OperationName: drop
        OperationCommand:
          Collection: test
    ExpectedCollectionsExist:
      test: false

  - Description: The 'test' collection is dropped with write concern majority.
    Operations:
      - OperationName: drop
        OperationCommand:
          Options:
            WriteConcern:
              Level: majority
    ExpectedCollectionsExist:
      test: false
    ExpectAllEvents:
      writeConcern: {w: majority}

  - Description: Write concern majority with timeout.
    Operations:
      - OperationName: bulkWrite
        OperationCommand:
          WriteOperations:
            - WriteCommand: insertOne
              Document: { a: 1 }
            - WriteCommand: updateOne
              Filter: { a: 1 }
              Update: { $set: { a: 5 } }
          Options:
            WriteConcern:
              Level: majority
              Timeout: 5000 milliseconds
    ExpectAllEvents:
      writeConcern:
        w: majority
        wtimeout: 5000

  - Description: Write concern 1 with timeout and journalling true.
    Operations:
      - OperationName: bulkWrite
        OperationCommand:
          WriteOperations:
            - WriteCommand: insertOne
              Document: { a: 1 }
            - WriteCommand: updateOne
              Filter: { a: 1 }
              Update: { $set: { a: 5 } }
          Options:
            WriteConcern:
              Level: 1
              Timeout: 2500 milliseconds
              Journal: true
    ExpectAllEvents:
      writeConcern:
        w: 1
        wtimeout: 2500
        j: true

  - Description: Write concern 0 with timeout and journalling false.
    Operations:
      - OperationName: bulkWrite
        OperationCommand:
          WriteOperations:
            - WriteCommand: insertOne
              Document: { a: 1 }
            - WriteCommand: updateOne
              Filter: { a: 1 }
              Update: { $set: { a: 5 } }
          Options:
            Ordered: true
            WriteConcern:
              Level: 0
              Timeout: 3000 milliseconds
              Journal: false
    ExpectAllEvents:
      writeConcern:
        w: 0
        wtimeout: 3000
        j: false
        ordered: true

  - Description: Invalid write concern level should throw.
    Operations:
      - OperationName: bulkWrite
        OperationCommand:
          WriteOperations:
            - WriteCommand: insertOne
              Document: { a: 1 }
            - WriteCommand: updateOne
              Filter: { a: 1 }
              Update: { $set: { a: 5 } }
          Options:
            WriteConcern:
              Level: infinite
    Error: '.*bad conversion.*'

  - Description: Read preference is 'secondaryPreferred'.
    Operations:
      - OperationName: countDocuments
        OperationCommand:
          Filter: { a : 1 }
          Options:
            ReadPreference:
              ReadMode: secondaryPreferred
    ExpectAllEvents:
      $readPreference:
        mode: secondaryPreferred

  - Description: Read preference is 'secondaryPreferred' in find.
    Operations:
      - OperationName: find
        OperationCommand:
          Filter: { a : 1 }
          Options:
            ReadPreference:
              ReadMode: secondaryPreferred
    ExpectAllEvents:
      $readPreference:
        mode: secondaryPreferred

  - Description: Read preference is 'secondaryPreferred' in findOne.
    Operations:
      - OperationName: findOne
        OperationCommand:
          Filter: { a : 1 }
          Options:
            ReadPreference:
              ReadMode: secondaryPreferred
    ExpectAllEvents:
      $readPreference:
        mode: secondaryPreferred

  - Description: Read preference is 'nearest' with MaxStaleness set.
    Operations:
      - OperationName: countDocuments
        OperationCommand:
          Filter: { a: 1 }
          Options:
            ReadPreference:
              ReadMode: nearest
              MaxStaleness: 100 seconds
    ExpectAllEvents:
      $readPreference:
        mode: nearest
        maxStalenessSeconds: 100

  - Description: Read preference without 'ReadMode' should throw.
    Operations:
      - OperationName: countDocuments
        OperationCommand:
          Filter: { a: 1 }
          Options:
            ReadPreference:
              MaxStaleness: 100 seconds
    Error: '.*bad conversion.*'

  - Description: Read preference with invalid 'ReadMode' should throw.
    Operations:
      - OperationName: countDocuments
        OperationCommand:
          Filter: { a : 1 }
          Options:
            ReadPreference:
              ReadMode: badReadMode
    Error: '.*bad conversion.*'

  - Description: estimatedDocumentCount can also specify ReadMode, MaxStaleness
    Operations:
      - OperationName: estimatedDocumentCount
        OperationCommand:
          Options:
            ReadPreference:
              ReadMode: nearest
              MaxStaleness: 100 seconds
    ExpectAllEvents:
      $readPreference:
        mode: nearest
        maxStalenessSeconds: 100

  - Description: Delete a document in a collection.
    Operations:
      - OperationName: bulkWrite
        OperationCommand:
          WriteOperations:
            - WriteCommand: insertOne
              Document: { a: 1 }
      - OperationName: deleteOne
        OperationCommand:
          Filter: { a: 1 }
    OutcomeCounts:
      - Filter: {a: 1}
        Count: 0

  - Description: The correct documents are inserted.
    Operations:
      - OperationName: insertMany
        OperationCommand:
          Documents:
            - { a: 1 }
            - { a: 1 }
            - { b: 1 }
    OutcomeCounts:
      - Filter: {a: 1}
        Count: 2
      - Filter: {b: 1}
        Count: 1

  - Description: Insert a document into a collection.
    Operations:
      - OperationName: insertOne
        OperationCommand:
          Document: { a: 1 }
    OutcomeData:
      - {a: 1}

  - Description: Insert and replace document in a collection.
    Operations:
      - OperationName: insertOne
        OperationCommand:
          Document: { a: 1 }
      - OperationName: replaceOne
        OperationCommand:
          Filter: { a: 1 }
          Replacement: { newfile: test }
    OutcomeCounts:
      - Filter: {a: 1}
        Count: 0
      - Filter: {newfile: test}
        Count: 1

  - Description: Insert and update document in a collection.
    Operations:
      - OperationName: insertOne
        OperationCommand:
          Document: { a: 1 }
      - OperationName: updateOne
        OperationCommand:
          Filter: { a: 1 }
          Update: { $set: { a: 10 } }
    OutcomeCounts:
      - Filter: {a: 1}
        Count: 0
      - Filter: {a: 10}
        Count: 1

  - Description: Insert and update multiple documents in a collection.
    Operations:
      - OperationName: insertOne
        OperationCommand:
          Document: { a: {^RandomInt: {min: 5, max: 15} } }
      - OperationName: insertOne
        OperationCommand:
          Document: { a: {^RandomInt: {min: 5, max: 15} } }
      - OperationName: updateMany
        OperationCommand:
          Filter: { a: { $gte: 5 } }
          Update: { $set: { a: 2 } }
    OutcomeCounts:
      - Filter: {a: {$gte: 5}}
        Count: 0
      - Filter: {a: 2}
        Count: 2

  - Description: Delete multiple documents in a collection.
    Operations:
      - OperationName: insertOne
        OperationCommand:
          Document: { a: 1 }
      - OperationName: insertOne
        OperationCommand:
          Document: { a: 1 }
      - OperationName: deleteMany
        OperationCommand:
          Filter: { a: 1 }
    OutcomeCounts:
      - Filter: {a: 1}
        Count: 0

  - Description: simple findOneAndUpdate
    Operations:
      - OperationName: insertOne
        OperationCommand:
          Document: {a: 100}
      - OperationName: findOneAndUpdate
        OperationCommand:
          Filter: {a: 100}
          Update: {$inc: {a: 13}}
    OutcomeCounts:
      - Filter: {a: 113}
        Count: 1

  - Description: simple findOneAndDelete
    Operations:
      - OperationName: insertOne
        OperationCommand:
          Document: {a: 100}
      - OperationName: findOneAndDelete
        OperationCommand:
          Filter: {a: 100}
    OutcomeCounts:
      - Filter: {a: 100}
        Count: 0

  - Description: simple findOneAndReplace
    Operations:
      - OperationName: insertOne
        OperationCommand:
          Document: {a: 100}
      - OperationName: findOneAndReplace
        OperationCommand:
          Filter: {a: 100}
          Replacement: {a: 30}
    OutcomeCounts:
      - Filter: {a: 100}
        Count: 0
      - Filter: {a: 30}
        Count: 1

  - Description: Simple createIndex
    Operations:
      - OperationName: createIndex
        OperationCommand:
          Keys: {a: 1}
          IndexOptions: {}
      - OperationName: insertOne
        OperationCommand:
          Document: {a: 100}
    OutcomeCounts:
      - Filter: {a: 100}
        Count: 1

  - Description: createIndex and then throw on dupes
    Operations:
      - OperationName: createIndex
        OperationCommand:
          Keys: {a: 1}
          IndexOptions: {unique: true}
      - OperationName: insertOne
        OperationCommand:
          Document: {a: 100}
      - OperationName: insertOne
        OperationCommand:
          Document: {a: 100}
    Error: |
      .*duplicate key error collection: mydb.test.*

  - Description: createIndex can swallow dupe errors
    Operations:
      - OperationName: createIndex
        OperationCommand:
          Keys: {a: 1}
          IndexOptions: {unique: true}
      - OperationName: insertOne
        OperationCommand:
          Document: {a: 100}
      - OperationName: insertOne
        OperationCommand:
          ThrowOnFailure: false
          Document: {a: 100}
    OutcomeCounts:
      - Filter: {a: 100}
        Count: 1

  - Description: set ReadConcern on a find in a transaction without OnSession
    Operations:
      - OperationName: startTransaction
      - OperationName: setReadConcern
        OperationCommand:
          ReadConcern:
            Level: local
      - OperationName: insertOne
        OperationCommand:
          Document: {a: 1}
      - OperationName: find
        OperationCommand:
          Filter: {a: 1}
      - OperationName: commitTransaction
    OutcomeCounts:
      - Filter: {a: 1}
        Count: 1
    AssertNumTransactionsCommitted: 0

  - Description: set ReadConcern on a find in a transaction
    Operations:
      - OperationName: startTransaction
      - OperationName: setReadConcern
        OperationCommand:
          ReadConcern:
            Level: local
          OnSession: true
      - OperationName: insertOne
        OperationCommand:
          Document: {a: 1}
          OnSession: true
      - OperationName: find
        OperationCommand:
          Filter: {a: 1}
          OnSession: true
      - OperationName: commitTransaction
    OutcomeCounts:
      - Filter: {a: 1}
        Count: 1
    AssertNumTransactionsCommitted: 1

  - Description: set WriteConcern 1 on an InsertOne
    Operations:
      - OperationName: insertOne
        OperationCommand:
          Document: {a: 1}
        OperationOptions:
          WriteConcern: { Level: 1 }
          Timeout: 6000 milliseconds
    OutcomeCounts:
      - Filter: {a: 1}
        Count: 1
    AssertNumTransactionsCommitted: 0

  - Description: simple findOneAndReplace in a withTransaction without OnSession
    Operations:
      - OperationName: withTransaction
        OperationCommand:
          OperationsInTransaction:
            - OperationName: insertOne
              OperationCommand:
                Document: {a: 100}
            - OperationName: findOneAndReplace
              OperationCommand:
                Filter: {a: 100}
                Replacement: {a: 30}
    OutcomeCounts:
      - Filter: {a: 100}
        Count: 0
      - Filter: {a: 30}
        Count: 1
    AssertNumTransactionsCommitted: 0

  - Description: simple findOneAndReplace in a withTransaction with OnSession
    Operations:
      - OperationName: withTransaction
        OperationCommand:
          OnSession: true
          OperationsInTransaction:
            - OperationName: insertOne
              OperationCommand:
                Document: {a: 100}
            - OperationName: findOneAndReplace
              OperationCommand:
                Filter: {a: 100}
                Replacement: {a: 30}
    OutcomeCounts:
      - Filter: {a: 100}
        Count: 0
      - Filter: {a: 30}
        Count: 1
    AssertNumTransactionsCommitted: 1

  - Description: WithTransaction, BulkWrite insert, delete, then re-insert without OnSession on bulkWrite
    Operations:
      - OperationName: withTransaction
        OperationCommand:
          OperationsInTransaction:
          - OperationName: bulkWrite
            OperationCommand:
              WriteOperations:
                - WriteCommand: insertOne
                  Document: { a: 1 }
                - WriteCommand: deleteOne
                  Filter: { a: 1 }
                - WriteCommand: insertOne
                  Document: { a: 2 }
    OutcomeData:
      - {a: 2}
    AssertNumTransactionsCommitted: 0

  - Description: WithTransaction, BulkWrite insert, delete, then re-insert with OnSession on bulkWrite
    Operations:
      - OperationName: withTransaction
        OperationCommand:
          OnSession: false
          OperationsInTransaction:
          - OperationName: bulkWrite
            OperationCommand:
              OnSession: true
              WriteOperations:
                - WriteCommand: insertOne
                  Document: { a: 1 }
                - WriteCommand: deleteOne
                  Filter: { a: 1 }
                - WriteCommand: insertOne
                  Document: { a: 2 }
    OutcomeData:
      - {a: 2}
    AssertNumTransactionsCommitted: 1
