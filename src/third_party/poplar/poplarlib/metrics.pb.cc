// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metrics.proto

#include "metrics.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace poplar {
PROTOBUF_CONSTEXPR IntervalSummary::IntervalSummary(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.collector_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.value_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct IntervalSummaryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IntervalSummaryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~IntervalSummaryDefaultTypeInternal() {}
  union {
    IntervalSummary _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IntervalSummaryDefaultTypeInternal _IntervalSummary_default_instance_;
PROTOBUF_CONSTEXPR SummaryIntegerSlice::SummaryIntegerSlice(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.value_)*/{}
  , /*decltype(_impl_._value_cached_byte_size_)*/{0}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SummaryIntegerSliceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SummaryIntegerSliceDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SummaryIntegerSliceDefaultTypeInternal() {}
  union {
    SummaryIntegerSlice _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SummaryIntegerSliceDefaultTypeInternal _SummaryIntegerSlice_default_instance_;
PROTOBUF_CONSTEXPR SummaryInteger::SummaryInteger(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.value_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SummaryIntegerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SummaryIntegerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SummaryIntegerDefaultTypeInternal() {}
  union {
    SummaryInteger _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SummaryIntegerDefaultTypeInternal _SummaryInteger_default_instance_;
PROTOBUF_CONSTEXPR SummaryDoubleSlice::SummaryDoubleSlice(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.value_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SummaryDoubleSliceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SummaryDoubleSliceDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SummaryDoubleSliceDefaultTypeInternal() {}
  union {
    SummaryDoubleSlice _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SummaryDoubleSliceDefaultTypeInternal _SummaryDoubleSlice_default_instance_;
PROTOBUF_CONSTEXPR SummaryDouble::SummaryDouble(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.value_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SummaryDoubleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SummaryDoubleDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SummaryDoubleDefaultTypeInternal() {}
  union {
    SummaryDouble _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SummaryDoubleDefaultTypeInternal _SummaryDouble_default_instance_;
}  // namespace poplar
static ::_pb::Metadata file_level_metadata_metrics_2eproto[5];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_metrics_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_metrics_2eproto = nullptr;

const uint32_t TableStruct_metrics_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::poplar::IntervalSummary, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::poplar::IntervalSummary, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::poplar::IntervalSummary, _impl_.collector_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::poplar::IntervalSummary, _impl_.value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::poplar::SummaryIntegerSlice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::poplar::SummaryIntegerSlice, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::poplar::SummaryIntegerSlice, _impl_.value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::poplar::SummaryInteger, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::poplar::SummaryInteger, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::poplar::SummaryInteger, _impl_.value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::poplar::SummaryDoubleSlice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::poplar::SummaryDoubleSlice, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::poplar::SummaryDoubleSlice, _impl_.value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::poplar::SummaryDouble, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::poplar::SummaryDouble, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::poplar::SummaryDouble, _impl_.value_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::poplar::IntervalSummary)},
  { 12, -1, -1, sizeof(::poplar::SummaryIntegerSlice)},
  { 20, -1, -1, sizeof(::poplar::SummaryInteger)},
  { 28, -1, -1, sizeof(::poplar::SummaryDoubleSlice)},
  { 36, -1, -1, sizeof(::poplar::SummaryDouble)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::poplar::_IntervalSummary_default_instance_._instance,
  &::poplar::_SummaryIntegerSlice_default_instance_._instance,
  &::poplar::_SummaryInteger_default_instance_._instance,
  &::poplar::_SummaryDoubleSlice_default_instance_._instance,
  &::poplar::_SummaryDouble_default_instance_._instance,
};

const char descriptor_table_protodef_metrics_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rmetrics.proto\022\006poplar\032\014poplar.proto\"\351\001"
  "\n\017IntervalSummary\022\021\n\tcollector\030\001 \001(\t\022(\n\006"
  "number\030\002 \001(\0132\026.poplar.SummaryIntegerH\000\0224"
  "\n\rnumber_values\030\003 \001(\0132\033.poplar.SummaryIn"
  "tegerSliceH\000\022&\n\005point\030\004 \001(\0132\025.poplar.Sum"
  "maryDoubleH\000\0222\n\014point_values\030\005 \001(\0132\032.pop"
  "lar.SummaryDoubleSliceH\000B\007\n\005value\"2\n\023Sum"
  "maryIntegerSlice\022\014\n\004name\030\001 \001(\t\022\r\n\005value\030"
  "\002 \003(\003\"-\n\016SummaryInteger\022\014\n\004name\030\001 \001(\t\022\r\n"
  "\005value\030\002 \001(\003\"1\n\022SummaryDoubleSlice\022\014\n\004na"
  "me\030\001 \001(\t\022\r\n\005value\030\002 \003(\001\",\n\rSummaryDouble"
  "\022\014\n\004name\030\001 \001(\t\022\r\n\005value\030\002 \001(\0012\300\002\n\026Poplar"
  "MetricsCollector\022@\n\017CreateCollector\022\025.po"
  "plar.CreateOptions\032\026.poplar.PoplarRespon"
  "se\022:\n\016CloseCollector\022\020.poplar.PoplarID\032\026"
  ".poplar.PoplarResponse\0227\n\013ResetSample\022\020."
  "poplar.PoplarID\032\026.poplar.PoplarResponse\022"
  "7\n\013FlushSample\022\020.poplar.PoplarID\032\026.popla"
  "r.PoplarResponse\0226\n\003Add\022\027.poplar.Interva"
  "lSummary\032\026.poplar.PoplarResponseB\nZ\010inte"
  "rnalb\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_metrics_2eproto_deps[1] = {
  &::descriptor_table_poplar_2eproto,
};
static ::_pbi::once_flag descriptor_table_metrics_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_metrics_2eproto = {
    false, false, 812, descriptor_table_protodef_metrics_2eproto,
    "metrics.proto",
    &descriptor_table_metrics_2eproto_once, descriptor_table_metrics_2eproto_deps, 1, 5,
    schemas, file_default_instances, TableStruct_metrics_2eproto::offsets,
    file_level_metadata_metrics_2eproto, file_level_enum_descriptors_metrics_2eproto,
    file_level_service_descriptors_metrics_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_metrics_2eproto_getter() {
  return &descriptor_table_metrics_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_metrics_2eproto(&descriptor_table_metrics_2eproto);
namespace poplar {

// ===================================================================

class IntervalSummary::_Internal {
 public:
  static const ::poplar::SummaryInteger& number(const IntervalSummary* msg);
  static const ::poplar::SummaryIntegerSlice& number_values(const IntervalSummary* msg);
  static const ::poplar::SummaryDouble& point(const IntervalSummary* msg);
  static const ::poplar::SummaryDoubleSlice& point_values(const IntervalSummary* msg);
};

const ::poplar::SummaryInteger&
IntervalSummary::_Internal::number(const IntervalSummary* msg) {
  return *msg->_impl_.value_.number_;
}
const ::poplar::SummaryIntegerSlice&
IntervalSummary::_Internal::number_values(const IntervalSummary* msg) {
  return *msg->_impl_.value_.number_values_;
}
const ::poplar::SummaryDouble&
IntervalSummary::_Internal::point(const IntervalSummary* msg) {
  return *msg->_impl_.value_.point_;
}
const ::poplar::SummaryDoubleSlice&
IntervalSummary::_Internal::point_values(const IntervalSummary* msg) {
  return *msg->_impl_.value_.point_values_;
}
void IntervalSummary::set_allocated_number(::poplar::SummaryInteger* number) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_value();
  if (number) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(number);
    if (message_arena != submessage_arena) {
      number = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, number, submessage_arena);
    }
    set_has_number();
    _impl_.value_.number_ = number;
  }
  // @@protoc_insertion_point(field_set_allocated:poplar.IntervalSummary.number)
}
void IntervalSummary::set_allocated_number_values(::poplar::SummaryIntegerSlice* number_values) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_value();
  if (number_values) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(number_values);
    if (message_arena != submessage_arena) {
      number_values = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, number_values, submessage_arena);
    }
    set_has_number_values();
    _impl_.value_.number_values_ = number_values;
  }
  // @@protoc_insertion_point(field_set_allocated:poplar.IntervalSummary.number_values)
}
void IntervalSummary::set_allocated_point(::poplar::SummaryDouble* point) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_value();
  if (point) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(point);
    if (message_arena != submessage_arena) {
      point = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, point, submessage_arena);
    }
    set_has_point();
    _impl_.value_.point_ = point;
  }
  // @@protoc_insertion_point(field_set_allocated:poplar.IntervalSummary.point)
}
void IntervalSummary::set_allocated_point_values(::poplar::SummaryDoubleSlice* point_values) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_value();
  if (point_values) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(point_values);
    if (message_arena != submessage_arena) {
      point_values = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, point_values, submessage_arena);
    }
    set_has_point_values();
    _impl_.value_.point_values_ = point_values;
  }
  // @@protoc_insertion_point(field_set_allocated:poplar.IntervalSummary.point_values)
}
IntervalSummary::IntervalSummary(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:poplar.IntervalSummary)
}
IntervalSummary::IntervalSummary(const IntervalSummary& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  IntervalSummary* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.collector_){}
    , decltype(_impl_.value_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.collector_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.collector_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_collector().empty()) {
    _this->_impl_.collector_.Set(from._internal_collector(), 
      _this->GetArenaForAllocation());
  }
  clear_has_value();
  switch (from.value_case()) {
    case kNumber: {
      _this->_internal_mutable_number()->::poplar::SummaryInteger::MergeFrom(
          from._internal_number());
      break;
    }
    case kNumberValues: {
      _this->_internal_mutable_number_values()->::poplar::SummaryIntegerSlice::MergeFrom(
          from._internal_number_values());
      break;
    }
    case kPoint: {
      _this->_internal_mutable_point()->::poplar::SummaryDouble::MergeFrom(
          from._internal_point());
      break;
    }
    case kPointValues: {
      _this->_internal_mutable_point_values()->::poplar::SummaryDoubleSlice::MergeFrom(
          from._internal_point_values());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:poplar.IntervalSummary)
}

inline void IntervalSummary::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.collector_){}
    , decltype(_impl_.value_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  _impl_.collector_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.collector_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  clear_has_value();
}

IntervalSummary::~IntervalSummary() {
  // @@protoc_insertion_point(destructor:poplar.IntervalSummary)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void IntervalSummary::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.collector_.Destroy();
  if (has_value()) {
    clear_value();
  }
}

void IntervalSummary::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void IntervalSummary::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:poplar.IntervalSummary)
  switch (value_case()) {
    case kNumber: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.value_.number_;
      }
      break;
    }
    case kNumberValues: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.value_.number_values_;
      }
      break;
    }
    case kPoint: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.value_.point_;
      }
      break;
    }
    case kPointValues: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.value_.point_values_;
      }
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}


void IntervalSummary::Clear() {
// @@protoc_insertion_point(message_clear_start:poplar.IntervalSummary)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.collector_.ClearToEmpty();
  clear_value();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IntervalSummary::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string collector = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_collector();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "poplar.IntervalSummary.collector"));
        } else
          goto handle_unusual;
        continue;
      // .poplar.SummaryInteger number = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_number(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .poplar.SummaryIntegerSlice number_values = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_number_values(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .poplar.SummaryDouble point = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_point(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .poplar.SummaryDoubleSlice point_values = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_point_values(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* IntervalSummary::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:poplar.IntervalSummary)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string collector = 1;
  if (!this->_internal_collector().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_collector().data(), static_cast<int>(this->_internal_collector().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "poplar.IntervalSummary.collector");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_collector(), target);
  }

  // .poplar.SummaryInteger number = 2;
  if (_internal_has_number()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::number(this),
        _Internal::number(this).GetCachedSize(), target, stream);
  }

  // .poplar.SummaryIntegerSlice number_values = 3;
  if (_internal_has_number_values()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::number_values(this),
        _Internal::number_values(this).GetCachedSize(), target, stream);
  }

  // .poplar.SummaryDouble point = 4;
  if (_internal_has_point()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::point(this),
        _Internal::point(this).GetCachedSize(), target, stream);
  }

  // .poplar.SummaryDoubleSlice point_values = 5;
  if (_internal_has_point_values()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::point_values(this),
        _Internal::point_values(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:poplar.IntervalSummary)
  return target;
}

size_t IntervalSummary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:poplar.IntervalSummary)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string collector = 1;
  if (!this->_internal_collector().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_collector());
  }

  switch (value_case()) {
    // .poplar.SummaryInteger number = 2;
    case kNumber: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_.number_);
      break;
    }
    // .poplar.SummaryIntegerSlice number_values = 3;
    case kNumberValues: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_.number_values_);
      break;
    }
    // .poplar.SummaryDouble point = 4;
    case kPoint: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_.point_);
      break;
    }
    // .poplar.SummaryDoubleSlice point_values = 5;
    case kPointValues: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_.point_values_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData IntervalSummary::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    IntervalSummary::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*IntervalSummary::GetClassData() const { return &_class_data_; }


void IntervalSummary::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<IntervalSummary*>(&to_msg);
  auto& from = static_cast<const IntervalSummary&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:poplar.IntervalSummary)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_collector().empty()) {
    _this->_internal_set_collector(from._internal_collector());
  }
  switch (from.value_case()) {
    case kNumber: {
      _this->_internal_mutable_number()->::poplar::SummaryInteger::MergeFrom(
          from._internal_number());
      break;
    }
    case kNumberValues: {
      _this->_internal_mutable_number_values()->::poplar::SummaryIntegerSlice::MergeFrom(
          from._internal_number_values());
      break;
    }
    case kPoint: {
      _this->_internal_mutable_point()->::poplar::SummaryDouble::MergeFrom(
          from._internal_point());
      break;
    }
    case kPointValues: {
      _this->_internal_mutable_point_values()->::poplar::SummaryDoubleSlice::MergeFrom(
          from._internal_point_values());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void IntervalSummary::CopyFrom(const IntervalSummary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:poplar.IntervalSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IntervalSummary::IsInitialized() const {
  return true;
}

void IntervalSummary::InternalSwap(IntervalSummary* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.collector_, lhs_arena,
      &other->_impl_.collector_, rhs_arena
  );
  swap(_impl_.value_, other->_impl_.value_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata IntervalSummary::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_metrics_2eproto_getter, &descriptor_table_metrics_2eproto_once,
      file_level_metadata_metrics_2eproto[0]);
}

// ===================================================================

class SummaryIntegerSlice::_Internal {
 public:
};

SummaryIntegerSlice::SummaryIntegerSlice(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:poplar.SummaryIntegerSlice)
}
SummaryIntegerSlice::SummaryIntegerSlice(const SummaryIntegerSlice& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SummaryIntegerSlice* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){from._impl_.value_}
    , /*decltype(_impl_._value_cached_byte_size_)*/{0}
    , decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:poplar.SummaryIntegerSlice)
}

inline void SummaryIntegerSlice::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){arena}
    , /*decltype(_impl_._value_cached_byte_size_)*/{0}
    , decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SummaryIntegerSlice::~SummaryIntegerSlice() {
  // @@protoc_insertion_point(destructor:poplar.SummaryIntegerSlice)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SummaryIntegerSlice::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.value_.~RepeatedField();
  _impl_.name_.Destroy();
}

void SummaryIntegerSlice::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SummaryIntegerSlice::Clear() {
// @@protoc_insertion_point(message_clear_start:poplar.SummaryIntegerSlice)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_.Clear();
  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SummaryIntegerSlice::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "poplar.SummaryIntegerSlice.name"));
        } else
          goto handle_unusual;
        continue;
      // repeated int64 value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_value(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_value(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SummaryIntegerSlice::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:poplar.SummaryIntegerSlice)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "poplar.SummaryIntegerSlice.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // repeated int64 value = 2;
  {
    int byte_size = _impl_._value_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          2, _internal_value(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:poplar.SummaryIntegerSlice)
  return target;
}

size_t SummaryIntegerSlice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:poplar.SummaryIntegerSlice)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 value = 2;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int64Size(this->_impl_.value_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._value_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SummaryIntegerSlice::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SummaryIntegerSlice::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SummaryIntegerSlice::GetClassData() const { return &_class_data_; }


void SummaryIntegerSlice::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SummaryIntegerSlice*>(&to_msg);
  auto& from = static_cast<const SummaryIntegerSlice&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:poplar.SummaryIntegerSlice)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.value_.MergeFrom(from._impl_.value_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SummaryIntegerSlice::CopyFrom(const SummaryIntegerSlice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:poplar.SummaryIntegerSlice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SummaryIntegerSlice::IsInitialized() const {
  return true;
}

void SummaryIntegerSlice::InternalSwap(SummaryIntegerSlice* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.value_.InternalSwap(&other->_impl_.value_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SummaryIntegerSlice::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_metrics_2eproto_getter, &descriptor_table_metrics_2eproto_once,
      file_level_metadata_metrics_2eproto[1]);
}

// ===================================================================

class SummaryInteger::_Internal {
 public:
};

SummaryInteger::SummaryInteger(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:poplar.SummaryInteger)
}
SummaryInteger::SummaryInteger(const SummaryInteger& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SummaryInteger* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.value_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.value_ = from._impl_.value_;
  // @@protoc_insertion_point(copy_constructor:poplar.SummaryInteger)
}

inline void SummaryInteger::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.value_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SummaryInteger::~SummaryInteger() {
  // @@protoc_insertion_point(destructor:poplar.SummaryInteger)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SummaryInteger::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void SummaryInteger::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SummaryInteger::Clear() {
// @@protoc_insertion_point(message_clear_start:poplar.SummaryInteger)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.value_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SummaryInteger::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "poplar.SummaryInteger.name"));
        } else
          goto handle_unusual;
        continue;
      // int64 value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SummaryInteger::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:poplar.SummaryInteger)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "poplar.SummaryInteger.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // int64 value = 2;
  if (this->_internal_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:poplar.SummaryInteger)
  return target;
}

size_t SummaryInteger::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:poplar.SummaryInteger)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // int64 value = 2;
  if (this->_internal_value() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SummaryInteger::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SummaryInteger::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SummaryInteger::GetClassData() const { return &_class_data_; }


void SummaryInteger::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SummaryInteger*>(&to_msg);
  auto& from = static_cast<const SummaryInteger&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:poplar.SummaryInteger)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_value() != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SummaryInteger::CopyFrom(const SummaryInteger& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:poplar.SummaryInteger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SummaryInteger::IsInitialized() const {
  return true;
}

void SummaryInteger::InternalSwap(SummaryInteger* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  swap(_impl_.value_, other->_impl_.value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SummaryInteger::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_metrics_2eproto_getter, &descriptor_table_metrics_2eproto_once,
      file_level_metadata_metrics_2eproto[2]);
}

// ===================================================================

class SummaryDoubleSlice::_Internal {
 public:
};

SummaryDoubleSlice::SummaryDoubleSlice(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:poplar.SummaryDoubleSlice)
}
SummaryDoubleSlice::SummaryDoubleSlice(const SummaryDoubleSlice& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SummaryDoubleSlice* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){from._impl_.value_}
    , decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:poplar.SummaryDoubleSlice)
}

inline void SummaryDoubleSlice::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){arena}
    , decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SummaryDoubleSlice::~SummaryDoubleSlice() {
  // @@protoc_insertion_point(destructor:poplar.SummaryDoubleSlice)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SummaryDoubleSlice::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.value_.~RepeatedField();
  _impl_.name_.Destroy();
}

void SummaryDoubleSlice::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SummaryDoubleSlice::Clear() {
// @@protoc_insertion_point(message_clear_start:poplar.SummaryDoubleSlice)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_.Clear();
  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SummaryDoubleSlice::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "poplar.SummaryDoubleSlice.name"));
        } else
          goto handle_unusual;
        continue;
      // repeated double value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedDoubleParser(_internal_mutable_value(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 17) {
          _internal_add_value(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SummaryDoubleSlice::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:poplar.SummaryDoubleSlice)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "poplar.SummaryDoubleSlice.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // repeated double value = 2;
  if (this->_internal_value_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:poplar.SummaryDoubleSlice)
  return target;
}

size_t SummaryDoubleSlice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:poplar.SummaryDoubleSlice)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated double value = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_value_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SummaryDoubleSlice::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SummaryDoubleSlice::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SummaryDoubleSlice::GetClassData() const { return &_class_data_; }


void SummaryDoubleSlice::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SummaryDoubleSlice*>(&to_msg);
  auto& from = static_cast<const SummaryDoubleSlice&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:poplar.SummaryDoubleSlice)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.value_.MergeFrom(from._impl_.value_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SummaryDoubleSlice::CopyFrom(const SummaryDoubleSlice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:poplar.SummaryDoubleSlice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SummaryDoubleSlice::IsInitialized() const {
  return true;
}

void SummaryDoubleSlice::InternalSwap(SummaryDoubleSlice* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.value_.InternalSwap(&other->_impl_.value_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SummaryDoubleSlice::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_metrics_2eproto_getter, &descriptor_table_metrics_2eproto_once,
      file_level_metadata_metrics_2eproto[3]);
}

// ===================================================================

class SummaryDouble::_Internal {
 public:
};

SummaryDouble::SummaryDouble(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:poplar.SummaryDouble)
}
SummaryDouble::SummaryDouble(const SummaryDouble& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SummaryDouble* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.value_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.value_ = from._impl_.value_;
  // @@protoc_insertion_point(copy_constructor:poplar.SummaryDouble)
}

inline void SummaryDouble::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.value_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SummaryDouble::~SummaryDouble() {
  // @@protoc_insertion_point(destructor:poplar.SummaryDouble)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SummaryDouble::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void SummaryDouble::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SummaryDouble::Clear() {
// @@protoc_insertion_point(message_clear_start:poplar.SummaryDouble)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.value_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SummaryDouble::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "poplar.SummaryDouble.name"));
        } else
          goto handle_unusual;
        continue;
      // double value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          _impl_.value_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SummaryDouble::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:poplar.SummaryDouble)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "poplar.SummaryDouble.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // double value = 2;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_value = this->_internal_value();
  uint64_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:poplar.SummaryDouble)
  return target;
}

size_t SummaryDouble::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:poplar.SummaryDouble)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // double value = 2;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_value = this->_internal_value();
  uint64_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SummaryDouble::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SummaryDouble::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SummaryDouble::GetClassData() const { return &_class_data_; }


void SummaryDouble::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SummaryDouble*>(&to_msg);
  auto& from = static_cast<const SummaryDouble&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:poplar.SummaryDouble)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_value = from._internal_value();
  uint64_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SummaryDouble::CopyFrom(const SummaryDouble& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:poplar.SummaryDouble)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SummaryDouble::IsInitialized() const {
  return true;
}

void SummaryDouble::InternalSwap(SummaryDouble* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  swap(_impl_.value_, other->_impl_.value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SummaryDouble::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_metrics_2eproto_getter, &descriptor_table_metrics_2eproto_once,
      file_level_metadata_metrics_2eproto[4]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace poplar
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::poplar::IntervalSummary*
Arena::CreateMaybeMessage< ::poplar::IntervalSummary >(Arena* arena) {
  return Arena::CreateMessageInternal< ::poplar::IntervalSummary >(arena);
}
template<> PROTOBUF_NOINLINE ::poplar::SummaryIntegerSlice*
Arena::CreateMaybeMessage< ::poplar::SummaryIntegerSlice >(Arena* arena) {
  return Arena::CreateMessageInternal< ::poplar::SummaryIntegerSlice >(arena);
}
template<> PROTOBUF_NOINLINE ::poplar::SummaryInteger*
Arena::CreateMaybeMessage< ::poplar::SummaryInteger >(Arena* arena) {
  return Arena::CreateMessageInternal< ::poplar::SummaryInteger >(arena);
}
template<> PROTOBUF_NOINLINE ::poplar::SummaryDoubleSlice*
Arena::CreateMaybeMessage< ::poplar::SummaryDoubleSlice >(Arena* arena) {
  return Arena::CreateMessageInternal< ::poplar::SummaryDoubleSlice >(arena);
}
template<> PROTOBUF_NOINLINE ::poplar::SummaryDouble*
Arena::CreateMaybeMessage< ::poplar::SummaryDouble >(Arena* arena) {
  return Arena::CreateMessageInternal< ::poplar::SummaryDouble >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
