SchemaVersion: 2018-07-01
Owner: "@mongodb/query"

Actors:
- Name: InsertData
  Type: Loader
  Threads: 1
  Phases:
  - Repeat: 1
    Database: &db test
    Threads: 1
    CollectionCount: 1
    # Choose a sufficiently small document count to keep from spilling to disk.
    DocumentCount: 10000
    BatchSize: &batchSize 10000
    Document:
      partitionKey: {^RandomInt: {min: 1, max: 5}}
      time: {^RandomDate: {min: "2020-01-01", max: "2020-01-02"}}
      temp: {^RandomDouble: {distribution: normal, mean: 145, sigma: 30.0}}
  - &Nop {Nop: true}
  - *Nop

- Name: Quiesce
  Type: RunCommand
  Threads: 1
  Phases:
  - *Nop
  - Repeat: 1
    Database: admin
    Operations:
    - OperationName: RunCommand
      OperationCommand:
        fsync: 1
  - *Nop

- Name: SlidingWindows
  Type: RunCommand
  Threads: 1
  Phases:
  - *Nop
  - *Nop
  - Repeat: 10
    Database: *db
    Operations:
    - OperationMetricsName: MovingAvgPositionBased
      OperationName: RunCommand
      OperationCommand:
          aggregate: Collection0
          pipeline:
            [{$setWindowFields: {
                partitionBy: "$partitionKey",
                sortBy: {time: 1},
                output: {avg: {$avg: "$temp", window: {documents: [-5, 5]}}}}}]
          cursor: {batchSize: *batchSize}
    - OperationMetricsName: MovingAvgTimeBased
      OperationName: RunCommand
      OperationCommand:
          aggregate: Collection0
          pipeline:
            [{$setWindowFields: {
                partitionBy: "$partitionKey",
                sortBy: {time: 1},
                output: {avg: {$avg: "$temp", window: {range: [-1, 0], unit: "hour"}}}}}]
          cursor: {batchSize: *batchSize}
    - OperationMetricsName: MinPositionBased
      OperationName: RunCommand
      OperationCommand:
          aggregate: Collection0
          pipeline:
            [{$setWindowFields: {
                partitionBy: "$partitionKey",
                sortBy: {time: 1},
                output: {min: {$min: "$temp", window: {documents: [-5, 5]}}}}}]
          cursor: {batchSize: *batchSize}
    - OperationMetricsName: MinTimeBased
      OperationName: RunCommand
      OperationCommand:
          aggregate: Collection0
          pipeline:
            [{$setWindowFields: {
                partitionBy: "$partitionKey",
                sortBy: {time: 1},
                output: {min: {$min: "$temp", window: {range: [-1, 0], unit: "hour"}}}}}]
          cursor: {batchSize: *batchSize}
    - OperationMetricsName: ExpMovingAvgSmallN
      OperationName: RunCommand
      OperationCommand:
          aggregate: Collection0
          pipeline:
            [{$setWindowFields: {
                partitionBy: "$partitionKey",
                sortBy: {time: 1},
                output: {ema: {$expMovingAvg: {input: "$temp", N: 10}}}}}]
          cursor: {batchSize: *batchSize}
    - OperationMetricsName: ExpMovingAvgLargeN
      OperationName: RunCommand
      OperationCommand:
          aggregate: Collection0
          pipeline:
            [{$setWindowFields: {
                partitionBy: "$partitionKey",
                sortBy: {time: 1},
                output: {ema: {$expMovingAvg: {input: "$temp", N: 500}}}}}]
          cursor: {batchSize: *batchSize}
    - OperationMetricsName: DerivativeSmallWindow
      OperationName: RunCommand
      OperationCommand:
          aggregate: Collection0
          pipeline:
            [{$setWindowFields: {
                partitionBy: "$partitionKey",
                sortBy: {time: 1},
                output: {rate: {
                  $derivative: {input: "$temp", unit: "second"},
                  window: {documents: [-10, 0]}}}}}]
          cursor: {batchSize: *batchSize}
    - OperationMetricsName: DerivativeLargeWindow
      OperationName: RunCommand
      OperationCommand:
          aggregate: Collection0
          pipeline:
            [{$setWindowFields: {
                partitionBy: "$partitionKey",
                sortBy: {time: 1},
                output: {rate: {
                  $derivative: {input: "$temp", unit: "second"},
                  window: {documents: [-500, 0]}}}}}]
          cursor: {batchSize: *batchSize}

AutoRun:
  - When:
      mongodb_setup:
        $eq:
          - standalone
          - replica
          - replica-all-feature-flags
          - shard-lite
      branch_name:
        $neq:
          - v4.0
          - v4.2
          - v4.4
