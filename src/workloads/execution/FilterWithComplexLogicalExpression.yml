SchemaVersion: 2018-07-01
Owner: "@mongodb/query"
Description: >
  This workload stresses the query execution engine by running queries with complex logical
  expressions that never match a document in the collection.
  Each workload name consists of several parts: '{SyntaxType}{PredicateType}'.
  'SyntaxType' can be:
    - 'AggregationExpression' means expressions which can be used inside $expr
    - 'MatchExpression' means operators of the find command match predicate language
  'PredicateType' can be:
    - 'DeepPredicate' means query with deeply nested expressions
    - 'WidePredicate' means query where operators have a large number of arguments
    - 'SingletonPredicateWithDeepFieldpaths' means query with a single equality predicate where
      nested fieldpaths like '$a.b.c' are used
    - 'WidePredicateWithDeepFieldpaths' means a wide query where nested fieldpaths like '$a.b.c'
      are used
    - 'MixedPredicate' means query which combines wide and deep types
    - 'TargetPath' and 'MissingPath' in conjunction mean query which targets a path present only
  in some documents
    - 'NestedArray' means query which targets data that recursively nests arrays
    - 'DeeplyNestedArray' is the same as 'NestedArray', except twice as deep
    - 'ArrayStressTest' means query is exercising array traversal
    - 'RepeatedPathTraversal' means query which queries a set of paths which share a common prefix

Keywords:
- Loader
- CrudActor
- QuiesceActor
- insert
- find

GlobalDefaults:
  Database: &Database test
  Collection: &Collection Collection0
  DocumentCount: &DocumentCount 1e6
  HalfDocumentCount: &HalfDocumentCount 5e5
  Repeat: &Repeat 50
  Threads: &Threads 1
  MaxPhases: &MaxPhases 42

Actors:
# Phase 0: Insert documents into the collection.
- Name: InsertData
  Type: Loader
  Threads: 1
  Phases:
    OnlyActiveInPhases:
      Active: [0]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: 1
        Database: *Database
        Threads: 1
        CollectionCount: 1
        DocumentCount: *DocumentCount
        BatchSize: 1000
        Document:
          # NOTE: These documents will not produce a match for the filter below, forcing the query
          # to scan the entire collection.
          a: 1
          b: 1
          c: 1
          d: 1
          n1: {
            a: {
              b: {
                c: {
                  d: {
                    e: 1
                  }
                }
              }
            }
          }
          n2: {
            a: {
              b: {
                c: {
                  d: {
                    e: 1
                  }
                }
              }
            }
          }
          n3: {
            a: {
              b: {
                c: {
                  d: {
                    e: 1
                  }
                }
              }
            }
          }
          n4: {
            a: {
              b: {
                c: {
                  d: {
                    e: 1
                  }
                }
              }
            }
          }

# Phase 1: Ensure all data is synced to disk.
- Name: Quiesce
  Type: QuiesceActor
  Threads: 1
  Database: *Database
  Phases:
    OnlyActiveInPhases:
      Active: [1]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: 1
        Threads: 1

# Phase 2-N: Run various queries with complex filters.
- Name: AggregationExpressionWidePredicate
  Type: CrudActor
  Database: *Database
  Threads: *Threads
  Phases:
    OnlyActiveInPhases:
      Active: [2]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *Repeat
        Collection: *Collection
        Operations:
        - OperationName: find
          OperationCommand:
            Filter: {
              $expr: {
                $or: [
                  {$eq: ["$a", 10]},
                  {$eq: ["$b", 11]},
                  {$eq: ["$c", 12]},
                  {$eq: ["$d", 13]},
                  {$eq: ["$a", 14]},
                  {$eq: ["$b", 15]},
                  {$eq: ["$c", 16]},
                  {$eq: ["$d", 17]},
                  {$eq: ["$a", 18]},
                  {$eq: ["$b", 19]},
                ]
              }
            }

- Name: MatchExpressionWidePredicate
  Type: CrudActor
  Database: *Database
  Threads: *Threads
  Phases:
    OnlyActiveInPhases:
      Active: [3]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *Repeat
        Collection: *Collection
        Operations:
        - OperationName: find
          OperationCommand:
            Filter: {
              $or: [
                {a: 10},
                {b: 11},
                {c: 12},
                {d: 13},
                {a: 14},
                {b: 15},
                {c: 16},
                {d: 17},
                {a: 18},
                {b: 19},
              ]
            }

- Name: AggregationExpressionSingletonPredicateWithDeepFieldpaths
  Type: CrudActor
  Database: *Database
  Threads: *Threads
  Phases:
    OnlyActiveInPhases:
      Active: [4]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *Repeat
        Collection: *Collection
        Operations:
        - OperationName: find
          OperationCommand:
            Filter: {
              $expr: {
                $eq: ["$n1.a.b.c.d.e", 10]
              }
            }

- Name: MatchExpressionSingletonPredicateWithDeepFieldpaths
  Type: CrudActor
  Database: *Database
  Threads: *Threads
  Phases:
    OnlyActiveInPhases:
      Active: [5]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *Repeat
        Collection: *Collection
        Operations:
        - OperationName: find
          OperationCommand:
            Filter: {
              "n1.a.b.c.d.e": 10
            }

- Name: AggregationExpressionWidePredicateWithDeepFieldpaths
  Type: CrudActor
  Database: *Database
  Threads: *Threads
  Phases:
    OnlyActiveInPhases:
      Active: [6]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *Repeat
        Collection: *Collection
        Operations:
        - OperationName: find
          OperationCommand:
            Filter: {
              $expr: {
                $or: [
                  {$eq: ["$n1.a.b.c.d.e", 10]},
                  {$eq: ["$n2.a.b.c.d.e", 11]},
                  {$eq: ["$n3.a.b.c.d.e", 12]},
                  {$eq: ["$n4.a.b.c.d.e", 13]},
                  {$eq: ["$n1.a.b.c.d.e", 14]},
                  {$eq: ["$n2.a.b.c.d.e", 15]},
                  {$eq: ["$n3.a.b.c.d.e", 16]},
                  {$eq: ["$n4.a.b.c.d.e", 17]},
                  {$eq: ["$n1.a.b.c.d.e", 18]},
                  {$eq: ["$n2.a.b.c.d.e", 19]},
                ]
              }
            }

- Name: MatchExpressionWidePredicateWithDeepFieldpaths
  Type: CrudActor
  Database: *Database
  Threads: *Threads
  Phases:
    OnlyActiveInPhases:
      Active: [7]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *Repeat
        Collection: *Collection
        Operations:
        - OperationName: find
          OperationCommand:
            Filter: {
              $or: [
                {"n1.a.b.c.d.e": 10},
                {"n2.a.b.c.d.e": 11},
                {"n3.a.b.c.d.e": 12},
                {"n4.a.b.c.d.e": 13},
                {"n1.a.b.c.d.e": 14},
                {"n2.a.b.c.d.e": 15},
                {"n3.a.b.c.d.e": 16},
                {"n4.a.b.c.d.e": 17},
                {"n1.a.b.c.d.e": 18},
                {"n2.a.b.c.d.e": 19},
              ]
            }

- Name: AggregationExpressionDeepPredicate
  Type: CrudActor
  Database: *Database
  Threads: *Threads
  Phases:
    OnlyActiveInPhases:
      Active: [8]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *Repeat
        Collection: *Collection
        Operations:
        - OperationName: find
          OperationCommand:
            Filter: {
              $expr: {
                $or: [
                  {
                    $and: [
                      {
                        $or: [
                          {$eq: ["$a", 10]},
                          {$eq: ["$b", 11]}
                        ]
                      },
                      {
                        $or: [
                          {$eq: ["$c", 12]},
                          {$eq: ["$d", 13]}
                        ]
                      },
                    ]
                  },
                  {
                    $and: [
                      {
                        $or: [
                          {$eq: ["$a", 14]},
                          {$eq: ["$b", 15]}
                        ]
                      },
                      {
                        $or: [
                          {$eq: ["$c", 16]},
                          {$eq: ["$d", 17]}
                        ]
                      },
                    ]
                  }
                ]
              }
            }

- Name: MatchExpressionDeepPredicate
  Type: CrudActor
  Database: *Database
  Threads: *Threads
  Phases:
    OnlyActiveInPhases:
      Active: [9]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *Repeat
        Collection: *Collection
        Operations:
        - OperationName: find
          OperationCommand:
            Filter: {
              $or: [
                {
                  $and: [
                    {
                      $or: [
                        {a: 10},
                        {b: 11}
                      ]
                    },
                    {
                      $or: [
                        {c: 12},
                        {d: 13}
                      ]
                    },
                  ]
                },
                {
                  $and: [
                    {
                      $or: [
                        {a: 14},
                        {b: 15}
                      ]
                    },
                    {
                      $or: [
                        {c: 16},
                        {d: 17}
                      ]
                    },
                  ]
                }
              ]
            }

- Name: AggregationExpressionMixedPredicate
  Type: CrudActor
  Database: *Database
  Threads: *Threads
  Phases:
    OnlyActiveInPhases:
      Active: [10]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *Repeat
        Collection: *Collection
        Operations:
        - OperationName: find
          OperationCommand:
            Filter: {
              $expr: {
                $or: [
                  {$and: [{$eq: ["$a", 10]}, {$eq: ["$b", 11]}]},
                  {$and: [{$eq: ["$c", 12]}, {$eq: ["$d", 13]}]},
                  {$eq: ["$a", 14]},
                  {$eq: ["$b", 15]},
                  {$eq: ["$c", 16]},
                  {$eq: ["$d", 17]},
                ]
              }
            }

- Name: MatchExpressionMixedPredicate
  Type: CrudActor
  Database: *Database
  Threads: *Threads
  Phases:
    OnlyActiveInPhases:
      Active: [11]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *Repeat
        Collection: *Collection
        Operations:
        - OperationName: find
          OperationCommand:
            Filter: {
              $or: [
                {$and: [{a: 10}, {b: 11}]},
                {$and: [{c: 12}, {d: 13}]},
                {a: 14},
                {b: 15},
                {c: 16},
                {d: 17},
              ]
            }

# Clean up the data from the previous phase.
- Name: ClearCollection
  Type: CrudActor
  Database: *Database
  Phases:
    OnlyActiveInPhases:
      Active: [12]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: 1
        Threads: 1
        Collection: *Collection
        Operations:
        - OperationName: drop

- Name: QuiesceCollectionDrop
  Type: QuiesceActor
  Threads: 1
  Database: *Database
  Phases:
    OnlyActiveInPhases:
      Active: [13]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: 1
        Threads: 1

# Pair of loaders, the first of which inserts documents with the path "a.c.d", the second inserts
# documents with the path "b.c.d".
- Name: InsertDocumentsWithTargetPath
  Type: Loader
  Threads: 1
  Phases:
    OnlyActiveInPhases:
      Active: [14]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: 1
        Database: *Database
        Threads: 1
        CollectionCount: 1
        DocumentCount: *HalfDocumentCount
        BatchSize: 1000
        Document:
          c: 1
          d: 1
          a: { c: { d: 1 } }

- Name: InsertDocumentsWithIgnoredPath
  Type: Loader
  Threads: 1
  Phases:
    OnlyActiveInPhases:
      Active: [14]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: 1
        Database: *Database
        Threads: 1
        CollectionCount: 1
        DocumentCount: *HalfDocumentCount
        BatchSize: 1000
        Document:
          c: 1
          d: 1
          b: { c: { d: 1 } }

- Name: QuiesceDocumentsWithTargetAndMissingPaths
  Type: QuiesceActor
  Threads: 1
  Database: *Database
  Phases:
    OnlyActiveInPhases:
      Active: [15]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: 1
        Threads: 1

# Both queries below will only target "a.c.d", skipping the documents which have "b.c.d".
- Name: AggregationExpressionTargetPath
  Type: CrudActor
  Database: *Database
  Threads: *Threads
  Phases:
    OnlyActiveInPhases:
      Active: [16]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *Repeat
        Collection: *Collection
        Operations:
        - OperationName: find
          OperationCommand:
            Filter: {$expr: {$eq: ["a.c.d", 0]}}

- Name: MatchExpressionTargetPath
  Type: CrudActor
  Database: *Database
  Threads: *Threads
  Phases:
    OnlyActiveInPhases:
      Active: [17]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *Repeat
        Collection: *Collection
        Operations:
        - OperationName: find
          OperationCommand:
            Filter: {"a.c.d": 0}

# Both queries below will only target "a.c.e", skipping the documents which have "b.c.d".
- Name: AggregationExpressionTargetPath
  Type: CrudActor
  Database: *Database
  Threads: *Threads
  Phases:
    OnlyActiveInPhases:
      Active: [16]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *Repeat
        Collection: *Collection
        Operations:
          - OperationName: find
            OperationCommand:
              Filter: {$expr: {$eq: ["a.c.d", 0]}}

- Name: MatchExpressionTargetPath
  Type: CrudActor
  Database: *Database
  Threads: *Threads
  Phases:
    OnlyActiveInPhases:
      Active: [17]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *Repeat
        Collection: *Collection
        Operations:
          - OperationName: find
            OperationCommand:
              Filter: {"a.c.d": 0}

# Clean up the data from the previous phase.
- Name: ClearCollectionWithTargetAndMissingPaths
  Type: CrudActor
  Database: *Database
  Phases:
    OnlyActiveInPhases:
      Active: [18]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: 1
        Threads: 1
        Collection: *Collection
        Operations:
        - OperationName: drop

- Name: QuiesceCollectionDropDocumentsWithTargetAndMissingPaths
  Type: QuiesceActor
  Threads: 1
  Database: *Database
  Phases:
    OnlyActiveInPhases:
      Active: [19]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: 1
        Threads: 1

# Insert and query documents which have 3 levels of nested arrays across 3 path components.
# The documents are of the following schema ('...' denotes repeating 3 times).
#  { a: [ { b: [ { c: [ 1,2,3 ] }, ... ] }, ... ] }.

- Name: InsertNestedArrayData
  Type: Loader
  Threads: 1
  Phases:
    OnlyActiveInPhases:
      Active: [20]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: 1
        Database: *Database
        Threads: 1
        CollectionCount: 1
        DocumentCount: *DocumentCount
        BatchSize: 1000
        Document: {a: [
          {^Repeat: {count: 3, fromGenerator: {b: [
            {^Repeat: {count: 3, fromGenerator: {c: [1, 2, 3]}}}]}}}]}

- Name: QuiesceNestedArrayData
  Type: QuiesceActor
  Threads: 1
  Database: *Database
  Phases:
    OnlyActiveInPhases:
      Active: [21]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: 1
        Threads: 1

- Name: AggregationExpressionNestedArray
  Type: CrudActor
  Database: *Database
  Threads: *Threads
  Phases:
    OnlyActiveInPhases:
      Active: [22]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *Repeat
        Collection: *Collection
        Operations:
        - OperationName: find
          OperationCommand:
            Filter: {$expr: {$eq: ["$a.b.c", 0]}}

- Name: MatchExpressionNestedArray
  Type: CrudActor
  Database: *Database
  Threads: *Threads
  Phases:
    OnlyActiveInPhases:
      Active: [23]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *Repeat
        Collection: *Collection
        Operations:
        - OperationName: find
          OperationCommand:
            Filter: {"a.b.c": 0}

# Clean up the data from the previous phase.
- Name: ClearNestedArrayData
  Type: CrudActor
  Database: *Database
  Phases:
    OnlyActiveInPhases:
      Active: [24]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: 1
        Threads: 1
        Collection: *Collection
        Operations:
        - OperationName: drop

- Name: QuiesceCollectionDropNestedArrayData
  Type: QuiesceActor
  Threads: 1
  Database: *Database
  Phases:
    OnlyActiveInPhases:
      Active: [25]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: 1
        Threads: 1

# Insert and query documents which have 3 levels of nested arrays across 6 path components.
# The documents are of the following schema ('...' denotes repeating 3 times).
# { a: { b: [ { c: { d: [ { e: { f: [ 1,2,3 ] } }, ... ] } }, ... ] } }

- Name: InsertDeeplyNestedArrayData
  Type: Loader
  Threads: 1
  Phases:
    OnlyActiveInPhases:
      Active: [26]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: 1
        Database: *Database
        Threads: 1
        CollectionCount: 1
        DocumentCount: *DocumentCount
        BatchSize: 1000
        Document:
          a: {b: [
            {^Repeat: {count: 3, fromGenerator: {c: {d: [
              {^Repeat: {count: 3, fromGenerator: {e: {f: [1, 2, 3]}}}}]}}}}]}

- Name: QuiesceDeeplyNestedArrayData
  Type: QuiesceActor
  Threads: 1
  Database: *Database
  Phases:
    OnlyActiveInPhases:
      Active: [27]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: 1
        Threads: 1

- Name: AggregationExpressionDeeplyNestedArray
  Type: CrudActor
  Database: *Database
  Threads: *Threads
  Phases:
    OnlyActiveInPhases:
      Active: [28]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *Repeat
        Collection: *Collection
        Operations:
        - OperationName: find
          OperationCommand:
            Filter: {$expr: {$eq: ["$a.b.c.d.e.f", 0]}}

- Name: MatchExpressionDeeplyNestedArray
  Type: CrudActor
  Database: *Database
  Threads: *Threads
  Phases:
    OnlyActiveInPhases:
      Active: [29]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *Repeat
        Collection: *Collection
        Operations:
        - OperationName: find
          OperationCommand:
            Filter: {"a.b.c.d.e.f": 0}

# Clean up the data from the previous phase.
- Name: ClearCollectionDeeplyNestedArrayData
  Type: CrudActor
  Database: *Database
  Phases:
    OnlyActiveInPhases:
      Active: [30]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: 1
        Threads: 1
        Collection: *Collection
        Operations:
        - OperationName: drop

- Name: QuiesceCollectionDropDeeplyNestedArrayData
  Type: QuiesceActor
  Threads: 1
  Database: *Database
  Phases:
    OnlyActiveInPhases:
      Active: [31]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: 1
        Threads: 1

# Insert documents which have 2 levels of nested arrays, each of length 10. This is intended to
# stress test array traversal.
- Name: InsertArrayStressTestData
  Type: Loader
  Threads: 1
  Phases:
    OnlyActiveInPhases:
      Active: [32]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: 1
        Database: *Database
        Threads: 1
        CollectionCount: 1
        DocumentCount: *DocumentCount
        BatchSize: 1000
        Document: {a: [{b: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]},
                       {b: [11, 12, 13, 14, 15, 16, 17, 18, 19, 20]},
                       {b: [21, 22, 23, 24, 25, 26, 27, 28, 29, 30]},
                       {b: [31, 32, 33, 34, 35, 36, 37, 38, 39, 40]},
                       {b: [41, 42, 43, 44, 45, 46, 47, 48, 49, 50]},
                       {b: [51, 52, 53, 54, 55, 56, 57, 58, 59, 60]},
                       {b: [61, 62, 63, 64, 65, 66, 67, 68, 69, 70]},
                       {b: [71, 72, 73, 74, 75, 76, 77, 78, 79, 80]},
                       {b: [81, 82, 83, 84, 85, 86, 87, 88, 89, 90]},
                       {b: [91, 92, 93, 94, 95, 96, 97, 98, 99, 100]}]}

- Name: AggregationExpressionArrayStressTest
  Type: CrudActor
  Database: *Database
  Threads: *Threads
  Phases:
    OnlyActiveInPhases:
      Active: [33]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *Repeat
        Collection: *Collection
        Operations:
        - OperationName: find
          OperationCommand:
            Filter: {$expr: {$eq: ["$a.b", 0]}}

- Name: MatchExpressionArrayStressTest
  Type: CrudActor
  Database: *Database
  Threads: *Threads
  Phases:
    OnlyActiveInPhases:
      Active: [34]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *Repeat
        Collection: *Collection
        Operations:
        - OperationName: find
          OperationCommand:
            Filter: {"a.b": 0}

# Clean up the data from the previous phase.
- Name: ClearCollectionArrayStressTestData
  Type: CrudActor
  Database: *Database
  Phases:
    OnlyActiveInPhases:
      Active: [35]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: 1
        Threads: 1
        Collection: *Collection
        Operations:
        - OperationName: drop

- Name: QuiesceCollectionDropArrayStressTestData
  Type: QuiesceActor
  Threads: 1
  Database: *Database
  Phases:
    OnlyActiveInPhases:
      Active: [36]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: 1
        Threads: 1

# Insert documents with 2 levels of nested arrays where the leaves contain many fields. This test
# targets workloads where the paths queried share a common prefix ("a.b.c", "a.b.d", and so on).
- Name: InsertRepeatedPathTraversalData
  Type: Loader
  Threads: 1
  Phases:
    OnlyActiveInPhases:
      Active: [37]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: 1
        Database: *Database
        Threads: 1
        CollectionCount: 1
        DocumentCount: *DocumentCount
        BatchSize: 1000
        Document: {a: [{^Repeat: {count: 3, fromGenerator: {b: [{c: 0, d: 0, e: 0, f: 0, g: 0, h: 0, i: 0, j: 0, k: 0, l: 0}]}}}]}

- Name: QuiesceRepeatedPathTraversalData
  Type: QuiesceActor
  Threads: 1
  Database: *Database
  Phases:
    OnlyActiveInPhases:
      Active: [38]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: 1
        Threads: 1

- Name: AggregationExpressionRepeatedPathTraversal
  Type: CrudActor
  Database: *Database
  Threads: *Threads
  Phases:
    OnlyActiveInPhases:
      Active: [39]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *Repeat
        Collection: *Collection
        Operations:
        - OperationName: find
          OperationCommand:
            Filter: {$expr: {$or: [{$eq: ["$a.b.c", 1]},
                                   {$eq: ["$a.b.d", 1]},
                                   {$eq: ["$a.b.e", 1]},
                                   {$eq: ["$a.b.f", 1]},
                                   {$eq: ["$a.b.g", 1]}]}}

- Name: MatchExpressionRepeatedPathTraversal
  Type: CrudActor
  Database: *Database
  Threads: *Threads
  Phases:
    OnlyActiveInPhases:
      Active: [40]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *Repeat
        Collection: *Collection
        Operations:
        - OperationName: find
          OperationCommand:
            Filter: {$or: [{ "a.b.c": 1 },
                           { "a.b.d": 1 },
                           { "a.b.e": 1 },
                           { "a.b.f": 1 },
                           { "a.b.g": 1 }]}

- Name: AggregationExpressionRepeatedPathTraversalInequality
  Type: CrudActor
  Database: *Database
  Threads: *Threads
  Phases:
    OnlyActiveInPhases:
      Active: [39]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *Repeat
        Collection: *Collection
        Operations:
          - OperationName: find
            OperationCommand:
              Filter: {$expr: {$or: [{$eq: ["$a.b.c", 1]},
                                     {$eq: ["$a.b.d", 1]},
                                     {$eq: ["$a.b.e", 1]},
                                     {$eq: ["$a.b.f", 1]},
                                     {$eq: ["$a.b.g", 1]}]}}

- Name: MatchExpressionRepeatedPathTraversalInequality
  Type: CrudActor
  Database: *Database
  Threads: *Threads
  Phases:
    OnlyActiveInPhases:
      Active: [40]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *Repeat
        Collection: *Collection
        Operations:
          - OperationName: find
            OperationCommand:
              Filter: {$or: [{ "a.b.c": 1 },
                             { "a.b.d": 1 },
                             { "a.b.e": 1 },
                             { "a.b.f": 1 },
                             { "a.b.g": 1 }]}

# Double the number of clauses.
- Name: AggregationExpressionRepeatedPathTraversalWidePredicate
  Type: CrudActor
  Database: *Database
  Threads: *Threads
  Phases:
    OnlyActiveInPhases:
      Active: [41]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *Repeat
        Collection: *Collection
        Operations:
        - OperationName: find
          OperationCommand:
            Filter:
              {$expr: {$or: [
                {$eq: ["$a.b.c", 1]},
                {$eq: ["$a.b.d", 1]},
                {$eq: ["$a.b.e", 1]},
                {$eq: ["$a.b.f", 1]},
                {$eq: ["$a.b.g", 1]},
                {$eq: ["$a.b.h", 1]},
                {$eq: ["$a.b.i", 1]},
                {$eq: ["$a.b.j", 1]},
                {$eq: ["$a.b.k", 1]},
                {$eq: ["$a.b.l", 1]}]}}

- Name: MatchExpressionManyClausesRepeatedPathTraversalWidePredicate
  Type: CrudActor
  Database: *Database
  Threads: *Threads
  Phases:
    OnlyActiveInPhases:
      Active: [42]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *Repeat
        Collection: *Collection
        Operations:
        - OperationName: find
          OperationCommand:
            Filter: {$or: [{ "a.b.c": 1 },
                           { "a.b.d": 1 },
                           { "a.b.e": 1 },
                           { "a.b.f": 1 },
                           { "a.b.g": 1 },
                           { "a.b.h": 1 },
                           { "a.b.i": 1 },
                           { "a.b.j": 1 },
                           { "a.b.k": 1 },
                           { "a.b.l": 1 }]}

AutoRun:
- When:
    mongodb_setup:
      $eq:
      - standalone
      - standalone-all-feature-flags
      - standalone-classic-query-engine
      - standalone-sbe
    branch_name:
      $neq:
      - v4.0
      - v4.2
      - v4.4
      - v5.0
