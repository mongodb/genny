SchemaVersion: 2018-07-01
Owner: "@mongodb/query-execution"
Description: |
  This workload compares the query performance of SSB (star schema benchmark) queries with columnar indexes to performances without them.

  The workload consists of the following phases and actors:
    1. Run SSB queries with columnstore indexes.
    2. Drop columnstore indexes.
    3. Run SSB queries without columnstore indexes.

  The DSI test_control will drop caches inbetween each test to measure cold cache performance.

Keywords:
- columnstore
- analytics
- SSB

Clients:
  Default:
    QueryOptions:
      # Allow for longer duration since column store index build and collection scans may take a while.
      socketTimeoutMS: 3_600_000  # = 1 hour
      connectTimeoutMS: 3_600_000

# Defines the database name.
Database: &db ssb

# Defines the collection name.
Collection: &Collection order_lineitem

Q1_1Query: &Q1_1Query
  Pipeline:
    [
      {
        "$match": {
          "order.o_orderdate": {
            "$gte": ISODate("1992-01-01T00:00:00Z"),
            "$lt": ISODate("1996-01-01T00:00:00Z")
          },
          "l_discount": {"$gte": 0.1, "$lte": 0.3},
          "l_quantity": {"$lte": 25}
        }
      },
      {
        "$group": {
          "_id": 1,
          "revenue": {"$sum": {"$multiply": ["$l_extendedprice", "$l_discount"]}}
        }
      }
    ]

Q1_2Query: &Q1_2Query
  Pipeline:
    [
      {
        "$match": {
          "order.o_orderdate": {
            "$gte": ISODate("1994-01-01T00:00:00.000Z"),
            "$lt": ISODate("1994-02-01T00:00:00.000Z")
          },
          "l_discount": {"$gte": 0.04, "$lte": 0.06},
          "l_quantity": {"$gte": 26, "$lt": 33}
        }
      },
      {
        "$group": {
          "_id": 1,
          "revenue": {"$sum": {"$multiply": ["$l_extendedprice", "$l_discount"]}}
        }
      }
    ]

Q1_3Query: &Q1_3Query
  Pipeline:
    [
      {
        $match: {
          $and: [
            {"order.o_orderdate": {
              "$gte": ISODate("1994-02-07T00:00:00.000Z"),
              "$lt": ISODate("1994-02-14T00:00:00.000Z")}},
            { l_discount: { $gte: 0.04 } },
            { l_discount: { $lte: 0.06 } },
            { l_quantity: { $gte: 26 } },
            { l_quantity: { $lt: 33 } }
          ]
        }
      },
      {
        $group: {
          _id: 1,
          revenue: { $sum: { $multiply: ['$l_extendedprice', '$l_discount'] } }
        }
      }
    ]

Q2_1Query: &Q2_1Query
  Pipeline:
    [
      { $match: { 'part.p_brand': 'Brand#21' } },
      {
        $lookup: {
          from: 'supplier',
          localField: 'l_suppkey',
          foreignField: 's_suppkey',
          as: 'supplier'
        }
      },
      { $match: { 'supplier.nation.region.r_name': 'AMERICA' } },
      { $addFields: { supplier: { $first: '$supplier' } } },
      {
        $group: {
          _id: { order_year: { $year: '$order.o_orderdate' }, brand: '$part.p_brand' },
          revenue: { $sum: { $multiply: ['$l_extendedprice', '$l_discount'] } }
        }
      }
    ]

Q2_2Query: &Q2_2Query
  Pipeline:
    [
      {
        $match: {
          'part.p_brand': {
            $in: [
              'Brand#21',
              'Brand#22',
              'Brand#15',
              'Brand#41',
              'Brand#41'
            ]
          }
        }
      },
      {
        $lookup: {
          from: 'supplier',
          localField: 'l_suppkey',
          foreignField: 's_suppkey',
          as: 'supplier'
        }
      },
      { $match: { 'supplier.nation.region.r_name': 'ASIA' } },
      {
        $addFields: {
          supplier: {
            $first: '$supplier'
          }
        }
      },
      {
        $group: {
          _id: { order_year: { $year: '$order.o_orderdate' }, brand: '$part.p_brand' },
          revenue: { $sum: { $multiply: ['$l_extendedprice', '$l_discount'] } }
        }
      }
    ]

Q2_3Query: &Q2_3Query
  Pipeline:
    [
      {
        $match: {
          'part.p_brand': 'Brand#21',
          'part.p_type': 'ECONOMY BRUSHED STEEL'
        }
      },
      {
        $lookup: {
          from: 'supplier',
          localField: 'l_suppkey',
          foreignField: 's_suppkey',
          as: 'supplier'
        }
      },
      { $match: { 'supplier.nation.region.r_name': 'AMERICA' } },
      {
        $addFields: {
          supplier: {
            $first: '$supplier'
          }
        }
      },
      {
        $group: {
          _id: {
            order_year: {
              $year: '$order.o_orderdate'
            },
            brand: '$part.p_brand'
          },
          revenue: { $sum: { $multiply: ['$l_extendedprice', '$l_discount'] } }
        }
      }
    ]

Q3Query: &Q3Query
  Pipeline:
    [
      {
        "$match": {
          "order.o_orderdate": {
            "$gte": ISODate("1992-01-01T00:00:00.000Z"),
            "$lte": ISODate("1997-01-01T00:00:00.000Z")
          }
        }
      },
      {
        "$lookup": {
          "from": "supplier",
          "localField": "l_suppkey",
          "foreignField": "s_suppkey",
          "as": "supplier"
        }
      },
      {"$addFields": {"supplier": {"$first": "$supplier"}}},
      {"$match": {"supplier.nation.region.r_name": "ASIA"}},
      {
        "$lookup": {
          "from": "customer",
          "localField": "order.o_custkey",
          "foreignField": "c_custkey",
          "as": "customer"
        }
      },
      {"$addFields": {"customer": {"$first": "$customer"}}},
      {
        "$group": {
          "_id": {
            "order_year": {"$year": "$order.o_orderdate"},
            "c_nation": "$customer.nation.n_name",
            "s_nation": "$supplier.nation.n_name"
          },
          "revenue": {"$sum": {"$multiply": ["$l_extendedprice", "$l_discount"]}}
        }
      },
      {
        "$addFields": {
          "order_year": "$_id.order_year",
          "customer_nation": "$_id.c_nation",
          "supplier_nation": "$_id.s_nation"
        }
      },
      {"$sort": {"order_year": 1, "revenue": -1}}
    ]

# Q4 queries are (currently) limited to 10000 documents because they take many hours to finish.
Q4_1Query: &Q4_1Query
  Pipeline:
    [
      { $limit: 10000 },
      { $match: { 'part.p_mfgr': { $in: ['Manufacturer#1', 'Manufacturer#2'] } } },
      {
        $lookup: {
          from: 'supplier',
          localField: 'l_suppkey',
          foreignField: 's_suppkey',
          as: 'supplier'
        }
      },
      {
        $addFields: {
          supplier: {
            $first: '$supplier'
          }
        }
      },
      { $match: { 'supplier.nation.region.r_name': 'AMERICA' } },
      {
        $lookup: {
          from: 'customer',
          localField: 'order.o_custkey',
          foreignField: 'c_custkey',
          as: 'customer'
        }
      },
      {
        $addFields: {
          customer: {
            $first: '$customer'
          }
        }
      },
      { $match: { 'customer.nation.region.r_name': 'AMERICA' } },
      {
        $group: {
          _id: {
            order_year: { $year: '$order.o_orderdate' },
            c_nation: '$customer.nation.n_name'
          },
          profit: {
            $sum: {
              $subtract: ['$l_extendedprice', { $multiply: ['$l_extendedprice', '$l_discount'] }]
            }
          }
        }
      },
      {
        $addFields: {
          order_year: '$_id.order_year',
          customer_nation: '$_id.c_nation'
        }
      }
    ]

Q4_2Query: &Q4_2Query
  Pipeline:
    [
      { $limit: 10000 },
      {
        "$match": {
          "part.p_mfgr": {"$in": ["Manufacturer#1", "Manufacturer#2"]},
          "order.o_orderdate": {
            "$gte": ISODate("1997-01-01T00:00:00.000Z"),
            "$lt": ISODate("1999-01-01T00:00:00.000Z")
          }
        }
      },
      {
        "$lookup": {
          "from": "supplier",
          "localField": "l_suppkey",
          "foreignField": "s_suppkey",
          "as": "supplier"
        }
      },
      {"$addFields": {"supplier": {"$first": "$supplier"}}},
      {"$match": {"supplier.nation.region.r_name": "AMERICA"}},
      {
        "$lookup": {
          "from": "customer",
          "localField": "order.o_custkey",
          "foreignField": "c_custkey",
          "as": "customer"
        }
      },
      {"$addFields": {"customer": {"$first": "$customer"}}},
      {"$match": {"customer.nation.region.r_name": "AMERICA"}},
      {
        "$group": {
          "_id": {
            "order_year": {"$year": "$order.o_orderdate"},
            "c_nation": "$customer.nation.n_name"
          },
          "profit": {
            "$sum": {
              "$subtract": [
                "$l_extendedprice",
                {"$multiply": ["$l_extendedprice", "$l_discount"]}
              ]
            }
          }
        }
      },
      {"$addFields": {"order_year": "$_id.order_year", "customer_nation": "$_id.c_nation"} }
    ]

Q4_3Query: &Q4_3Query
  Pipeline:
    [
      { $limit: 10000 },
      {
        "$match": {
          "part.p_mfgr": "Manufacturer#1",
          "order.o_orderdate": {
            "$gte": ISODate("1997-01-01T00:00:00.000Z"),
            "$lt": ISODate("1999-01-01T00:00:00.000Z")
          }
        }
      },
      {
        "$lookup": {
          "from": "supplier",
          "localField": "l_suppkey",
          "foreignField": "s_suppkey",
          "as": "supplier"
        }
      },
      {"$addFields": {"supplier": {"$first": "$supplier"}}},
      {"$match": {"supplier.nation.n_name": "UNITED STATES"}},
      {
        "$lookup": {
          "from": "customer",
          "localField": "order.o_custkey",
          "foreignField": "c_custkey",
          "as": "customer"
        }
      },
      {"$addFields": {"customer": {"$first": "$customer"}}},
      {"$match": {"customer.nation.region.r_name": "AMERICA"}},
      {
        "$group": {
          "_id": {
            "order_year": {"$year": "$order.o_orderdate"},
            "c_nation": "$customer.nation.n_name",
            "p_brand": "$part.p_brand"
          },
          "profit": {
            "$sum": {
              "$subtract": [
                "$l_extendedprice",
                {"$multiply": ["$l_extendedprice", "$l_discount"]}
              ]
            }
          }
        }
      },
      {
        "$addFields": {
          "order_year": "$_id.order_year",
          "customer_nation": "$_id.c_nation",
          "part_brand": "$_id.p_brand"
        }
      },
      {"$sort": {"order_year": 1, "customer_nation": 1, "part_brand": 1}}
    ]

# Defines how many times each test operation is executed.
TestRepeatCount: &TestRepeatCount 1
MaxPhases: &MaxPhases 42
ColumnStoreIndexName: &ColumnStoreIndexName $**_columnstore

Actors:
- Name: Setup
  Type: AdminCommand
  Threads: 1
  Phases:
    OnlyActiveInPhases:
      Active: [0]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: 1
        Thread: 1
        Database: admin
        Operations:
        - OperationName: AdminCommand
          OperationCommand:
            setParameter: 1
            internalQueryFrameworkControl: "trySbeEngine"

- Name: BuildColumnStoreIndex
  Type: RunCommand
  Threads: 1
  Phases:
    OnlyActiveInPhases:
      Active: [1]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: 1
        Thread: 1
        Database: *db
        Operations:
        - OperationMetricsName: BulkBuildColumnStoreIndex
          OperationName: RunCommand
          OperationCommand:
            createIndexes: *Collection
            indexes:
            - key: {"$**": "columnstore"}
              name: *ColumnStoreIndexName

# Quiesce before each query
- Name: QuiescePhase
  Type: QuiesceActor
  Threads: 1
  Database: *db
  Phases:
    OnlyActiveInPhases:
      Active: [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: 1

# Run each SSB query in a separate phase with column store index.
- Name: Q1_1
  Type: CrudActor
  Phases:
    OnlyActiveInPhases:
      Active: [3]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *TestRepeatCount
        Database: *db
        Collection: *Collection
        Operations:
        - OperationMetricsName: Q1_1Query
          OperationName: aggregate
          OperationCommand: *Q1_1Query

- Name: Q1_2
  Type: CrudActor
  Phases:
    OnlyActiveInPhases:
      Active: [5]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *TestRepeatCount
        Database: *db
        Collection: *Collection
        Operations:
        - OperationMetricsName: Q1_2Query
          OperationName: aggregate
          OperationCommand: *Q1_2Query

- Name: Q1_3
  Type: CrudActor
  Phases:
    OnlyActiveInPhases:
      Active: [7]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *TestRepeatCount
        Database: *db
        Collection: *Collection
        Operations:
        - OperationMetricsName: Q1_3Query
          OperationName: aggregate
          OperationCommand: *Q1_3Query

- Name: Q2_1
  Type: CrudActor
  Phases:
    OnlyActiveInPhases:
      Active: [9]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *TestRepeatCount
        Database: *db
        Collection: *Collection
        Operations:
        - OperationMetricsName: Q2_1Query
          OperationName: aggregate
          OperationCommand: *Q2_1Query

- Name: Q2_2
  Type: CrudActor
  Phases:
    OnlyActiveInPhases:
      Active: [11]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *TestRepeatCount
        Database: *db
        Collection: *Collection
        Operations:
        - OperationMetricsName: Q2_2Query
          OperationName: aggregate
          OperationCommand: *Q2_2Query

- Name: Q2_3
  Type: CrudActor
  Phases:
    OnlyActiveInPhases:
      Active: [13]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *TestRepeatCount
        Database: *db
        Collection: *Collection
        Operations:
        - OperationMetricsName: Q2_3Query
          OperationName: aggregate
          OperationCommand: *Q2_3Query

- Name: Q3
  Type: CrudActor
  Phases:
    OnlyActiveInPhases:
      Active: [15]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *TestRepeatCount
        Database: *db
        Collection: *Collection
        Operations:
        - OperationMetricsName: Q3Query
          OperationName: aggregate
          OperationCommand: *Q3Query

- Name: Q4_1
  Type: CrudActor
  Phases:
    OnlyActiveInPhases:
      Active: [17]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *TestRepeatCount
        Database: *db
        Collection: *Collection
        Operations:
        - OperationMetricsName: Q4_1Query
          OperationName: aggregate
          OperationCommand: *Q4_1Query

- Name: Q4_2
  Type: CrudActor
  Phases:
    OnlyActiveInPhases:
      Active: [19]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *TestRepeatCount
        Database: *db
        Collection: *Collection
        Operations:
        - OperationMetricsName: Q4_2Query
          OperationName: aggregate
          OperationCommand: *Q4_2Query

- Name: Q4_3
  Type: CrudActor
  Phases:
    OnlyActiveInPhases:
      Active: [21]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *TestRepeatCount
        Database: *db
        Collection: *Collection
        Operations:
        - OperationMetricsName: Q4_3Query
          OperationName: aggregate
          OperationCommand: *Q4_3Query

# The 'DropColumnstoreIndexes' actor drops columnstore indexes.
- Name: DropColumnstoreIndex
  Type: RunCommand
  Database: *db
  Phases:
    OnlyActiveInPhases:
      Active: [22]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: 1
        Threads: 1
        Database: *db
        Operations:
        - OperationName: RunCommand
          OperationCommand:
            dropIndexes: *Collection
            index: *ColumnStoreIndexName

# run same queries without column store index (Collection Scan)
- Name: Q1_1CollScan
  Type: CrudActor
  Phases:
    OnlyActiveInPhases:
      Active: [24]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *TestRepeatCount
        Database: *db
        Collection: *Collection
        Operations:
        - OperationMetricsName: Q1_1QueryCollScan
          OperationName: aggregate
          OperationCommand: *Q1_1Query

- Name: Q1_2CollScan
  Type: CrudActor
  Phases:
    OnlyActiveInPhases:
      Active: [26]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *TestRepeatCount
        Database: *db
        Collection: *Collection
        Operations:
        - OperationMetricsName: Q1_2QueryCollScan
          OperationName: aggregate
          OperationCommand: *Q1_2Query

- Name: Q1_3CollScan
  Type: CrudActor
  Phases:
    OnlyActiveInPhases:
      Active: [28]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *TestRepeatCount
        Database: *db
        Collection: *Collection
        Operations:
        - OperationMetricsName: Q1_3QueryCollScan
          OperationName: aggregate
          OperationCommand: *Q1_3Query

- Name: Q2_1CollScan
  Type: CrudActor
  Phases:
    OnlyActiveInPhases:
      Active: [30]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *TestRepeatCount
        Database: *db
        Collection: *Collection
        Operations:
        - OperationMetricsName: Q2_1QueryCollScan
          OperationName: aggregate
          OperationCommand: *Q2_1Query

- Name: Q2_2CollScan
  Type: CrudActor
  Phases:
    OnlyActiveInPhases:
      Active: [32]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *TestRepeatCount
        Database: *db
        Collection: *Collection
        Operations:
        - OperationMetricsName: Q2_2QueryCollScan
          OperationName: aggregate
          OperationCommand: *Q2_2Query

- Name: Q2_3CollScan
  Type: CrudActor
  Phases:
    OnlyActiveInPhases:
      Active: [34]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *TestRepeatCount
        Database: *db
        Collection: *Collection
        Operations:
        - OperationMetricsName: Q2_3QueryCollScan
          OperationName: aggregate
          OperationCommand: *Q2_3Query

- Name: Q3CollScan
  Type: CrudActor
  Phases:
    OnlyActiveInPhases:
      Active: [36]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *TestRepeatCount
        Database: *db
        Collection: *Collection
        Operations:
        - OperationMetricsName: Q3QueryCollScan
          OperationName: aggregate
          OperationCommand: *Q3Query

- Name: Q4_1CollScan
  Type: CrudActor
  Phases:
    OnlyActiveInPhases:
      Active: [38]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *TestRepeatCount
        Database: *db
        Collection: *Collection
        Operations:
        - OperationMetricsName: Q4_1QueryCollScan
          OperationName: aggregate
          OperationCommand: *Q4_1Query

- Name: Q4_2CollScan
  Type: CrudActor
  Phases:
    OnlyActiveInPhases:
      Active: [40]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *TestRepeatCount
        Database: *db
        Collection: *Collection
        Operations:
        - OperationMetricsName: Q4_2QueryCollScan
          OperationName: aggregate
          OperationCommand: *Q4_2Query

- Name: Q4_3CollScan
  Type: CrudActor
  Phases:
    OnlyActiveInPhases:
      Active: [42]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *TestRepeatCount
        Database: *db
        Collection: *Collection
        Operations:
        - OperationMetricsName: Q4_3QueryCollScan
          OperationName: aggregate
          OperationCommand: *Q4_3Query
