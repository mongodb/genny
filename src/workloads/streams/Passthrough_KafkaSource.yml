SchemaVersion: 2018-07-01
Owner: "@10gen/altas-streams"
Description: |
  Pipeline: Kafka -> Project -> Noop
  Documents: 4M
  BatchSize: 1k

  This tests the scenario where the input and output of documents for a stream processor is a
  one-to-one ratio. This applies a simple projection on incoming documents (currency conversion).

Keywords:
- streams

GlobalDefaults:
  DatabaseName: &DatabaseName test
  OutputCollectionName: &OutputCollectionName output
  StreamProcessorName: &StreamProcessorName sp

  KafkaBootstrapServers: &KafkaBootstrapServers 10.2.0.200:27017

  # Genny workload client typically has 16 CPUs, so use 16 inserter threads each inserting
  # 500 batches of 1k documents, so a total of 8M documents, which will all have unique keys
  # for the window so this will generate 8M keys on the open window.
  NumThreads: &NumThreads 16
  NumBatch1000xPerThread: &NumBatch1000xPerThread 250
  NumDocumentsPerThread: &NumDocumentsPerThread 250000
  ExpectedDocumentCount: &ExpectedDocumentCount 4000000  # NumThreads * NumBatch1000xPerThread * 1000

  Channel: &Channel {^RandomInt: { min: 0, max: 10000 }}
  Url: &Url {^FormatString: { format: "https://www.nexmark.com/%s/%s/%s/item.htm?query=1&channel_id=%d", withArgs: [
    {^RandomString: { length: {^RandomInt: { min: 3, max: 5 }}}},
    {^RandomString: { length: {^RandomInt: { min: 3, max: 5 }}}},
    {^RandomString: { length: {^RandomInt: { min: 3, max: 5 }}}},
    *Channel
  ]}}

  Document: &Document
    auction: {^Inc: { start: 1000, multipler: 1 }}
    bidder: {^Inc: { start: 1000, multipler: 1 }}
    price: {^RandomDouble: {min: 100, max: 100000000 }}
    channel: *Channel
    url: *Url
    dateTime: {^IncDate: { start: "2023-01-01T00:00:00.000", step: 10 }}

  Batch1000x: &Batch1000x {^Array: { of: *Document, number: 1000 }}

Actors:
- Name: KafkaLoader
  Type: KafkaLoader
  Threads: *NumThreads
  BootstrapServers: *KafkaBootstrapServers
  Topic: input
  Phases:
  - Phase: 0
    Repeat: *NumDocumentsPerThread
    Document: *Document
  - Phase: 1..3
    Nop: true
 
- Name: Setup
  Type: RunCommand
  ClientName: Stream
  Threads: 1
  Phases:
  - Phase: 0
    Nop: true
  - Phase: 1
    Repeat: 1
    Database: *DatabaseName
    Operations:
    - OperationMetricsName: CreateStreamProcessor
      OperationName: RunCommand
      OperationCommand:
        streams_startStreamProcessor: ""
        name: *StreamProcessorName
        pipeline: [
          { $source: {
              connectionName: "kafka",
              topic: "input",
              config: {
                startAt: "earliest"
              }
          }},
          {
            $project: {
              auction: 1,
              bidder: 1,
              dateTime: 1,
              price: { $multiply: ["$price", 0.908] }
            }
          },
          { $emit: { connectionName: "__noopSink" } }
        ]
        connections: [
          { name: "__testMemory", type: "in_memory", options: {} },
          { name: "kafka", type: "kafka", options: { bootstrapServers: *KafkaBootstrapServers }}
        ]
  - Phase: 2
    Nop: true
  - Phase: 3
    Repeat: 1
    Database: *DatabaseName
    Operations:
    - OperationMetricsName: Stop
      OperationName: RunCommand
      OperationCommand:
        streams_stopStreamProcessor: ""
        name: *StreamProcessorName

- Name: Passthrough.KafkaSource.Stats
  Type: StreamStatsReporter
  ClientName: Stream
  Database: *DatabaseName
  Threads: 1
  Phases:
  - Phase: 0..1
    Nop: true
  - Phase: 2
    Repeat: 1
    StreamProcessorName: *StreamProcessorName
    ExpectedDocumentCount: *ExpectedDocumentCount
  - Phase: 3
    Nop: true
