SchemaVersion: 2018-07-01
Owner: "@10gen/altas-streams"
Description: |
  Streaming pipeline that runs a very simple single stage projection pipeline. This
  is meant to represent the most barebone use case for streaming.

Keywords:
- streams

GlobalDefaults:
  DatabaseName: &DatabaseName "test"
  StreamProcessorName: &StreamProcessorName "sp"

  Channel: &Channel {^RandomInt: { min: 0, max: 10000 }}
  Urls: &Urls {^Cycle: { ofLength: 10000, fromGenerator: {^FormatString: { format: "https://www.nexmark.com/%s/%s/%s/item.htm?query=1&channel_id=%d", withArgs: [
    {^RandomString: { length: {^RandomInt: { min: 3, max: 5 }}}},
    {^RandomString: { length: {^RandomInt: { min: 3, max: 5 }}}},
    {^RandomString: { length: {^RandomInt: { min: 3, max: 5 }}}},
    *Channel
  ]}}}}

  Document: &Document
    auction: {^Inc: { start: 1000 }}
    bidder: {^Inc: { start: 1000 }}
    price: {^RandomDouble: {min: 100, max: 100000000}}
    channel: *Channel
    url: *Urls
    dateTime: {^IncDate: { start: "2023-01-01T00:00:00.000", step: 10 }}

  Batch10x: &Batch10x [*Document, *Document, *Document, *Document, *Document, *Document, *Document, *Document, *Document, *Document]
  Batch100x: &Batch100x {^FlattenOnce: [*Batch10x, *Batch10x, *Batch10x, *Batch10x, *Batch10x, *Batch10x, *Batch10x, *Batch10x, *Batch10x, *Batch10x]}
  #Batch1000x: &Batch1000x {^FlattenOnce: [*Batch100x, *Batch100x, *Batch100x, *Batch100x, *Batch100x, *Batch100x, *Batch100x, *Batch100x, *Batch100x, *Batch100x]}

Actors:
- Name: Inserter
  Type: CrudActor
  ClientName: Default
  Database: *DatabaseName
  Threads: 10
  Phases:
  - Phase: 0
    Nop: true
  - Phase: 1
    Repeat: 1000
    Collection: input
    Operations:
    - OperationName: insertMany
      OperationCommand:
        Documents: *Batch100x
  - Phase: 2
    Nop: true

- Name: Setup
  Type: RunCommand
  ClientName: Stream
  Threads: 1
  Phases:
  - Phase: 0
    Repeat: 1
    Database: *DatabaseName
    Operations:
    - OperationMetricsName: CreateStreamProcessor
      OperationName: RunCommand
      OperationCommand:
        streams_startStreamProcessor: ""
        name: *StreamProcessorName
        pipeline: [
          { $source: { connectionName: "db", db: *DatabaseName, coll: "input" } },
          {
            $project: {
              auction: 1,
              bidder: 1,
              dateTime: 1,
              price: { $multiply: ["$price", 0.908] }
            }
          },
          { $emit: { connectionName: "__testMemory" } }
        ]
        connections: [
          { name: "__testMemory", type: "in_memory", options: {} },
          { name: "db", type: "atlas", options: { uri: "mongodb://username:password@10.2.0.200/admin?ssl=true&tlsInsecure=true" } }
        ]
  - Phase: 1
    Nop: true
  - Phase: 2
    Repeat: 1
    Database: *DatabaseName
    Operations:
    - OperationMetricsName: Stop
      OperationName: RunCommand
      OperationCommand:
        streams_stopStreamProcessor: ""
        name: *StreamProcessorName

- Name: Stats
  Type: StreamStatsReporter
  ClientName: Stream
  Database: *DatabaseName
  Threads: 1
  Phases:
  - Phase: 0
    Nop: true
  - Phase: 1
    Repeat: 1
    StreamProcessorName: *StreamProcessorName
    ExpectedDocumentCount: 1000000
  - Phase: 2
    Nop: true

AutoRun:
- When:
    mongodb_setup:
      $eq:
      - standalone-streams
    branch_name:
      $gte: v7.2
