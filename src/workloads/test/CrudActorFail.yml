SchemaVersion: 2018-07-01
Owner: "@mongodb/server-execution"
Description: >
  Run basic insert and find and delete workload on a collection clustered by {_id: 1} .
  Clustered collections are planned to mainly serve operations over the cluster
  key such as monotonically increasing inserts, range queries and range deletions.

GlobalDefaults:
  RecordIdExtraPaddingParam: &RecordIdExtraPaddingParam {^Parameter: {Name: "RecordIdExtraPadding", Default: 0}}
  PaddingGenerator: &PaddingGenerator {^FastRandomString: {length: *RecordIdExtraPaddingParam, alphabet: "a"}}
  Database: &Database test
  Collection: &Collection Collection0
  Namespace: &Namespace test.Collection0
  DocumentCount: &docCount 1000
  MaxPhases: &MaxPhases 3


Actors:
# Phase 0: create collection
- Name: Create
  Type: RunCommand
  Threads: 1
  Phases:
    OnlyActiveInPhases:
      Active: [0]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: 1
        Database: *Database
        Operations:
        - OperationName: RunCommand
          OperationCommand:
            create: *Collection
            clusteredIndex: {key: {_id: 1}, unique: true}


# Phase 2: insert. TODO Make multithreaded once TIG-2938 is resolved.
- Name: Insert
  Type: Loader
  Threads: 1
  Phases:
    OnlyActiveInPhases:
      Active: [1]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: 1
        Database: *Database
        Threads: 1
        CollectionCount: 1
        DocumentCount: *docCount
        BatchSize: 1000
        Document:
          # Start from {_id: "0000001"} in order to be able to set the ^RandomInt max bound to *docCount
          # in the LookupByClusterKey phase. This works around TIG-3759.
          _id: {^Join: {array: [{ ^FormatString: {"format": "%07d", "withArgs": [{^Inc: {start: 1}}]}}, *PaddingGenerator]}}
          a: {^FastRandomString: {length: 6, alphabet: "0123456789"}}
          b: {^FastRandomString: {length: 1024}}

# # Phase 6: Point deletion.
# - Name: PointDeleter
#   Type: CrudActor
#   Database: *Database
#   Threads: 4
#   Phases:
#     OnlyActiveInPhases:
#       Active: [2]
#       NopInPhasesUpTo: *MaxPhases
#       PhaseConfig:
#         Repeat: &Reps 250
#         Collection: *Collection
#         ThrowOnFailure: false  # Whether to throw an exception if an operation fails
#         RecordFailure: true  # If ThrowOnFailure is false, whether the failed operations should be recorded.
#         Operations:
#         - OperationName: insertOne
#           OperationCommand:
#             Document:
#               {test: {^Join: {array: [{ ^FormatString: {"format": "%07d", "withArgs": [{^Inc: {start: 0, multiplier: 1, step: 4}}]}}, *PaddingGenerator]}}, actorId: {^ActorId: {}}}

AutoRun:
- When:
    mongodb_setup:
      $eq:
      - replica-all-feature-flags
      - shard-lite-all-feature-flags
