SchemaVersion: 2018-07-01
Owner: "@mongodb/product-perf"
Description: |
  Workload to Benchmark the effect of LongLivedTransactions on a Mixed workload.
  The intent here is to test multiple transactions contained within a singular transaction (long lived).
  The transactions are setup such that they cover a mixed set of operations (insert, query, update, remove).
  The operations are also divided in the length of their run (short, medium, long) and whether they contain scans or not.
  The workload has the following configuration:
  ~12GB dataset
  10,000,000 documnets in total
  Warm up phase, then operation phase followed by a quiesce phase
  Naming Conventions:
  Duration.Load_level.Operation.Type_of_test
  Operation:     Insert|Query|Update|Remove|Mixed
  Duration:      Short|Medium|Long
  Type of test:  Baseline|Benchmark
  Baseline without scans, benchmark with scans

Keywords:
- transactions
- longLived
- snapshot
- insert
- find
- update
- delete

Parameters:
- &InitialNumDocs {^Parameter: {Name: InitialNumDocs, Default: 10000000}}
- &SecondaryNumDocs {^Parameter: {Name: SecondaryNumDocs, Default: 10000000}}

GlobalDefaults:
  # Start: The following block gets updated for the other configurations.
  # In-memory: Database size works out about 12GB.
  InitialDocumentCount: *InitialNumDocs
  SecondaryDocumentCount: *SecondaryNumDocs
  GlobalRateValue: &GlobalRateValue 1 per 1250 microsecond
  ThreadsValue: &ThreadsValue 16
  # End: The previous block gets updated for the other configurations.

  # These values should match those are the top of LLTPhases.yml
  dbname: &dbname llt
  MaxPhases: &MaxPhases 22

  # The Sample Document Shape.
  Document: &Doc
    ts: {^Now: {}}
    caid: {^RandomInt: {min: 0, max: 1000}}
    cuid: {^RandomInt: {min: 0, max: 100000}}
    prod: {^RandomInt: {min: 0, max: 10000}}
    price: {^RandomDouble: {min: 0.0, max: 1000.0}}
    data: {^Join: {array: ["aaaaaaaaaa", {^FastRandomString: {length: {^RandomInt: {min: 0, max: 10}}}}]}}

  LLTIndexes: &LLTIndexes
  - keys: {price: 1, ts: 1, cuid: 1}     # Ptc
  - keys: {price: 1, cuid: 1}            # Pc
  - keys: {caid: 1, price: 1, cuid: 1}   # Cpc

  # Loader Config.
  LoadThreads: &LoadThreads 4
  LoadBatchSize: &LoadBatchSize 1000

  CollectionCount: &CollectionCount 4

  # The write concern. The intent is to use what is chosen as the default in 5.0.
  # The query operation name indicates the index in use (see LLTIndexes) :
  #  * Ptc => price_1_ts_1_cuid_1
  #  * Pc  => price_1_cuid_1
  #  * Cpc => caid_1_price_1_cuid_1


  # Create
  InsertOperation: &InsertOperation
    OperationName: insertOne
    OperationCommand:
      Document: *Doc
      OperationOptions:
        WriteConcern:
          Level: majority

  # Read
  PtcQueryOperation: &PtcQueryOperation
    OperationName: findOne
    OperationCommand:
      Filter: {price: {$gte: {^RandomDouble: { min: 0.0, max: 500.0 }}}}
      Options:
        Hint: price_1_ts_1_cuid_1
        Comment: PtcQueryOperation

  PcQueryOperation: &PcQueryOperation
    OperationName: findOne
    OperationCommand:
      Filter: {price: {$gte: {^RandomDouble: { min: 0.0, max: 500.0 }}}}
      Options:
        Hint: price_1_cuid_1
        Comment: PcQueryOperation

  CpcQueryOperation: &CpcQueryOperation
    OperationName: findOne
    OperationCommand:
      Filter: {caid: {$gte: {^RandomInt: { min: 0, max: 1000 }}}}
      Options:
        Hint: caid_1_price_1_cuid_1
        Comment: CpcQueryOperation

  # Update
  PtcUpdateOperation: &PtcUpdateOperation
    OperationName: updateOne
    OperationCommand:
      Filter: {price: {$gte: {^RandomDouble: { min: 0.0, max: 500.0 }}}}
      Update:
        $set:
          ts: {^Now: {}}
          data: {^Join: {array: ["bbbbbbbbbb", {^FastRandomString: {length: {^RandomInt: {min: 0, max: 10}}}}]}}
      OperationOptions:
        Upsert: false
        WriteConcern:
          Level: majority
        Hint: price_1_ts_1_cuid_1

  PcUpdateOperation: &PcUpdateOperation
    OperationName: updateOne
    OperationCommand:
      Filter: {price: {$gte: {^RandomDouble: { min: 0.0, max: 500.0 }}}}
      Update:
        $set:
          ts: {^Now: {}}
          prod: {^RandomInt: {min: 0, max: 10000}}
      OperationOptions:
        Upsert: false
        WriteConcern:
          Level: majority
        Hint: price_1_cuid_1

  CpcUpdateOperation: &CpcUpdateOperation
    OperationName: updateOne
    OperationCommand:
      Filter: {caid: {$gte: {^RandomInt: { min: 0, max: 1000 }}}}
      Update:
        $set:
          ts: {^Now: {}}
          cuid: {^RandomInt: {min: 0, max: 100000}}
      OperationOptions:
        Upsert: false
        WriteConcern:
          Level: majority
        Hint: caid_1_price_1_cuid_1

  # Delete
  PtcRemoveOperation: &PtcRemoveOperation
    OperationName: deleteOne
    OperationCommand:
      Filter: {price: {$gte: {^RandomDouble: { min: 0.0, max: 1000.0 }}}}
      OperationOptions:
        Comment: PtcRemoveOperation
        WriteConcern:
          Level: majority

  PcRemoveOperation: &PcRemoveOperation
    OperationName: deleteOne
    OperationCommand:
      Filter: {price: {$gte: {^RandomDouble: { min: 0.0, max: 1000.0 }}}}
      OperationOptions:
        WriteConcern:
          Level: majority

  CpcRemoveOperation: &CpcRemoveOperation
    OperationName: deleteOne
    OperationCommand:
      Filter: {caid: {$gte: {^RandomInt: { min: 0, max: 1000 }}}}
      OperationOptions:
        WriteConcern:
          Level: majority

  # Scanner
  SnapshotScannerShortDuration: &SnapshotScannerShortDuration 1 minutes
  SnapshotScannerMediumDuration: &SnapshotScannerMediumDuration 10 minutes
  SnapshotScannerLongDuration: &SnapshotScannerLongDuration 60 minutes

ActorTemplates:
- TemplateName: InsertTemplate
  Config:
    Name: {^Parameter: {Name: "Name", Default: "Short.Insert.Baseline"}}
    Type: CrudActor
    Threads: *ThreadsValue
    Phases:
      OnlyActiveInPhases:
        Active: {^Parameter: {Name: "Active", Default: [6]}}
        NopInPhasesUpTo: *MaxPhases
        PhaseConfig:
          GlobalRate: *GlobalRateValue
          Threads: *ThreadsValue
          CollectionCount: *CollectionCount
          Database: *dbname
          Duration: {^Parameter: {Name: "Duration", Default: *SnapshotScannerShortDuration}}  # *SnapshotScannerShortDuration
          Blocking: {^Parameter: {Name: "Blocking", Default: true}}
          Operations:
          # Create
          - *InsertOperation
          - *InsertOperation
          - *InsertOperation
          - *InsertOperation
          - *InsertOperation
          - *InsertOperation

- TemplateName: QueryTemplate
  Config:
    Name: {^Parameter: {Name: "Name", Default: "Short.Query.Baseline"}}
    Type: CrudActor
    Threads: *ThreadsValue
    Phases:
      OnlyActiveInPhases:
        Active: {^Parameter: {Name: "Active", Default: [6]}}
        NopInPhasesUpTo: *MaxPhases
        PhaseConfig:
          GlobalRate: *GlobalRateValue
          Threads: *ThreadsValue
          CollectionCount: *CollectionCount
          Database: *dbname
          Duration: {^Parameter: {Name: "Duration", Default: *SnapshotScannerShortDuration}}  # *SnapshotScannerShortDuration
          Blocking: {^Parameter: {Name: "Blocking", Default: true}}
          Operations:
          # Read
          - *PtcQueryOperation
          - *PcQueryOperation
          - *CpcQueryOperation
          - *PtcQueryOperation
          - *PcQueryOperation
          - *CpcQueryOperation

- TemplateName: UpdateTemplate
  Config:
    Name: {^Parameter: {Name: "Name", Default: "Short.Update.Baseline"}}
    Type: CrudActor
    Threads: *ThreadsValue
    Phases:
      OnlyActiveInPhases:
        Active: {^Parameter: {Name: "Active", Default: [6]}}
        NopInPhasesUpTo: *MaxPhases
        PhaseConfig:
          GlobalRate: *GlobalRateValue
          Threads: *ThreadsValue
          CollectionCount: *CollectionCount
          Database: *dbname
          Duration: {^Parameter: {Name: "Duration", Default: *SnapshotScannerShortDuration}}  # *SnapshotScannerShortDuration
          Blocking: {^Parameter: {Name: "Blocking", Default: true}}
          Operations:
          # Update
          - *PtcUpdateOperation
          - *PcUpdateOperation
          - *CpcUpdateOperation
          - *PtcUpdateOperation
          - *PcUpdateOperation
          - *CpcUpdateOperation

- TemplateName: RemoveTemplate
  Config:
    Name: {^Parameter: {Name: "Name", Default: "Short.Remove.Baseline"}}
    Type: CrudActor
    Threads: *ThreadsValue
    Phases:
      OnlyActiveInPhases:
        Active: {^Parameter: {Name: "Active", Default: [6]}}
        NopInPhasesUpTo: *MaxPhases
        PhaseConfig:
          GlobalRate: *GlobalRateValue
          Threads: *ThreadsValue
          CollectionCount: *CollectionCount
          Database: *dbname
          Duration: {^Parameter: {Name: "Duration", Default: *SnapshotScannerShortDuration}}
          Blocking: {^Parameter: {Name: "Blocking", Default: true}}
          Operations:
          # Delete
          - *PtcRemoveOperation
          - *PcRemoveOperation
          - *CpcRemoveOperation
          - *PtcRemoveOperation
          - *PcRemoveOperation
          - *CpcRemoveOperation


- TemplateName: ScanTemplate
  Config:
    Name: {^Parameter: {Name: "Name", Default: "Short.Scan.Snapshot"}}
    Type: CollectionScanner
    Threads: *CollectionCount
    CollectionCount: *CollectionCount
    Database: *dbname
    GenerateCollectionNames: true
    Phases:
      OnlyActiveInPhases:
        Active: {^Parameter: {Name: "Active", Default: [9]}}  # [7]
        NopInPhasesUpTo: *MaxPhases
        PhaseConfig:
          Duration: {^Parameter: {Name: "Duration", Default: *SnapshotScannerShortDuration}}
          ScanDuration: {^Parameter: {Name: "ScanDuration", Default: *SnapshotScannerShortDuration}}
          ScanType: snapshot
          ScanContinuous: true
          GenerateCollectionNames: true
          CollectionSortOrder: forward
          FindOptions:
            BatchSize: 1000
            Hint: _id_
            Comment: {^Parameter: {Name: "Comment", Default: "Scan.Snapshot"}}

Clients:
  Default:
    QueryOptions:
      socketTimeoutMS: -1
      maxPoolSize: 2000

# Odd phases do operations, even phases quiesce.
Actors:
# Ensure that transactionLifetimeLimitSeconds supports all the possible ScanDurations.
# i.e. greater than SnapshotScannerLongDuration.
- Name: SetTransactionLifetimeLimit
  Type: AdminCommand
  Threads: 1
  Phases:
    OnlyActiveInPhases:
      Active: [0]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: 1
        Operation:
          OperationName: RunCommand
          OperationCommand:
            setParameter: 1
            transactionLifetimeLimitSeconds: 14400  # 4 Hours

- Name: InitialLoad
  Type: Loader
  Threads: *LoadThreads
  Phases:
    OnlyActiveInPhases:
      Active: [1]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Threads: *LoadThreads
        CollectionCount: *CollectionCount
        Database: *dbname
        Repeat: 1
        Document: *Doc
        DocumentCount: *InitialNumDocs
        Indexes: *LLTIndexes
        BatchSize: *LoadBatchSize

- Name: SecondLoadAfterIndexes
  Type: Loader
  Threads: *LoadThreads
  Phases:
    OnlyActiveInPhases:
      Active: [3]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Threads: *LoadThreads
        CollectionCount: *CollectionCount
        Database: *dbname
        Repeat: 1
        Document: *Doc
        DocumentCount: *SecondaryNumDocs
        BatchSize: *LoadBatchSize

- Name: QuiescePhase
  Type: QuiesceActor
  Threads: 1
  Database: *dbname
  Phases:
    OnlyActiveInPhases:
      Active: [0, 2, 4, 7, 10, 13, 16, 19, 22]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: 1

- Name: WarmUp
  Type: CollectionScanner
  Threads: *CollectionCount
  CollectionCount: *CollectionCount
  Database: *dbname
  GenerateCollectionNames: true
  Phases:
    OnlyActiveInPhases:
      Active: [5, 8, 11, 14, 17, 20]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        ScanType: standard
        GenerateCollectionNames: true
        Repeat: 1

# Guard Against timeout for no output.
- Name: LoggingActor
  Type: LoggingActor
  Threads: 1
  Phases:
    OnlyActiveInPhases:
      Active: [1, 3, 6, 9, 12, 15, 18, 21]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        LogEvery: 15 minutes
        Blocking: None

# Naming Conventions:
# Operation.Duration.Load_level.Operation.Type_of_test
# Operation:     Insert|Query|Update|Remove|Mixed
# Duration:      Short|Medium|Long
# Type of test:  Baseline|Benchmark
#
# Baseline without scans, benchmark with scans
- ActorFromTemplate:
    TemplateName: InsertTemplate
    TemplateParameters:
      Name: Short.Insert.Baseline

- ActorFromTemplate:
    TemplateName: QueryTemplate
    TemplateParameters:
      Name: Short.Query.Baseline

- ActorFromTemplate:
    TemplateName: UpdateTemplate
    TemplateParameters:
      Name: Short.Update.Baseline

- ActorFromTemplate:
    TemplateName: RemoveTemplate
    TemplateParameters:
      Name: Short.Remove.Baseline

- ActorFromTemplate:
    TemplateName: InsertTemplate
    TemplateParameters:
      Name: Short.Insert.Benchmark
      Active: [9]
      Blocking: none

- ActorFromTemplate:
    TemplateName: QueryTemplate
    TemplateParameters:
      Name: Short.Query.Benchmark
      Active: [9]
      Blocking: none

- ActorFromTemplate:
    TemplateName: UpdateTemplate
    TemplateParameters:
      Name: Short.Update.Benchmark
      Active: [9]
      Blocking: none

- ActorFromTemplate:
    TemplateName: RemoveTemplate
    TemplateParameters:
      Name: Short.Remove.Benchmark
      Active: [9]
      Blocking: none

## A thread per collection doing a scan.
- ActorFromTemplate:
    TemplateName: ScanTemplate
    TemplateParameters:
      Name: Short.Scan.Snapshot
      Active: [9]
      Comment: SnapshotScannerShort

- ActorFromTemplate:
    TemplateName: InsertTemplate
    TemplateParameters:
      Name: Medium.Insert.Baseline
      Active: [12]
      Duration: *SnapshotScannerMediumDuration

- ActorFromTemplate:
    TemplateName: QueryTemplate
    TemplateParameters:
      Name: Medium.Query.Baseline
      Active: [12]
      Duration: *SnapshotScannerMediumDuration

- ActorFromTemplate:
    TemplateName: UpdateTemplate
    TemplateParameters:
      Name: Medium.Update.Baseline
      Active: [12]
      Duration: *SnapshotScannerMediumDuration

- ActorFromTemplate:
    TemplateName: RemoveTemplate
    TemplateParameters:
      Name: Medium.Remove.Baseline
      Active: [12]
      Duration: *SnapshotScannerMediumDuration

- ActorFromTemplate:
    TemplateName: InsertTemplate
    TemplateParameters:
      Name: Medium.Insert.Benchmark
      Active: [15]
      Blocking: none
      Duration: *SnapshotScannerMediumDuration

- ActorFromTemplate:
    TemplateName: QueryTemplate
    TemplateParameters:
      Name: Medium.Query.Benchmark
      Active: [15]
      Blocking: none
      Duration: *SnapshotScannerMediumDuration

- ActorFromTemplate:
    TemplateName: UpdateTemplate
    TemplateParameters:
      Name: Medium.Update.Benchmark
      Active: [15]
      Blocking: none
      Duration: *SnapshotScannerMediumDuration

- ActorFromTemplate:
    TemplateName: RemoveTemplate
    TemplateParameters:
      Name: Medium.Remove.Benchmark
      Active: [15]
      Blocking: none
      Duration: *SnapshotScannerMediumDuration

# A thread per collection doing a scan.
- ActorFromTemplate:
    TemplateName: ScanTemplate
    TemplateParameters:
      Name: Medium.Scan.Snapshot
      Active: [15]
      Comment: SnapshotScannerMedium
      Duration: *SnapshotScannerMediumDuration
      ScanDuration: *SnapshotScannerMediumDuration

- ActorFromTemplate:
    TemplateName: InsertTemplate
    TemplateParameters:
      Name: Long.Insert.Baseline
      Active: [18]
      Duration: *SnapshotScannerLongDuration

- ActorFromTemplate:
    TemplateName: QueryTemplate
    TemplateParameters:
      Name: Long.Query.Baseline
      Active: [18]
      Duration: *SnapshotScannerLongDuration

- ActorFromTemplate:
    TemplateName: UpdateTemplate
    TemplateParameters:
      Name: Long.Update.Baseline
      Active: [18]
      Duration: *SnapshotScannerLongDuration

- ActorFromTemplate:
    TemplateName: RemoveTemplate
    TemplateParameters:
      Name: Long.Remove.Baseline
      Active: [18]
      Duration: *SnapshotScannerLongDuration

- ActorFromTemplate:
    TemplateName: InsertTemplate
    TemplateParameters:
      Name: Long.Insert.Benchmark
      Active: [21]
      Blocking: none
      Duration: *SnapshotScannerLongDuration

- ActorFromTemplate:
    TemplateName: QueryTemplate
    TemplateParameters:
      Name: Long.Query.Benchmark
      Active: [21]
      Blocking: none
      Duration: *SnapshotScannerLongDuration

- ActorFromTemplate:
    TemplateName: UpdateTemplate
    TemplateParameters:
      Name: Long.Update.Benchmark
      Active: [21]
      Blocking: none
      Duration: *SnapshotScannerLongDuration

- ActorFromTemplate:
    TemplateName: RemoveTemplate
    TemplateParameters:
      Name: Long.Remove.Benchmark
      Active: [21]
      Blocking: none
      Duration: *SnapshotScannerLongDuration

# A thread per collection doing a scan.
- ActorFromTemplate:
    TemplateName: ScanTemplate
    TemplateParameters:
      Name: Long.Scan.Snapshot
      Active: [21]
      Comment: SnapshotScannerLong
      Duration: *SnapshotScannerLongDuration
      ScanDuration: *SnapshotScannerLongDuration

AutoRun:
- When:
    mongodb_setup:
      $eq:
      - atlas-like-replica
      - replica
      - replica-all-feature-flags
      - single-replica
      - single-replica-classic-query-engine
      - single-replica-sbe
    branch_name:
      $neq:
      - v4.0
      - v4.2
