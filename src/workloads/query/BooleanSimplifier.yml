SchemaVersion: 2018-07-01
Owner: "@mongodb/query-optimization"

Description: |
  This workload measures performance of boolean expressions which can be simplified by
  the Boolean Simplifier. It is designed to track effectiveness of the simplifier.

RandomSeed: 172547222

GlobalDefaults:
  Database: &Database test
  Collection: &Coll Collection0
  DocumentCount: &DocumentCount 1e5
  Threads: &Threads 1
  MaxPhases: &MaxPhases 13
  Duration: &Duration 2 seconds
  QueryStringIn: &QueryStringIn [ "HrHCEtBAGnv",
                                  "pCqgFttJBou",
                                  "tjOnAuHAOpi",
                                  "PmqoJGpDFjB",
                                  "jEkEGEBnICu",
                                  "kjPIJuEMGjm",
                                  "nBKiBqKPCJN",
                                  "BFkCIrIECBt",
                                  "glhsCMqJPEs",
                                  "lEMoKmmCiKv"
                                ]
  LargeFilterTerms: &LargeFilterTerms 100

Actors:
- Name: ClearCollection
  Type: CrudActor
  Database: *Database
  Threads: 1
  Phases:
    OnlyActiveInPhases:
      Active: [0]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: 1
        Threads: 1
        Collection: *Coll
        Operations:
        - OperationName: drop

- Name: InsertData
  Type: Loader
  Threads: 4
  Phases:
    OnlyActiveInPhases:
      Active: [1]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: 1
        Database: *Database
        MultipleThreadsPerCollection: true
        CollectionCount: 1
        DocumentCount: *DocumentCount
        BatchSize: 1000
        Document:
          a1: {^RandomInt: {min: 0, max: 100}}
          b1: {^Inc: {start: 11, step: 2}}
          a2: {^RandomInt: {min: 0, max: 1000}}
          b2: 3
          c2: {^RandomInt: {min: 0, max: 5}}
          d2: {^RandomInt: {min: 0, max: 5}}
          e2: 4
          a3: {^RandomInt: {min: 0, max: 100}}
          b3: {^RandomInt: {min: 0, max: 100}}
          c3: {^Array: {of: {^FastRandomString: {length: 11}}, number: 10}}
        Indexes:
        - keys: {b1: 1}
        - keys: {c2: 1, d2: 1}

# Ensure all data is synced to disk.
- Name: Quiesce
  Type: QuiesceActor
  Threads: 1
  Database: *Database
  Phases:
    OnlyActiveInPhases:
      Active: [2]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: 1
        Threads: 1

# The simplifier optimizes out an $or's branch to single predicate {b1: 2} and makes an Index Scan plan possible.
- Name: SimplifiedOutOrBranch.BM
  Type: CrudActor
  Database: *Database
  Threads: *Threads
  Phases:
    OnlyActiveInPhases:
      Active: [3]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Duration: *Duration
        Collection: *Coll
        Operations:
        - OperationName: find
          OperationCommand:
            Filter: {$or: [{$and: [{a1: 1}, {a1: {$ne: 1}}]}, {b1: 2}]}

# The simplifier factorizes out common terms and makes a plan with one fetch possible instead
# of a plan with two fetches. Reducing number of fetch stages can be very beneficial especially
# if the down-the-plan-tree fetch is not selective.
- Name: SimplifierCollapsesTwoFetchesIntoOne.BM
  Type: CrudActor
  Database: *Database
  Threads: *Threads
  Phases:
    OnlyActiveInPhases:
      Active: [4]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Duration: *Duration
        Collection: *Coll
        Operations:
        - OperationName: find
          OperationCommand:
            Filter: {a2: 1, $or: [{c2: 1, d2: 2, b2: 3}, {c2: 1, d2: 2, e2: 4}]}

# The simplifier simplifes the filter expression to {a3: 0, b3: 0} which makes evaluating the Filter
# stage of Collection Scan plan much cheaper.
- Name: SimplifiedCollScanFilter.BM
  Type: CrudActor
  Database: *Database
  Threads: *Threads
  Phases:
    OnlyActiveInPhases:
      Active: [5]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Duration: *Duration
        Collection: *Coll
        Operations:
        - OperationName: find
          OperationCommand:
            Filter: {
                $and: [
                    {b3: 0},
                    {
                        $or: [
                            {a3: 0},
                            {
                                $and: [
                                    {c3: {$in: *QueryStringIn}},
                                    {c3: {$nin: *QueryStringIn}},
                                ]
                            }
                        ]
                    },
                ]
            }

# The simplifier simplifes the filter expression to {b2: 3, c2: 3, d2: 3} which makes evaluating
# the Filter stage of Index Scan plan much cheaper.
- Name: SimplifiedIndexScanFilter.BM
  Type: CrudActor
  Database: *Database
  Threads: *Threads
  Phases:
    OnlyActiveInPhases:
      Active: [6]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Duration: *Duration
        Collection: *Coll
        Operations:
        - OperationName: find
          OperationCommand:
            Filter: {
                $and: [
                    {b2: 3},
                    {c2: 3},
                    {
                        $or: [
                            {d2: 3},
                            {
                                $and: [
                                    {c3: {$in: *QueryStringIn}},
                                    {c3: {$nin: *QueryStringIn}},
                                ]
                            }
                        ]
                    },
                ]
            }

# The simplifier reduces the filter expression to {c2: 1, d2: 1} which makes possible a covered
# index scan plan.
- Name: CoveredQuery.BM
  Type: CrudActor
  Database: *Database
  Threads: *Threads
  Phases:
    OnlyActiveInPhases:
      Active: [7]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Duration: *Duration
        Collection: *Coll
        Operations:
        - OperationName: find
          OperationCommand:
            Filter: {$or: [{c3: "HrHCEtBAGnv", c2: 1, d2: 1}, {c3: {$ne: "HrHCEtBAGnv"}, c2: 1, d2: 1}]}
            Projection: {_id: 0, c2: 1, d2: 1}

# Collection scan with very large filter.
- Name: LargeFilterCollectionScan.BM
  Type: CrudActor
  Database: *Database
  Threads: *Threads
  Phases:
    OnlyActiveInPhases:
      Active: [8]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Duration: *Duration
        Collection: *Coll
        Operations:
        - OperationName: find
          OperationCommand:
            Filter: {$or:
                {^Array: {of: {$and: [
                  {"a1": {^RandomInt: {min: 0, max: 5}}},
                  {"c1": {^RandomInt: {min: 0, max: 5}}}]},
                          number: *LargeFilterTerms}}}

# Index scan with very large filter.
- Name: LargeFilterIndexScan.BM
  Type: CrudActor
  Database: *Database
  Threads: *Threads
  Phases:
    OnlyActiveInPhases:
      Active: [9]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Duration: *Duration
        Collection: *Coll
        Operations:
        - OperationName: find
          OperationCommand:
            Filter: {$or:
                {^Array: {of: {$and: [
                  {"c2": {^RandomInt: {min: 0, max: 5}}},
                  {"d2": {^RandomInt: {min: 0, max: 5}}}]},
                          number: *LargeFilterTerms}}}

# The simplifier reduces the filter expression to $alwaysFalse, which generates EOF plan.
- Name: AlwaysFalse.BM
  Type: CrudActor
  Database: *Database
  Threads: *Threads
  Phases:
    OnlyActiveInPhases:
      Active: [10]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Duration: *Duration
        Collection: *Coll
        Operations:
        - OperationName: find
          OperationCommand:
            Filter: {$or: [{a1: {$eq: 1, $ne: 1}, b1: 1}, {a1: {$eq: 1, $ne: 1}, b1: {$ne: 1}}]}

# The simplifier reduces the filter expression to $alwaysFalse, which generates EOF plan.
- Name: AlwaysTrue.BM
  Type: CrudActor
  Database: *Database
  Threads: *Threads
  Phases:
    OnlyActiveInPhases:
      Active: [11]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Duration: *Duration
        Collection: *Coll
        Operations:
        - OperationName: find
          OperationCommand:
            Filter: {$or: [{b1: 1}, {b1: {$ne: 1}}]}

# The simplifier opens up $nor which makes possible Index Scan plans.
- Name: SimplifierOpenNOR.BM
  Type: CrudActor
  Database: *Database
  Threads: *Threads
  Phases:
    OnlyActiveInPhases:
      Active: [12]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Duration: *Duration
        Collection: *Coll
        Operations:
        - OperationName: find
          OperationCommand:
            Filter: {$nor: [{$or: [{b1: {$ne: 1}}, {b1: {$ne: 1}}]}]}

AutoRun:
- When:
    mongodb_setup:
      $eq:
      - replica
      - single-replica
      - standalone
      - standalone-all-feature-flags 
      - standalone-classic-query-engine
    atlas_setup:
      $neq:
      - M30-repl
    branch_name:
      $gte: v7.3
