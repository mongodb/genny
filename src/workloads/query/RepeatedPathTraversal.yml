SchemaVersion: 2018-07-01
Owner: "@mongodb/query"
Description: >
  This workload stresses the query execution engine by running queries over a set of paths which
  share a common prefix. Crucially, these queries never match a document in the collection.

Keywords:
- Loader
- CrudActor
- QuiesceActor
- insert
- find

GlobalDefaults:
  Database: &Database test
  Collection: &Collection Collection0
  DocumentCount: &DocumentCount 1e6
  Repeat: &Repeat 50
  Threads: &Threads 1
  MaxPhases: &MaxPhases 9

Actors:
# Clear any pre-existing collection state.
- Name: ClearCollection
  Type: CrudActor
  Database: *Database
  Phases:
    OnlyActiveInPhases:
      Active: [0]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: 1
        Threads: 1
        Collection: *Collection
        Operations:
        - OperationName: drop

# Insert documents with 2 levels of nested arrays where the leaves contain many fields. This test
# targets workloads where the paths queried share a common prefix ("a.b.c", "a.b.d", and so on).
- Name: InsertRepeatedPathTraversalData
  Type: Loader
  Threads: 1
  Phases:
    OnlyActiveInPhases:
      Active: [1]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: 1
        Database: *Database
        Threads: 1
        CollectionCount: 1
        DocumentCount: *DocumentCount
        BatchSize: 1000
        Document: {a: [{ ^Repeat: { count: 3, fromGenerator: { b: [{ c: 0, d: 0, e: 0, f: 0, g: 0, h: 0, i: 0, j: 0, k: 0, l: 0}]}}}]}

- Name: QuiesceRepeatedPathTraversalData
  Type: QuiesceActor
  Threads: 1
  Database: *Database
  Phases:
    OnlyActiveInPhases:
      Active: [2]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: 1
        Threads: 1

- Name: AggregationExpressionRepeatedPathTraversal
  Type: CrudActor
  Database: *Database
  Threads: *Threads
  Phases:
    OnlyActiveInPhases:
      Active: [3]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *Repeat
        Collection: *Collection
        Operations:
        - OperationName: find
          OperationCommand:
            Filter: {$expr: {$or: [
              {$eq: ["$a.b.c", 1]},
              {$eq: ["$a.b.d", 1]},
              {$eq: ["$a.b.e", 1]},
              {$eq: ["$a.b.f", 1]},
              {$eq: ["$a.b.g", 1]}]}}

- Name: MatchExpressionRepeatedPathTraversal
  Type: CrudActor
  Database: *Database
  Threads: *Threads
  Phases:
    OnlyActiveInPhases:
      Active: [4]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *Repeat
        Collection: *Collection
        Operations:
        - OperationName: find
          OperationCommand:
            Filter: { $or: [
              {"a.b.c": 1},
              {"a.b.d": 1},
              {"a.b.e": 1},
              {"a.b.f": 1},
              {"a.b.g": 1}]}

- Name: AggregationExpressionRepeatedPathTraversalInequality
  Type: CrudActor
  Database: *Database
  Threads: *Threads
  Phases:
    OnlyActiveInPhases:
      Active: [5]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *Repeat
        Collection: *Collection
        Operations:
        - OperationName: find
          OperationCommand:
            Filter: {$expr:
                       {$or: [
                         {$ne: ["$a.b.c", "$a.b.d"]},
                         {$ne: ["$a.b.d", "$a.b.e"]},
                         {$ne: ["$a.b.e", "$a.b.f"]},
                         {$ne: ["$a.b.f", "$a.b.g"]},
                         {$ne: ["$a.b.g", "$a.b.c"]}]}}

- Name: MatchExpressionRepeatedPathTraversalInequality
  Type: CrudActor
  Database: *Database
  Threads: *Threads
  Phases:
    OnlyActiveInPhases:
      Active: [6]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *Repeat
        Collection: *Collection
        Operations:
        - OperationName: find
          OperationCommand:
            Filter: {$or: [{"a.b.c": {$ne: 0}},
                           {"a.b.d": {$ne: 0}},
                           {"a.b.e": {$ne: 0}},
                           {"a.b.f": {$ne: 0}},
                           {"a.b.g": {$ne: 0}}]}

# Double the number of clauses.
- Name: AggregationExpressionRepeatedPathTraversalWidePredicate
  Type: CrudActor
  Database: *Database
  Threads: *Threads
  Phases:
    OnlyActiveInPhases:
      Active: [7]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *Repeat
        Collection: *Collection
        Operations:
        - OperationName: find
          OperationCommand:
            Filter:
              {$expr: {$or: [
                {$eq: ["$a.b.c", 1]},
                {$eq: ["$a.b.d", 1]},
                {$eq: ["$a.b.e", 1]},
                {$eq: ["$a.b.f", 1]},
                {$eq: ["$a.b.g", 1]},
                {$eq: ["$a.b.h", 1]},
                {$eq: ["$a.b.i", 1]},
                {$eq: ["$a.b.j", 1]},
                {$eq: ["$a.b.k", 1]},
                {$eq: ["$a.b.l", 1]}]}}

- Name: MatchExpressionRepeatedPathTraversalWidePredicate
  Type: CrudActor
  Database: *Database
  Threads: *Threads
  Phases:
    OnlyActiveInPhases:
      Active: [8]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: *Repeat
        Collection: *Collection
        Operations:
        - OperationName: find
          OperationCommand:
            Filter: {$or: [
              {"a.b.c": 1},
              {"a.b.d": 1},
              {"a.b.e": 1},
              {"a.b.f": 1},
              {"a.b.g": 1},
              {"a.b.h": 1},
              {"a.b.i": 1},
              {"a.b.j": 1},
              {"a.b.k": 1},
              {"a.b.l": 1}]}

AutoRun:
- When:
    mongodb_setup:
      $eq:
      - standalone
      - standalone-all-feature-flags
      - standalone-classic-query-engine
      - standalone-sbe
    branch_name:
      $neq:
      - v4.0
      - v4.2
      - v4.4
      - v5.0
