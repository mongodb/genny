SchemaVersion: 2018-07-01
Owner: "@mongodb/query"
Description: >
  This is a template of predefined variants for QueryStats workloads.

GlobalDefaults:
  # Local constants.
  PhasesPerStage: &PhasesPerStage 6
  SetupPhases: &SetupPhases 2

  # Workload "constants."
  Database: &Database {^Parameter: {Name: Database, Default: test}}
  Collection: &Collection {^Parameter: {Name: Collection, Default: Collection0}}

  # Template variables.
  Name: &Name {^Parameter: {Name: Name, Default: {unused: "Need to specify the stage name."}}}
  EntriesPerObject: &EntriesPerObject {^Parameter: {Name: EntriesPerObject, Default: {^RandomInt: {min: 1, max: 350}}}}
  Group: &Group {^Parameter: {Name: Group, Default: 1}}
  StageInGroup: &StageInGroup {^Parameter: {Name: StageInGroup, Default: 1}}
  # For if there needs to be additional initial phases.
  InitialPhase: &InitialPhase {^Parameter: {Name: InitialPhase, Default: *SetupPhases}}
  NumGroups: &NumGroups {^Parameter: {Name: NumGroups, Default: {unused: "Need to specify the number of groups being run."}}}
  StagesPerGroup: &StagesPerGroup {^Parameter: {Name: StagesPerGroup, Default: {unused: "Need to specify the number of stages per group."}}}

  # Syntactic sugar.
  CycleLength: &CycleLength {^Parameter: {Name: CycleLength, Default: {unused: "Need to provide the cycle length."}}}
  GroupAndStageToPhase: &GroupAndStageToPhase
    ^NumExpr:
      withExpression: "((group - 1) * spg + (sig - 1)) * pps + initial"
      andValues:
        group: *Group
        spg: *StagesPerGroup
        sig: *StageInGroup
        pps: *PhasesPerStage
        initial: *InitialPhase
  HmacParameters: &HmacParameters {transformIdentifiers: {algorithm: "hmac-sha-256", hmacKey: {^BinDataSensitive: {numBytes: 32}}}}
  NumStages: &NumStages {^NumExpr: {withExpression: "groups * spg", andValues: {groups: *NumGroups, spg: *StagesPerGroup}}}
  # Subtract 1 for zero-indexed phases.
  MaxPhases: &MaxPhases {^NumExpr: {withExpression: "stages * pps + initial - 1", andValues: {stages: *NumStages, pps: *PhasesPerStage, initial: *InitialPhase}}}

SetupStage:
  ^FlattenOnce:
  - LoadConfig:
      Path: QueryStatsStages.tmpl
      Key: SetupStage
      Parameters:
        # Workload "constants."
        Database: *Database
        Collection: *Collection
        MaxPhases: *MaxPhases

CycleBaseStage:
  ^FlattenOnce:
  - LoadConfig:
      Path: QueryStatsStages.tmpl
      Key: StageTemplate
      Parameters:
        # Workload "constants."
        Database: *Database
        Collection: *Collection
        MaxPhases: *MaxPhases

        # Template variables.
        AggregatePhase: []  # Disable query stats.
        StartingPhase: *GroupAndStageToPhase
        Suffix: {^PreprocessorFormatString: {format: "Cycle%d-%s-Base", withArgs: [*CycleLength, *Name]}}

        # Payload
        FindCommandPayload: &CyclePayload
          ^Cycle:
            ofLength: *CycleLength
            fromGenerator:
              ^Object:
                withNEntries: *EntriesPerObject
                havingKeys: {^RandomString: {length: 10}}
                andValues: {$exists: false}
                duplicatedKeys: skip

CycleHmacStage:
  ^FlattenOnce:
  - LoadConfig:
      Path: QueryStatsStages.tmpl
      Key: QueryStatsStageTemplate
      Parameters:
        # Workload "constants."
        Database: *Database
        Collection: *Collection
        MaxPhases: *MaxPhases

        # Template variables.
        QueryStatsParameters: *HmacParameters
        StartingPhase: *GroupAndStageToPhase
        Suffix: {^PreprocessorFormatString: {format: "Cycle%d-%s-HMAC", withArgs: [*CycleLength, *Name]}}

        # Payload
        FindCommandPayload: *CyclePayload

CycleTextStage:  # Cleartex, instead of obscured by HMAC.
  ^FlattenOnce:
  - LoadConfig:
      Path: QueryStatsStages.tmpl
      Key: QueryStatsStageTemplate
      Parameters:
        # Workload "constants."
        Database: *Database
        Collection: *Collection
        MaxPhases: *MaxPhases

        # Template variables.
        StartingPhase: *GroupAndStageToPhase
        Suffix: {^PreprocessorFormatString: {format: "Cycle%d-%s-Text", withArgs: [*CycleLength, *Name]}}

        # Payload
        FindCommandPayload: *CyclePayload

UniqueBaseStage:
  ^FlattenOnce:
  - LoadConfig:
      Path: QueryStatsStages.tmpl
      Key: StageTemplate
      Parameters:
        # Workload "constants."
        Database: *Database
        Collection: *Collection
        MaxPhases: *MaxPhases

        # Template variables.
        AggregatePhase: []  # Disable query stats.
        StartingPhase: *GroupAndStageToPhase
        Suffix: {^PreprocessorFormatString: {format: "Unique-%s-Base", withArgs: [*Name]}}

        # Payload
        FindCommandPayload: &UniquePayload
          ^Object:
            withNEntries: *EntriesPerObject
            havingKeys: {^RandomString: {length: 10}}
            andValues: {$exists: false}
            duplicatedKeys: skip

UniqueHmacStage:
  ^FlattenOnce:
  - LoadConfig:
      Path: QueryStatsStages.tmpl
      Key: QueryStatsStageTemplate
      Parameters:
        # Workload "constants."
        Database: *Database
        Collection: *Collection
        MaxPhases: *MaxPhases

        # Template variables.
        QueryStatsParameters: *HmacParameters
        StartingPhase: *GroupAndStageToPhase
        Suffix: {^PreprocessorFormatString: {format: "Unique-%s-HMAC", withArgs: [*Name]}}

        # Payload
        FindCommandPayload: *UniquePayload

UniqueTextStage:
  ^FlattenOnce:
  - LoadConfig:
      Path: QueryStatsStages.tmpl
      Key: QueryStatsStageTemplate
      Parameters:
        # Workload "constants."
        Database: *Database
        Collection: *Collection
        MaxPhases: *MaxPhases

        # Template variables.
        StartingPhase: *GroupAndStageToPhase
        Suffix: {^PreprocessorFormatString: {format: "Unique-%s-Text", withArgs: [*Name]}}

        # Payload
        FindCommandPayload: *UniquePayload
