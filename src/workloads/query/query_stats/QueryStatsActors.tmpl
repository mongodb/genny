SchemaVersion: 2018-07-01
Owner: "@mongodb/query"
Description: >
  This is a template library of actors for QueryStats workloads.

GlobalDefaults:
  # Workload "constants."
  Database: &Database {^Parameter: {Name: Database, Default: test}}
  Collection: &Collection {^Parameter: {Name: Collection, Default: Collection0}}
  MaxPhases: &MaxPhases {^Parameter: {Name: MaxPhases, Default: {unused: "Need to specify the max phase number."}}}

  # Template variables.
  Name: &Name {^Parameter: {Name: Name, Default: {unused: "Need to specify the actor name."}}}
  Duration: &Duration {^Parameter: {Name: Duration, Default: 5 minutes}}
  Payload: &Payload {^Parameter: {Name: Payload, Default: {}}}
  Phases: &Phases {^FlattenOnce: [{^Parameter: {Name: Phases, Default: {unused: "Need to specify the actor's phase(s)."}}}]}

QueryStatsCacheSizeActor:
  Name: *Name
  Type: RunCommand
  Threads: 1
  Phases:
    OnlyActiveInPhases:
      Active: *Phases
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: 1
        Database: admin
        Operations:
        - OperationName: AdminCommand
          OperationCommand:
            # Configuring the queryStats store size to an arbitrary value which seems reasonable.
            # This ensures that if run on different sized machines, the test will remain the same.
            setParameter: 1
            internalQueryStatsCacheSize: {^Parameter: {Name: Size, Default: {unused: "Need to specify the query stats cache size to change to."}}}

# Syntactic sugar to reduce the size of the workload file.
QueryStatsQuiesceActor:
  Name: *Name
  Type: QuiesceActor
  Threads: 1
  Database: *Database
  Phases:
    OnlyActiveInPhases:
      Active: *Phases
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Repeat: 1

QueryStatsPrepopulateActor:
  Name: *Name
  Type: CrudActor
  Threads: 32
  Database: *Database
  Phases:
    OnlyActiveInPhases:
      Active: *Phases
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Duration: {^Parameter: {Name: Duration, Default: {unused: "Need to specify a prepopulate duration."}}}
        Repeat: {^Parameter: {Name: Repeat, Default: {unused: "Need to specify a repeat count."}}}
        Collection: *Collection
        Operations:
          ^FlattenOnce:
          - OperationName: find
            OperationCommand:
              Filter:
                $and:
                # So that this can use an index scan and immediately return. We don't want to be
                # spending actual time on this query, we just want it in the logs.
                - a1: {^RandomDouble: {min: 1000000, max: 10000000000}}
                - *Payload

QueryStatsFindCommandActor:
  Name: *Name
  Type: CrudActor
  Threads: 32
  Database: *Database
  Phases:
    OnlyActiveInPhases:
      Active: *Phases
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Duration: *Duration
        Collection: *Collection
        Operations:
        - OperationName: find
          OperationCommand:
            # This will create a find command with a random number of fields from 3 to 350, to create varying query shapes and sizes.
            Filter:
              $and:
                - a1: 1
                - a2: 1
                - *Payload

QueryStatsAggregateActor:
  Name: *Name
  Type: AdminCommand
  Threads: {^Parameter: {Name: Threads, Default: 1}}
  Phases:
    OnlyActiveInPhases:
      Active: *Phases
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Duration: *Duration
        SleepBefore: {^Parameter: {Name: SleepBefore, Default: 1 second}}
        Database: admin
        Operations:
        - OperationMetricsName: QueryStatsMetrics
          OperationName: AdminCommand
          OperationCommand:
            aggregate: 1
            pipeline:
            - $queryStats: {^Parameter: {Name: "QueryStatsParameters", Default: {}}}
              # The purpose of $count is to ensure we've exhausted the cursor/ data stream and looked at each partition.
            - $count: "numDocuments"
            cursor: {}
