SchemaVersion: 2018-07-01
Owner: Query Execution
Description: |
  TODO

Keywords:
  - timeseries
  - aggregate

GlobalDefaults:
  Database: &database test
  Collection: &collection Collection0
  DocumentCount: &documentCount 1_000_000
  Repeat: &repeat 1000
  Threads: &threads 1
  MaxPhases: &maxPhases 9

Clients:
  Default:
    QueryOptions:
      maxPoolSize: 400

Actors:
  # Clear any pre-existing collection state.
  - Name: ClearCollection
    Type: CrudActor
    Database: *database
    Threads: 1
    Phases:
      OnlyActiveInPhases:
        Active: [0]
        NopInPhasesUpTo: *maxPhases
        PhaseConfig:
          Repeat: 1
          Threads: 1
          Collection: *collection
          Operations:
            - OperationName: drop

  - Name: InsertData
    Type: Loader
    Threads: 1
    Phases:
      OnlyActiveInPhases:
        Active: [1]
        NopInPhasesUpTo: *maxPhases
        PhaseConfig:
          Repeat: 1
          Threads: 1
          Database: *database
          CollectionCount: 1
          DocumentCount: *documentCount
          BatchSize: 1
          Document:
            # ComposedProjections
            # these could be objects or arrays i guess 
            a1: {b1: {c1: {^RandomInt: {min: 10, max: 20}}, d1: {^RandomInt: {min: 10, max: 20}}}}

            # SortOnTemporaryField
            a2: {c2: {^RandomDouble: {min: 0.0, max: 1000.0}}}
            b2: {^RandomDouble: {min: 0.0, max: 1000.0}}

            # EarlyFiltering
            a3: {^RandomDouble: {min: 0.0, max: 1000.0}}
            # Zero is fine, the point is that we don't rewrite the plan without ABT
            b3: 0

            # FilterWithRepeatedTraversal
            a4: {^Array: {of: {b4: {^RandomInt: {min: 0, max: 20}}, c4: {^RandomInt: {min: 0, max: 20}}}, number: 10}}
            

  - Name: Quiesce
    Type: QuiesceActor
    Threads: 1
    Database: *database
    Phases:
      OnlyActiveInPhases:
        Active: [2, 4, 6, 8]
        NopInPhasesUpTo: *maxPhases
        PhaseConfig:
          Repeat: 1
          Threads: 1

  - Name: ComposedProjections
    Type: CrudActor
    Database: *database
    Threads: *threads
    Phases:
      OnlyActiveInPhases:
        Active: [3]
        NopInPhasesUpTo: *maxPhases
        PhaseConfig:
          Duration: 1 minute
          Database: *database
          Collection: *collection
          Operations:
            - OperationMetricsName: ComposedProjections
              OperationName: aggregate
              OperationCommand:
                Pipeline:
                  [{$project: {_id: 0, "a1.b1": 1}}, {$project: {"a1.b1.c1": 0}}]

  - Name: SortOnTemporaryField
    Type: CrudActor
    Database: *database
    Threads: *threads
    Phases:
      OnlyActiveInPhases:
        Active: [5]
        NopInPhasesUpTo: *maxPhases
        PhaseConfig:
          Duration: 1 minute
          Database: *database
          Collection: *collection
          Operations:
            - OperationMetricsName: SortOnTemporaryField
              OperationName: aggregate
              OperationCommand:
                Pipeline:
                  [{$project: {_id: 0, a2: 1, b2: 1, key: "$a2.c2"}}, {$sort: {key: 1}}, {$project: {key: 0}}]

  - Name: EarlyFiltering
    Type: CrudActor
    Database: *database
    Threads: *threads
    Phases:
      OnlyActiveInPhases:
        Active: [7]
        NopInPhasesUpTo: *maxPhases
        PhaseConfig:
          Duration: 1 minute
          Database: *database
          Collection: *collection
          Operations:
            - OperationMetricsName: EarlyFiltering
              OperationName: aggregate
              OperationCommand:
                Pipeline:
                  # I changed the $match, but I think that's okay
                  [{$sort: {a3: 1}}, {$addFields: {temp: {$add: ["$a3", "$b3"]}}}, {$match: {temp: {$gt: 500.0}}}]


  - Name: FilterWithRepeatedTraversal
    Type: CrudActor
    Database: *database
    Threads: *threads
    Phases:
      OnlyActiveInPhases:
        Active: [9]
        NopInPhasesUpTo: *maxPhases
        PhaseConfig:
          Duration: 1 minute
          Database: *database
          Collection: *collection
          Operations:
            - OperationMetricsName: FilterWithRepeatedTraversal
              OperationName: aggregate
              OperationCommand:
                Pipeline:
                  [{$match: {$or: [{"a4.b4": {$lt: 10}}, {"a4.c4": {$gt: 10}}]}}]



AutoRun:
  - When:
      mongodb_setup:
        $eq:
          - replica
          - replica-80-feature-flags
          - replica-all-feature-flags
      branch_name:
        $gte: v8.0
