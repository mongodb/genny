SchemaVersion: 2018-07-01
Owner: Query Execution
Description: |
  This workload measures performance for $limit and $skip when different constants are supplied as
  arguments.

Keywords:
  - limit
  - skip
  - cache
  - parametrization
  - classic
  - sbe

GlobalDefaults:
  Database: &Database test
  Collection: &Collection Collection0
  DocumentCount: &DocumentCount 1e6
  Threads: &Threads 1
  MaxPhases: &MaxPhases 8
  LimitNumber: &limitNum { ^Inc: { start: 100 } }
  SkipNumber: &skipNum { ^Inc: { start: 0, step: 100 } }

ActorTemplates:
  - TemplateName: RunAggCommand
    Config:
      Name: &Name { ^Parameter: { Name: "name", Default: "RunAggCommand" } }
      Type: CrudActor
      Database: *Database
      Collection: *Collection
      Threads: 4
      Phases:
        OnlyActiveInPhases:
          Active:
            {
              ^Parameter:
                {
                  Name: "active",
                  Default: { unused: "Invalid phase number." },
                },
            }
          NopInPhasesUpTo: *MaxPhases
          PhaseConfig:
            Repeat: 1000
            Database: *Database
            Collection: *Collection
            Operations:
              - OperationName: aggregate
                OperationCommand:
                  Pipeline:
                    {
                      ^Parameter:
                        {
                          Name: "pipeline",
                          Default: { unused: "Invalid pipeline." },
                        },
                    }

Clients:
  Default:
    QueryOptions:
      maxPoolSize: 400

Actors:
  # Clear any pre-existing collection state.
  - Name: ClearCollection
    Type: CrudActor
    Database: *Database
    Threads: *Threads
    Phases:
      OnlyActiveInPhases:
        Active: [0]
        NopInPhasesUpTo: *MaxPhases
        PhaseConfig:
          Repeat: 1
          Threads: *Threads
          Collection: *Collection
          Operations:
            - OperationName: drop

  - Name: InsertData
    Type: Loader
    Threads: 4
    Phases:
      OnlyActiveInPhases:
        Active: [1]
        NopInPhasesUpTo: *MaxPhases
        PhaseConfig:
          Repeat: 1
          Database: *Database
          MultipleThreadsPerCollection: true
          CollectionCount: 1
          DocumentCount: *DocumentCount
          BatchSize: 1000
          Document:
            zero: 0
            hello: "hellohellohellohellobye"
            randomInt:
              { ^Choose: { from: [1, 2, 3, 4, 5], deterministic: true } }

  # Phase 2: Ensure all data is synced to disk.
  - Name: Quiesce
    Type: QuiesceActor
    Threads: 1
    Database: *Database
    Phases:
      OnlyActiveInPhases:
        Active: [2]
        NopInPhasesUpTo: *MaxPhases
        PhaseConfig:
          Repeat: 1
          Threads: 1

  # Phase 3-N: Run pipelines with limit, skip, and limit + skip.
  - ActorFromTemplate:
      TemplateName: RunAggCommand
      TemplateParameters:
        name: "LimitVaryConstant"
        active: [3]
        pipeline:
          [
            {
              $match:
                { $and: [{ hello: "hellohellohellohellobye" }, { zero: 0 }] },
            },
            { $limit: *limitNum },
            { $project: { _id: 0 } },
          ]

  - ActorFromTemplate:
      TemplateName: RunAggCommand
      TemplateParameters:
        name: "SkipVaryConstant"
        active: [4]
        pipeline:
          [
            {
              $match:
                { $and: [{ hello: "hellohellohellohellobye" }, { zero: 0 }] },
            },
            { $skip: *skipNum },
            { $project: { _id: 0 } },
          ]

  - ActorFromTemplate:
      TemplateName: RunAggCommand
      TemplateParameters:
        name: "LimitSkipVaryConstant"
        active: [5]
        pipeline:
          [
            {
              $match:
                { $and: [{ hello: "hellohellohellohellobye" }, { zero: 0 }] },
            },
            { $skip: *skipNum },
            { $limit: *limitNum },
            { $project: { _id: 0 } },
          ]

  - ActorFromTemplate:
      TemplateName: RunAggCommand
      TemplateParameters:
        name: "SortLimitVaryConstant"
        active: [6]
        pipeline:
          [
            {
              $match:
                { $and: [{ hello: "hellohellohellohellobye" }, { zero: 0 }] },
            },
            { $sort: { randomInt: 1 } },
            { $limit: *limitNum },
            { $project: { _id: 0 } },
          ]

  - ActorFromTemplate:
      TemplateName: RunAggCommand
      TemplateParameters:
        name: "SortLimitSkipVaryConstant"
        active: [7]
        pipeline:
          [
            {
              $match:
                { $and: [{ hello: "hellohellohellohellobye" }, { zero: 0 }] },
            },
            { $sort: { randomInt: 1 } },
            { $limit: *limitNum },
            { $skip: *skipNum },
            { $project: { _id: 0 } },
          ]

  - ActorFromTemplate:
      TemplateName: RunAggCommand
      TemplateParameters:
        name: "SortSkipLimitVaryConstant"
        active: [8]
        pipeline:
          [
            {
              $match:
                { $and: [{ hello: "hellohellohellohellobye" }, { zero: 0 }] },
            },
            { $sort: { randomInt: 1 } },
            { $skip: *skipNum },
            { $limit: *limitNum },
            { $project: { _id: 0 } },
          ]

AutoRun:
  - When:
      mongodb_setup:
        $eq:
          - standalone
          - standalone-80-feature-flags
          - standalone-all-feature-flags
          - standalone-classic-query-engine
          - standalone-sbe
      branch_name:
        $gte: v7.0
