SchemaVersion: 2018-07-01
Owner: "@mongodb/query-integration"
Description: |
  This workload runs queries from the tsbs_query benchmark in Genny. It allows us to cross-check the results of the TSBS 
  benchmarks, collect additional measurements, profile individual queries, and extend some of the queries as needed.
  The data is preloaded by the dsi configuration. See 'configurations/test_control/test_control.tsbs_query.yml' for all 
  the details. There are 20736000 documents in the collection.
  There are some differences between the queries in this workload and tsbs, but we do not expect these differences to significantly
  affect runtime:
  1. All TSBS queries have a filter on "measurement": "cpu", which we remove since it is true for all measurements.
  2. TSBS will generate a random start time between the start/end time of the workload for every query type. We hard code
  our time values, since genny does not currently support date arithmetic, nor storing a fixed value from randomized generation.
  3. TSBS randomizes which measurement fields to group by, we do not randomize these fields. Since all the fields are random integers
  between 0-100 we don't expect different fields to have significant runtime differences.

Keywords:
  - timeseries
  - aggregate
  - group
  - sort

Clients:
  Default:
    QueryOptions:
      maxPoolSize: 4000 # With 8 threads we need a larger pool.

GlobalDefaults:
  Database: &database cpu
  Collection: &collection point_data
  maxPhases: &maxPhases 20
  Repeat: &repeat 500
  # TSBS constructs a time windows of various sizes (1 hour, 8 hours, 12 hours) from a uniformly random start-time within
  # this time-period. Ideally, we would do this as well, but currently genny doesn't support storing randomized date values as
  # variables, so we will fix a starting value and increment it each time the query runs.
  StartDate: &StartDate "2016-01-04T21:49:27Z"
  startDatePlusOneHour: &startDatePlusOneHour "2016-01-04T22:49:27Z"
  startDatePlusEightHours: &startDatePlusEightHours "2016-01-05T05:49:27Z"
  startDatePlusTwelveHours: &startDatePlusTwelveHours "2016-01-05T09:49:27Z"
  CloseToEndTime: &CloseToEndTime "2016-01-20T09:49:27Z"

# Create variables to mimic the randomness of tsbs_generate_queries.
# Generates a single string like "host_42", with random integer in range [0,99].
GenHostNames:
  &GenHostNames {
    ^FormatString:
      {
        "format": "host_%d",
        "withArgs": [{ ^RandomInt: { min: 0, max: 99 } }],
      },
  }

# Generates an array of strings like "host_42", with random integer in range [0,99].
HostName1:
  &HostName1 { ^Array: { of: *GenHostNames, number: 1, distinct: true } }
HostName8:
  &HostName8 { ^Array: { of: *GenHostNames, number: 8, distinct: true } }

Actors:
  # The data is already loaded into the collection from the dsi configuration.
  - Name: Quiesce
    Type: QuiesceActor
    Threads: 1
    Database: *database
    Phases:
      OnlyActiveInPhases:
        Active: [0]
        NopInPhasesUpTo: *maxPhases
        PhaseConfig:
          Repeat: 1

# single_groupby_M_H_T family of queries computes the per-minute max of M(1|5) metrics for H(1|8) hosts 
# in a random time window of size T(1h|12h).
  - Name: single_groupby_1_1_1
    Type: CrudActor
    Threads: 8
    Phases:
      OnlyActiveInPhases:
        Active: [1]
        NopInPhasesUpTo: *maxPhases
        PhaseConfig:
          Repeat: *repeat
          Database: *database
          Collection: *collection
          Operations:
            - OperationName: aggregate
              OperationCommand:
                Pipeline:
                  [
                    {
                      $match: 
                        {
                          "tags.hostname": { $in: *HostName1 },
                          time:  { 
                            $gte: { ^Cycle: { ofLength: 100, fromGenerator: { ^IncDate: { start: *StartDate, step: 2520000, } } } },
                            $lt: { ^Cycle: { ofLength: 100, fromGenerator: { ^IncDate: { start: *startDatePlusOneHour, step: 2520000 } } } }
                            },
                        },
                    },
                    {
                      $group:
                        {
                          _id: { $dateTrunc: { date: "$time", unit: "minute" } },
                          max_usage_user: { $max: "$usage_user" },
                        },
                    },
                    { $sort: { _id: 1 } },
                  ]

  - Name: single_groupby_1_8_1
    Type: CrudActor
    Threads: 8
    Phases:
      OnlyActiveInPhases:
        Active: [2]
        NopInPhasesUpTo: *maxPhases
        PhaseConfig:
          Repeat: *repeat
          Database: *database
          Collection: *collection
          Operations:
            - OperationName: aggregate
              OperationCommand:
                Pipeline:
                  [
                    {
                      $match:
                        {
                          "tags.hostname": { $in: *HostName8 },
                          time:
                            {
                              $gte: { ^Cycle: { ofLength: 100, fromGenerator: { ^IncDate: { start: *StartDate, step: 2520000, } } } },
                              $lt: { ^Cycle: { ofLength: 100, fromGenerator: { ^IncDate: { start: *startDatePlusEightHours, step: 2520000 } } } },
                            },
                        },
                    },
                    {
                      $group:
                        {
                          _id: { $dateTrunc: { date: "$time", unit: "minute" } },
                          max_usage_user: { $max: "$usage_user" },
                        },
                    },
                    { $sort: { _id: 1 } },
                  ]

  - Name: single_groupby_5_1_1
    Type: CrudActor
    Threads: 8
    Phases:
      OnlyActiveInPhases:
        Active: [3]
        NopInPhasesUpTo: *maxPhases
        PhaseConfig:
          Repeat: *repeat
          Database: *database
          Collection: *collection
          Operations:
            - OperationName: aggregate
              OperationCommand:
                Pipeline:
                  [
                    {
                      $match:
                        {
                          "tags.hostname": { $in: *HostName1 },
                          time:
                            {
                              $gte: { ^Cycle: { ofLength: 100, fromGenerator: { ^IncDate: { start: *StartDate, step: 2520000, } } } },
                              $lt: { ^Cycle: { ofLength: 100, fromGenerator: { ^IncDate: { start: *startDatePlusOneHour, step: 2520000 } } } },
                            },
                        },
                    },
                    {
                      $group:
                        {
                          _id: { $dateTrunc: { date: "$time", unit: "minute" } },
                          max_usage_user: { $max: "$usage_user" },
                          max_usage_guest: { $max: "$usage_guest" },
                          max_usage_system: { $max: "$usage_system" },
                          max_usage_iowait: { $max: "$usage_iowait" },
                          max_usage_irq: { $max: "$usage_irq" },
                        },
                    },
                    { $sort: { _id: 1 } },
                  ]

  - Name: single_groupby_5_8_1
    Type: CrudActor
    Threads: 8
    Phases:
      OnlyActiveInPhases:
        Active: [4]
        NopInPhasesUpTo: *maxPhases
        PhaseConfig:
          Repeat: *repeat
          Database: *database
          Collection: *collection
          Operations:
            - OperationName: aggregate
              OperationCommand:
                Pipeline:
                  [
                    {
                      $match:
                        {
                          "tags.hostname": { $in: *HostName8 },
                          time:
                            {
                              $gte: { ^Cycle: { ofLength: 100, fromGenerator: { ^IncDate: { start: *StartDate, step: 2520000 } } } },
                              $lt: { ^Cycle: { ofLength: 100, fromGenerator: { ^IncDate: { start: *startDatePlusOneHour, step: 2520000 } } } },
                            },
                        },
                    },
                    {
                      $group:
                        {
                          _id: { $dateTrunc: { date: "$time", unit: "minute" } },
                          max_usage_user: { $max: "$usage_user" },
                          max_usage_guest: { $max: "$usage_guest" },
                          max_usage_system: { $max: "$usage_system" },
                          max_usage_iowait: { $max: "$usage_iowait" },
                          max_usage_irq: { $max: "$usage_irq" },
                        },
                    },
                    { $sort: { _id: 1 } },
                  ]

  - Name: single_groupby_1_1_12
    Type: CrudActor
    Threads: 8
    Phases:
      OnlyActiveInPhases:
        Active: [5]
        NopInPhasesUpTo: *maxPhases
        PhaseConfig:
          Repeat: *repeat
          Database: *database
          Collection: *collection
          Operations:
            - OperationName: aggregate
              OperationCommand:
                Pipeline:
                  [
                    {
                      $match:
                        {
                          "tags.hostname": { $in: *HostName1 },
                          time:
                            {
                              $gte: { ^Cycle: { ofLength: 100, fromGenerator: { ^IncDate: { start: *StartDate, step: 2520000 } } } },
                              $lt: { ^Cycle: { ofLength: 100, fromGenerator: { ^IncDate: { start: *startDatePlusTwelveHours, step: 2520000 }, }, } }
                            }
                        }
                    },
                    {
                      $group:
                        {
                          _id: { $dateTrunc: { "date": "$time", "unit": "minute" } },
                          max_usage_user: { $max: "$usage_user" },
                        },
                    },
                    { $sort: { _id: 1 } },
                  ]

  - Name: single_groupby_5_1_12
    Type: CrudActor
    Threads: 8
    Phases:
      OnlyActiveInPhases:
        Active: [6]
        NopInPhasesUpTo: *maxPhases
        PhaseConfig:
          Repeat: *repeat
          Database: *database
          Collection: *collection
          Operations:
            - OperationName: aggregate
              OperationCommand:
                Pipeline:
                  [
                    {
                      $match:
                        {
                          "tags.hostname": { $in: *HostName1 },
                          time:
                            {
                              $gte: { ^Cycle: { ofLength: 100, fromGenerator: { ^IncDate: { start: *StartDate, step: 2520000 } } } },
                              $lt: { ^Cycle: { ofLength: 100, fromGenerator: { ^IncDate: { start: *startDatePlusTwelveHours, step: 2520000 }, }, } }
                            }
                        },
                    },
                    {
                      $group:
                        {
                          _id: { $dateTrunc: { "date": "$time", "unit": "minute" } },
                          max_usage_user: { $max: "$usage_user" },
                          max_usage_guest: { $max: "$usage_guest" },
                          max_usage_system: { $max: "$usage_system" },
                          max_usage_iowait: { $max: "$usage_iowait" },
                          max_usage_irq: { $max: "$usage_irq" },
                        },
                    },
                    { $sort: { _id: 1 } },
                  ]

# double-groupby-M computes the per-host, per-hour mean of M(1|5|all=10) metrics in a random 12h time window.
  - Name: double_groupby_1
    Type: CrudActor
    Threads: 8
    Phases:
      OnlyActiveInPhases:
        Active: [7]
        NopInPhasesUpTo: *maxPhases
        PhaseConfig:
          Repeat: 100 # Repeat slow queries just 100 times.
          Database: *database
          Collection: *collection
          Operations:
            - OperationName: aggregate
              OperationCommand:
                Pipeline:
                  [
                    {
                      $match:
                        {
                          time:
                            {
                              $gte: { ^Cycle: { ofLength: 100, fromGenerator: { ^IncDate: { start: *StartDate, step: 2520000 } } } },
                              $lt: { ^Cycle: { ofLength: 100, fromGenerator: { ^IncDate: { start: *startDatePlusTwelveHours, step: 2520000 }, }, } }
                            }
                        },
                    },
                    {
                      $group:
                        {
                          _id: 
                            { 
                              time: { $dateTrunc: { date: "$time", unit: "hour" } }, 
                              hostname: "$tags.hostname",
                            },
                          avg_usage_softirq: { $avg: "$usage_softirq" },
                        },
                    },
                    { $sort: { "_id.time": 1, "_id.hostname": 1 } },
                  ]

  - Name: double_groupby_5
    Type: CrudActor
    Threads: 8
    Phases:
      OnlyActiveInPhases:
        Active: [8]
        NopInPhasesUpTo: *maxPhases
        PhaseConfig:
          Repeat: 100 # Repeat slow queries just 100 times.
          Database: *database
          Collection: *collection
          Operations:
            - OperationName: aggregate
              OperationCommand:
                Pipeline:
                  [
                    {
                      $match:
                        {
                          time:
                            {
                              $gte: { ^Cycle: { ofLength: 100, fromGenerator: { ^IncDate: { start: *StartDate, step: 2520000 } } } },
                              $lt: { ^Cycle: { ofLength: 100, fromGenerator: { ^IncDate: { start: *startDatePlusTwelveHours, step: 2520000 }, }, } }
                            }
                        },
                    },
                    {
                      $group:
                        {
                          _id:
                            {
                              time: { $dateTrunc: { date: "$time", unit: "hour" } },
                              hostname: "$tags.hostname",
                            },
                          avg_usage_softirq: { $avg: "$usage_softirq" },
                          avg_usage_steal: { $avg: "$usage_steal" },
                          avg_usage_guest: { $avg: "$usage_guest" },
                          avg_usage_user: { $avg: "$usage_user" },
                          avg_usage_system: { $avg: "$usage_system" },
                        },
                    },
                    { $sort: { "_id.time": 1, "_id.hostname": 1 } },
                  ]

  - Name: double_groupby_all
    Type: CrudActor
    Threads: 8
    Phases:
      OnlyActiveInPhases:
        Active: [9]
        NopInPhasesUpTo: *maxPhases
        PhaseConfig:
          Repeat: 100 # Repeat slow queries just 100 times.
          Database: *database
          Collection: *collection
          Operations:
            - OperationName: aggregate
              OperationCommand:
                Pipeline:
                  [
                    {
                      $match:
                        {
                          time:
                            {
                              $gte: { ^Cycle: { ofLength: 100, fromGenerator: { ^IncDate: { start: *StartDate, step: 2520000 } } } },
                              $lt: { ^Cycle: { ofLength: 100, fromGenerator: { ^IncDate: { start: *startDatePlusTwelveHours, step: 2520000 }, }, } }
                            }
                        },
                    },
                    {
                      $group:
                        {
                          _id:
                            {
                              time:
                                { $dateTrunc: { date: "$time", unit: "hour" } },
                              hostname: "$tags.hostname",
                            },
                          avg_usage_softirq: { $avg: "$usage_softirq" },
                          avg_usage_steal: { $avg: "$usage_steal" },
                          avg_usage_guest: { $avg: "$usage_guest" },
                          avg_usage_user: { $avg: "$usage_user" },
                          avg_usage_system: { $avg: "$usage_system" },
                          avg_usage_iowait: { $avg: "$usage_iowait" },
                          avg_usage_irq: { $avg: "$usage_irq" },
                          avg_usage_nice: { $avg: "$usage_nice" },
                          avg_usage_idle: { $avg: "$usage_idle" },
                          avg_usage_guest_nice: { $avg: "$usage_guest_nice" },
                        },
                    },
                    { $sort: { "_id.time": 1, "_id.hostname": 1 } },
                  ]

# groupby-orderby-limit computes the per-minute max of a single metric for the last five minutes.
  - Name: groupby_orderby_limit
    Type: CrudActor
    Threads: 8
    Phases:
      OnlyActiveInPhases:
        Active: [10]
        NopInPhasesUpTo: *maxPhases
        PhaseConfig:
          Repeat: 100 # Repeat slow queries just 100 times.
          Database: *database
          Collection: *collection
          Operations:
            - OperationName: aggregate
              OperationCommand:
                # It is unclear how TSBS evaluates the endpoint, but the range is often wide. So we pick a time close to the max time.
                Pipeline:
                  [
                    {
                      $match:
                        {
                          "tags.hostname": { $in: *HostName1 },
                          time:
                            { $gte: { ^Cycle: { ofLength: 100, fromGenerator: { ^IncDate: { start: *StartDate, step: 2520000 } } } },
                              $lt: { ^Cycle: { ofLength: 100, fromGenerator: { ^IncDate: { start: *CloseToEndTime, step: 2520000 } } } }
                            }
                        }
                    },
                    {
                      $group:
                        {
                          _id: { $dateTrunc: { date: "$time", unit: "minute" } },
                          max_usage_user: { $max: "$usage_user" },
                        },
                    },
                    { $sort: { _id: 1 } },
                    { $limit: 5 },
                  ]

# cpu_max_all_H family of queries computes per-hour max of all(10) metrics for H(1|8) hosts for a randomly chosen 8h time window.
  - Name: cpu_max_all_1
    Type: CrudActor
    Threads: 8
    Phases:
      OnlyActiveInPhases:
        Active: [11]
        NopInPhasesUpTo: *maxPhases
        PhaseConfig:
          Repeat: *repeat
          Database: *database
          Collection: *collection
          Operations:
            - OperationName: aggregate
              OperationCommand:
                Pipeline:
                  [
                    {
                      $match:
                        {
                          "tags.hostname": { $in: *HostName1 },
                          time:
                            {
                              $gte: { ^Cycle: { ofLength: 100, fromGenerator: { ^IncDate: { start: *StartDate, step: 2520000, } } } },
                              $lt: { ^Cycle: { ofLength: 100, fromGenerator: { ^IncDate: { start: *startDatePlusEightHours, step: 2520000 } } } },
                            },
                        },
                    },
                    {
                      $group:
                        {
                          _id: { $dateTrunc: { date: "$time", unit: "hour" } },
                          max_usage_softirq: { $max: "$usage_softirq" },
                          max__usage_steal: { $max: "$usage_steal" },
                          max_usage_guest: { $max: "$usage_guest" },
                          max_usage_user: { $max: "$usage_user" },
                          max_usage_system: { $max: "$usage_system" },
                          max_usage_iowait: { $max: "$usage_iowait" },
                          max_usage_irq: { $max: "$usage_irq" },
                          max_usage_nice: { $max: "$usage_nice" },
                          max_usage_idle: { $max: "$usage_idle" },
                          max_usage_guest_nice: { $max: "$usage_guest_nice" },
                        },
                    },
                    { $sort: { _id: 1 } },
                  ]

  - Name: cpu_max_all_8
    Type: CrudActor
    Threads: 8
    Phases:
      OnlyActiveInPhases:
        Active: [12]
        NopInPhasesUpTo: *maxPhases
        PhaseConfig:
          Repeat: *repeat
          Database: *database
          Collection: *collection
          Operations:
            - OperationName: aggregate
              OperationCommand:
                Pipeline:
                  [
                    {
                      $match:
                        {
                          "tags.hostname": { $in: *HostName8 },
                          time:
                            {
                              $gte: { ^Cycle: { ofLength: 100, fromGenerator: { ^IncDate: { start: *StartDate, step: 2520000, } } } },
                              $lt: { ^Cycle: { ofLength: 100, fromGenerator: { ^IncDate: { start: *startDatePlusEightHours, step: 2520000 } } } },
                            },
                        },
                    },
                    {
                      $group:
                        {
                          _id: { $dateTrunc: { date: "$time", unit: "hour" } },
                          max_usage_softirq: { $max: "$usage_softirq" },
                          max__usage_steal: { $max: "$usage_steal" },
                          max_usage_guest: { $max: "$usage_guest" },
                          max_usage_user: { $max: "$usage_user" },
                          max_usage_system: { $max: "$usage_system" },
                          max_usage_iowait: { $max: "$usage_iowait" },
                          max_usage_irq: { $max: "$usage_irq" },
                          max_usage_nice: { $max: "$usage_nice" },
                          max_usage_idle: { $max: "$usage_idle" },
                          max_usage_guest_nice: { $max: "$usage_guest_nice" },
                        },
                    },
                    { $sort: { _id: 1 } },
                  ]

  # high-cpu-H: finds events with high “usage_user” metric in a random 12h window for H(1|all) hosts.
  - Name: high_cpu_1
    Type: CrudActor
    Threads: 8
    Phases:
      OnlyActiveInPhases:
        Active: [13]
        NopInPhasesUpTo: *maxPhases
        PhaseConfig:
          Repeat: *repeat
          Database: *database
          Collection: *collection
          Operations:
            - OperationName: aggregate
              OperationCommand:
                Pipeline: [
                    {
                      $match:
                        {
                          "tags.hostname": { $in: *HostName1 },
                          time:
                            { 
                              $gte: { ^Cycle: { ofLength: 100, fromGenerator: { ^IncDate: { start: *StartDate, step: 2520000 } } } },
                              $lt: { ^Cycle: { ofLength: 100, fromGenerator: { ^IncDate: { start: *startDatePlusTwelveHours, step: 2520000 } }}}
                            },
                          usage_user: { $gt: 90 }, # 90 is hard-coded in TSBS.
                        }
                    },
                    { $set: { tags: "$tags.hostname" } }
                  ]

  - Name: high_cpu_all
    Type: CrudActor
    Threads: 8
    Phases:
      OnlyActiveInPhases:
        Active: [14]
        NopInPhasesUpTo: *maxPhases
        PhaseConfig:
          Repeat: 500 # Repeat slow queries just 100 times.
          Database: *database
          Collection: *collection
          Operations:
            - OperationName: aggregate
              OperationCommand:
                Pipeline:
                  [
                    {
                      $match:
                        {
                          time:
                            {
                              $gte: { ^Cycle: { ofLength: 100, fromGenerator: { ^IncDate: { start: *StartDate, step: 2520000 } } } },
                              $lt: { ^Cycle: { ofLength: 100, fromGenerator: { ^IncDate: { start: *startDatePlusTwelveHours, step: 2520000 } } } }
                            },
                          usage_user: { $gt: 90 }, # 90 is hard-coded in TSBS.
                        },
                    },
                    { $set: { tags: "$tags.hostname" } },
                  ]

# lastpoint computes the last row per host.
  - Name: lastpoint
    Type: CrudActor
    Threads: 8
    Phases:
      OnlyActiveInPhases:
        Active: [15]
        NopInPhasesUpTo: *maxPhases
        PhaseConfig:
          Repeat: *repeat
          Database: *database
          Collection: *collection
          Operations:
            - OperationName: aggregate
              OperationCommand:
                Pipeline:
                  [
                    { $sort: { "tags.hostname": 1, "time": -1 } },
                    {
                      $group:
                        {
                          _id: { "hostname": "$tags.hostname" },
                          time: { $first: "$time" },
                          measurement: { $first: "$measurement" },
                          usage_softirq: { $first: "$usage_softirq" },
                          musage_steal: { $first: "$usage_steal" },
                          usage_guest: { $first: "$usage_guest" },
                          usage_user: { $first: "$usage_user" },
                          usage_system: { $first: "$usage_system" },
                          usage_iowait: { $first: "$usage_iowait" },
                          usage_irq: { $first: "$usage_irq" },
                          usage_nice: { $first: "$usage_nice" },
                          usage_idle: { $first: "$usage_idle" },
                          usage_guest_nice: { $first: "$usage_guest_nice" },
                        },
                    },
                  ]

  # The queries below are not from tsbs_query, but test bucket-targeting. We want to target ~1% of buckets.
  - Name: match_on_measurements_selective_query
    Type: CrudActor
    Threads: 8
    Phases:
      OnlyActiveInPhases:
        Active: [16]
        NopInPhasesUpTo: *maxPhases
        PhaseConfig:
          Repeat: 100
          Database: *database
          Collection: *collection
          Operations:
            - OperationName: aggregate
              OperationCommand:
                Pipeline:
                  # All usage_* fields are random integers between 0-100.
                  [
                    {
                      $match:
                        {
                          $or:
                            [
                              { usage_guest: { $gte: 80, $lt: 85 } },
                              { usage_nice: { $gt: 0, $lt: 5 } },
                            ],
                        },
                    },
                    {
                      $project:
                        {
                          _id: 1,
                          tags: 1,
                          usage_softirq: 1, 
                          usage_steal: 1,
                          usage_guest: 1
                        },
                    }
                  ]

  - Name: match_on_measurement_meta
    Type: CrudActor
    Threads: 8
    Phases:
      OnlyActiveInPhases:
        Active: [17]
        NopInPhasesUpTo: *maxPhases
        PhaseConfig:
          Repeat: 100
          Database: *database
          Collection: *collection
          Operations:
            - OperationName: aggregate
              OperationCommand:
                Pipeline:
                  # All usage_* fields are random integers between 0-100.
                  [
                    {
                      $match:
                        {
                          $and:
                            [
                              { usage_steal: { $gte: 80, $lt: 90 } },
                              { "tags.hostname": { $in: *HostName8 } },
                            ],
                        },
                    },
                    {
                      $project:
                        {
                          _id: 1,
                          tags: 1,
                          usage_softirq: 1, 
                          usage_steal: 1,
                          usage_guest: 1
                        },
                    }
                  ]
