SchemaVersion: 2018-07-01
Owner: "@mongodb/query"
Description: |
  This workload tests the performance of $densify stage with a numeric step
  in timeseries collections.

GlobalDefaults:
  dbname: &db test
  batchSize: &batchSize 30000
  fieldName: &field "numeric"
  index: &index
    keys: {numeric: 1}
    options: {name: "numeric"}
  # smallStep is always 3, we have to use the int generator to explicitly encode it as an integer
  # so as not to crash the server (with error code 5876900).
  smallStepSize: &smallStep {^RandomInt: {min: 3, max: 3}}
  # largeStep is always 8, can see reasoning above.
  largeStepSize: &largeStep {^RandomInt: {min: 8, max: 8}}
  explicitBounds: &bounds [{^RandomInt: {min: 1000, max: 5000}}, {^RandomInt: {min: 10000, max: 20000}}]
  nop: &Nop {Nop: true}

Actors:
- Name: CreateTimeSeriesCollection
  Type: RunCommand
  Threads: 1
  Phases:
  - Repeat: 1
    Database: *db
    Operation:
      OperationMetricsName: CreateTimeSeriesCollection
      OperationName: RunCommand
      OperationCommand:
        {create: &coll Collection0, timeseries: {timeField: "timestamp", metaField: "numeric"}}
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop

- Name: Quiesce
  Type: QuiesceActor
  Threads: 1
  Database: *db
  Phases:
  - *Nop
  - Repeat: 1
  - *Nop
  - Repeat: 1
  - *Nop
  - Repeat: 1
  - *Nop
  - Repeat: 1
  - *Nop
  - Repeat: 1
  - *Nop
  - Repeat: 1
  - *Nop
  - Repeat: 1
  - *Nop
  - Repeat: 1
  - *Nop


- Name: InsertData
  Type: Loader
  Threads: 1
  Phases:
  - *Nop
  - *Nop
  - Repeat: 1
    Database: *db
    Collection: *coll
    Threads: 1
    CollectionCount: 1
    DocumentCount: 100000
    BatchSize: *batchSize
    Document:
      partitionKey: {^RandomInt: {min: 1, max: 100}}
      timestamp: {^IncDate: {start: "2021-01-01T00:00:00.000", step: 400}}
      # Test a subset of units that have different characteristics.
      numeric: {^RandomInt: {min: 0, max: 100}}  # Separate codepath for numeric DensifyValues.
    # $densify stages always add a $sort on the field that is being densified, so this phase adds
    # indexes on the date/number fields so that we aren't performing an in-memory sort.
    Indexes:
    - *index
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop

- Name: DensifyFullSmallStep
  Type: RunCommand
  Threads: 1
  Phases:
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - Duration: 30 seconds
    Database: *db
    Operations:
    - OperationMetricsName: FullSmallStep
      OperationName: RunCommand
      OperationCommand:
        aggregate: Collection0
        pipeline: [{
          $densify: {
            field: *field,
            range: {
              bounds: "full",
              step: *smallStep,
            }
          }
        }]
        cursor: {batchSize: *batchSize}
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop

- Name: DensifyFullLargeStep
  Type: RunCommand
  Threads: 1
  Phases:
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - Duration: 30 seconds
    Database: *db
    Operations:
    - OperationMetricsName: FullLargeStep
      OperationName: RunCommand
      OperationCommand:
        aggregate: Collection0
        pipeline: [{
          $densify: {
            field: *field,
            range: {
              bounds: "full",
              step: *smallStep,
            }
          }
        }]
        cursor: {batchSize: *batchSize}
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop

- Name: DensifyExplicitRangeSmallStep
  Type: RunCommand
  Threads: 1
  Phases:
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - Duration: 30 seconds
    Database: *db
    Operations:
    - OperationMetricsName: ExplicitRangeSmallStep
      OperationName: RunCommand
      OperationCommand:
        aggregate: Collection0
        pipeline: [{
          $densify: {
            field: *field,
            range: {
              step: *smallStep,
              bounds: *bounds,
            }
          }
        }]
        cursor: {batchSize: *batchSize}
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop

- Name: DensifyExplicitRangeLargeStep
  Type: RunCommand
  Threads: 1
  Phases:
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - Duration: 30 seconds
    Database: *db
    Operations:
    - OperationMetricsName: ExplicitRangeLargeStep
      OperationName: RunCommand
      OperationCommand:
        aggregate: Collection0
        pipeline: [{
          $densify: {
            field: *field,
            range: {
              step: *smallStep,
              bounds: *bounds
            }
          }
        }]
        cursor: {batchSize: *batchSize}
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop

- Name: DensifyExplicitRangeByPartitionSmallStep
  Type: RunCommand
  Threads: 1
  Phases:
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - Duration: 30 seconds
    Database: *db
    Operations:
    - OperationMetricsName: ExplicitRangeByPartitionSmallStep
      OperationName: RunCommand
      OperationCommand:
        aggregate: Collection0
        pipeline: [{
          $densify: {
            field: *field,
            partitionByFields: ["partitionKey"],
            range: {
              step: *smallStep,
              bounds: *bounds
            }
          }
        }]
        cursor: {batchSize: *batchSize}
  - *Nop
  - *Nop
  - *Nop
  - *Nop

- Name: DensifyExplicitRangeByPartitionLargeStep
  Type: RunCommand
  Threads: 1
  Phases:
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - Duration: 30 seconds
    Database: *db
    Operations:
    - OperationMetricsName: DensifyTimestamp
      OperationName: RunCommand
      OperationCommand:
        aggregate: Collection0
        pipeline: [{
          $densify: {
            field: *field,
            range: {
              step: *smallStep,
              bounds: "full"
            }
          }
        }]
        cursor: {batchSize: *batchSize}
  - *Nop
  - *Nop

- Name: DensifyTimestamp
  Type: RunCommand
  Threads: 1
  Phases:
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - *Nop
  - Duration: 30 seconds
    Database: *db
    Operations:
    - OperationMetricsName: DensifyTimestamp
      OperationName: RunCommand
      OperationCommand:
        aggregate: Collection0
        pipeline: [{
          $densify: {
            field: "timestamp",
            range: {
              step: *smallStep,
              unit: "hour",
              bounds: "full"
            }
          }
        }]
        cursor: {batchSize: *batchSize}

AutoRun:
- When:
    mongodb_setup:
      $eq:
      - standalone
      - replica
      - single-replica
    branch_name:
      $neq:
      - v4.0
      - v4.2
      - v4.4
      - v5.0
