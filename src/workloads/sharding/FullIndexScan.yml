SchemaVersion: 2018-07-01
Owner: "@mongodb/sharding"
Description: |
  Inserts 100GB of data into a test.Collection0 collection.

  The motivation for splitting it out the data loading into its own workload is to make it easier
  to experiment with the FullIndexScan workload which only does reads.

GlobalDefaults:
  Nop: &Nop {Nop: true}

  Database: &Database test
  # Collection0 is the default collection populated by the MonotonicSingleLoader.
  CollectionToRead: &CollectionToRead Collection0
  NamespaceToRead: &Namespace test.Collection0
  CollectionToWrite: &CollectionToWrite OtherCollection

  # Note that the exact document size may exceed ApproxDocumentSize because of field names and other
  # fields in the document.
  ApproxDocumentSize: &ApproxDocumentSize 2000  # = 2kB
  ApproxDocumentSize50Pct: &ApproxDocumentSize50Pct 1000  # = 1kB

  ValueMin: &ValueMin 1
  ValueMax: &ValueMax 480_000

Clients:
  Default:
    QueryOptions:
      maxPoolSize: 2

Actors:
- Name: FullIndexScan
  Type: GetMoreActor
  Threads: 1
  Phases:
  - Repeat: 1
    Database: *Database
    InitialCursorCommand:
      find: *CollectionToRead
      hint: _id_
      readConcern:
        level: snapshot

- Name: Insert
  Type: CrudActor
  Threads: 1
  Database: *Database
  Phases:
  - Blocking: None
    GlobalRate: 1 per 500 microseconds  # 2000/second
    Collection: *CollectionToWrite
    Operation:
      OperationName: insertOne
      OperationCommand:
        Document:
          oldKey: {^RandomInt: {min: *ValueMin, max: *ValueMax}}
          newKey: {^RandomInt: {min: *ValueMin, max: *ValueMax}}
          counter: 0
          padding: {^FastRandomString: {length: {^RandomInt: {min: *ApproxDocumentSize50Pct, max: *ApproxDocumentSize}}}}

# Guard against timeout for no output.
- Name: LoggingActor
  Type: LoggingActor
  Threads: 1
  Phases:
  - LogEvery: 15 minutes
    Blocking: None
