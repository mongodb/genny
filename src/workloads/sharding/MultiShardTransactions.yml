SchemaVersion: 2018-07-01
Owner: "@mongodb/sharding"
Description: |

GlobalDefaults:
  Database0: &Database0 databaseForMultiShardTestingIndex0
  Database1: &Database1 databaseForMultiShardTestingIndex1


  # Note that the exact document size may exceed ApproxDocumentSize because of field names and other
  # fields in the document.
  ApproxDocumentSize: &ApproxDocumentSize 2000  # = 2kB
  ApproxDocumentSize50Pct: &ApproxDocumentSize50Pct 1000  # = 1kB
  DocumentCount: &DocumentCount 100_000
  NumChunks: &NumChunks 240

  ShardKeyValueMin: &ShardKeyValueMin 1
  ShardKeyValueMax: &ShardKeyValueMax 24_000
  MaxPhase: &MaxPhase 6

Actors:
- Name: CreateShardedCollection
  Type: AdminCommand
  Threads: 1
  Phases:
    OnlyActiveInPhases:
      Active: [0]
      NopInPhasesUpTo: *MaxPhase
      PhaseConfig:
        Repeat: 1
        Database: admin
        Operations:
        - OperationName: AdminCommand
          OperationCommand:
            enableSharding: *Database0
        - OperationName: AdminCommand
          OperationCommand:
            enableSharding: *Database1
        - OperationName: AdminCommand
          OperationCommand:
            shardCollection: databaseForMultiShardTestingIndex0.Collection0
            key: {shardKey: hashed}
            numInitialChunks: *NumChunks
        - OperationName: AdminCommand
          OperationCommand:
            shardCollection: databaseForMultiShardTestingIndex1.Collection0
            key: {shardKey: hashed}
            numInitialChunks: *NumChunks
        - OperationName: AdminCommand
          OperationCommand:
            movePrimary: *Database0
            to: rs0
        - OperationName: AdminCommand
          OperationCommand:
            movePrimary: *Database1
            to: rs1

- Name: CreateNonShardedIndex
  Type: RunCommand
  Phases:
  - Repeat: 1
    Database: *Database0
    Operations:
    - OperationName: RunCommand
      OperationCommand:
        createIndexes: Collection1
        indexes:
        - key: {shardKey: 1}
          name: shardKey_1
  - Repeat: 1
    Database: *Database1
    Operations:
    - OperationName: RunCommand
      OperationCommand:
        createIndexes: Collection1
        indexes:
        - key: {shardKey: 1}
          name: shardKey_1
  - &Nop {Nop: true}
  - *Nop
  - *Nop
  - *Nop
  - *Nop


- Name: LoadInitialData
  Type: Loader
  Threads: 16
  Phases:
  - *Nop
  - Repeat: 1
    BatchSize: 1000
    DocumentCount: *DocumentCount
    MultipleThreadsPerCollection: true
    CollectionCount: 2
    Database: *Database0
    Document:
      shardKey: &shardKey {^RandomInt: {min: *ShardKeyValueMin, max: *ShardKeyValueMax}}
      counter: 0
      padding: {^FastRandomString: {length: {^RandomInt: {min: *ApproxDocumentSize50Pct, max: *ApproxDocumentSize}}}}
  - Repeat: 1
    BatchSize: 1000
    DocumentCount: *DocumentCount
    MultipleThreadsPerCollection: true
    CollectionCount: 2
    Database: *Database1
    Document:
      shardKey: *shardKey
      counter: 0
      padding: {^FastRandomString: {length: {^RandomInt: {min: *ApproxDocumentSize50Pct, max: *ApproxDocumentSize}}}}
  - *Nop
  - *Nop
  - *Nop
  - *Nop

# Guard against timeout for no output.
- Name: LoggingActor
  Type: LoggingActor
  Threads: 1
  Phases:
    OnlyActiveInPhases:
      Active: [1, 2]
      NopInPhasesUpTo: *MaxPhase
      PhaseConfig:
        LogEvery: 15 minutes
        Blocking: None

- Name: Transactions
  Type: CrudActor
  Threads: 16
  Database: *Database0
  Phases:
    - *Nop
    - *Nop
    - *Nop
    - MetricsName: ShardedCollectionUpdate
      Duration: 1 minute
      Collection: Collection0
      ThrowOnFailure: false  # Transactions are allowed to fail.
      RecordFailure: true  # We still want to record the metrics even if the transaction is rolled back.
      Operations:
      - OperationName: withTransaction
        OperationCommand:
          OperationsInTransaction:
          - OperationName: updateOne
            OperationCommand:
              Filter: {shardKey: *shardKey}
              Update: {$inc: {counter: 1}}
          - OperationName: updateOne
            OperationCommand:
              Filter: {shardKey: *shardKey}
              Update: {$inc: {counter: 1}}
          - OperationName: updateOne
            OperationCommand:
              Filter: {shardKey: *shardKey}
              Update: {$inc: {counter: 1}}
          - OperationName: updateOne
            OperationCommand:
              Filter: {shardKey: *shardKey}
              Update: {$inc: {counter: 1}}
          - OperationName: updateOne
            OperationCommand:
              Filter: {shardKey: *shardKey}
              Update: {$inc: {counter: 1}}
          - OperationName: updateOne
            OperationCommand:
              Filter: {shardKey: *shardKey}
              Update: {$inc: {counter: 1}}
          - OperationName: updateOne
            OperationCommand:
              Filter: {shardKey: *shardKey}
              Update: {$inc: {counter: 1}}
          - OperationName: updateOne
            OperationCommand:
              Filter: {shardKey: *shardKey}
              Update: {$inc: {counter: 1}}
          - OperationName: updateOne
            OperationCommand:
              Filter: {shardKey: *shardKey}
              Update: {$inc: {counter: 1}}
          - OperationName: updateOne
            OperationCommand:
              Filter: {shardKey: *shardKey}
              Update: {$inc: {counter: 1}}
          - OperationName: updateOne
            OperationCommand:
              Filter: {shardKey: *shardKey}
              Update: {$inc: {counter: 1}}
    - MetricsName: ShardedAndNonShardedCollectionsUpdate
      Duration: 1 minute
      ThrowOnFailure: false  # Transactions are allowed to fail.
      RecordFailure: true  # We still want to record the metrics even if the transaction is rolled back.
      Collection: Collection0
      Operations:
      - OperationName: withTransaction
        OperationCommand:
          OperationsInTransaction:
          - OperationName: updateOne
            Collection: Collection0
            OperationCommand:
              Filter: {shardKey: *shardKey}
              Update: {$inc: {counter: 1}}
          - OperationName: updateOne
            Collection: Collection0
            OperationCommand:
              Filter: {shardKey: *shardKey}
              Update: {$inc: {counter: 1}}
          - OperationName: updateOne
            Collection: Collection0
            OperationCommand:
              Filter: {shardKey: *shardKey}
              Update: {$inc: {counter: 1}}
          - OperationName: updateOne
            Collection: Collection0
            OperationCommand:
              Filter: {shardKey: *shardKey}
              Update: {$inc: {counter: 1}}
          - OperationName: updateOne
            Collection: Collection0
            OperationCommand:
              Filter: {shardKey: *shardKey}
              Update: {$inc: {counter: 1}}
          - OperationName: updateOne
            Collection: Collection0
            OperationCommand:
              Filter: {shardKey: *shardKey}
              Update: {$inc: {counter: 1}}
          - OperationName: updateOne
            Collection: Collection1
            OperationCommand:
              Filter: {shardKey: *shardKey}
              Update: {$inc: {counter: 1}}
          - OperationName: updateOne
            Collection: Collection1
            OperationCommand:
              Filter: {shardKey: *shardKey}
              Update: {$inc: {counter: 1}}
          - OperationName: updateOne
            Collection: Collection1
            OperationCommand:
              Filter: {shardKey: *shardKey}
              Update: {$inc: {counter: 1}}
          - OperationName: updateOne
            Collection: Collection1
            OperationCommand:
              Filter: {shardKey: *shardKey}
              Update: {$inc: {counter: 1}}
          - OperationName: updateOne
            Collection: Collection1
            OperationCommand:
              Filter: {shardKey: *shardKey}
              Update: {$inc: {counter: 1}}
    - MetricsName: DifferentDatabasesNonShardedCollectionsUpdate
      Duration: 1 minute
      ThrowOnFailure: false  # Transactions are allowed to fail.
      RecordFailure: true  # We still want to record the metrics even if the transaction is rolled back.
      Collection: Collection1
      Operations:
      - OperationName: withTransaction
        OperationCommand:
          OperationsInTransaction:
          - OperationName: updateOne
            Database: *Database0
            OperationCommand:
              Filter: {shardKey: *shardKey}
              Update: {$inc: {counter: 1}}
          - OperationName: updateOne
            Database: *Database0
            OperationCommand:
              Filter: {shardKey: *shardKey}
              Update: {$inc: {counter: 1}}
          - OperationName: updateOne
            Database: *Database0
            OperationCommand:
              Filter: {shardKey: *shardKey}
              Update: {$inc: {counter: 1}}
          - OperationName: updateOne
            Database: *Database0
            OperationCommand:
              Filter: {shardKey: *shardKey}
              Update: {$inc: {counter: 1}}
          - OperationName: updateOne
            Database: *Database0
            OperationCommand:
              Filter: {shardKey: *shardKey}
              Update: {$inc: {counter: 1}}
          - OperationName: updateOne
            Database: *Database0
            OperationCommand:
              Filter: {shardKey: *shardKey}
              Update: {$inc: {counter: 1}}
          - OperationName: updateOne
            Database: *Database1
            OperationCommand:
              Filter: {shardKey: *shardKey}
              Update: {$inc: {counter: 1}}
          - OperationName: updateOne
            Database: *Database1
            OperationCommand:
              Filter: {shardKey: *shardKey}
              Update: {$inc: {counter: 1}}
          - OperationName: updateOne
            Database: *Database1
            OperationCommand:
              Filter: {shardKey: *shardKey}
              Update: {$inc: {counter: 1}}
          - OperationName: updateOne
            Database: *Database1
            OperationCommand:
              Filter: {shardKey: *shardKey}
              Update: {$inc: {counter: 1}}
          - OperationName: updateOne
            Database: *Database1
            OperationCommand:
              Filter: {shardKey: *shardKey}
              Update: {$inc: {counter: 1}}
    - MetricsName: DifferentDatabasesShardedCollectionsUpdate
      Duration: 1 minute
      ThrowOnFailure: false  # Transactions are allowed to fail.
      RecordFailure: true  # We still want to record the metrics even if the transaction is rolled back.
      Collection: Collection0
      Operations:
      - OperationName: withTransaction
        OperationCommand:
          OperationsInTransaction:
          - OperationName: updateOne
            Database: *Database0
            OperationCommand:
              Filter: {shardKey: *shardKey}
              Update: {$inc: {counter: 1}}
          - OperationName: updateOne
            Database: *Database0
            OperationCommand:
              Filter: {shardKey: *shardKey}
              Update: {$inc: {counter: 1}}
          - OperationName: updateOne
            Database: *Database0
            OperationCommand:
              Filter: {shardKey: *shardKey}
              Update: {$inc: {counter: 1}}
          - OperationName: updateOne
            Database: *Database0
            OperationCommand:
              Filter: {shardKey: *shardKey}
              Update: {$inc: {counter: 1}}
          - OperationName: updateOne
            Database: *Database0
            OperationCommand:
              Filter: {shardKey: *shardKey}
              Update: {$inc: {counter: 1}}
          - OperationName: updateOne
            Database: *Database0
            OperationCommand:
              Filter: {shardKey: *shardKey}
              Update: {$inc: {counter: 1}}
          - OperationName: updateOne
            Database: *Database1
            OperationCommand:
              Filter: {shardKey: *shardKey}
              Update: {$inc: {counter: 1}}
          - OperationName: updateOne
            Database: *Database1
            OperationCommand:
              Filter: {shardKey: *shardKey}
              Update: {$inc: {counter: 1}}
          - OperationName: updateOne
            Database: *Database1
            OperationCommand:
              Filter: {shardKey: *shardKey}
              Update: {$inc: {counter: 1}}
          - OperationName: updateOne
            Database: *Database1
            OperationCommand:
              Filter: {shardKey: *shardKey}
              Update: {$inc: {counter: 1}}
          - OperationName: updateOne
            Database: *Database1
            OperationCommand:
              Filter: {shardKey: *shardKey}
              Update: {$inc: {counter: 1}}

AutoRun:
- When:
    mongodb_setup:
      $eq:
      - shard
      - shard-lite
      - shard-lite-all-feature-flags
    branch_name:
      $gte: v7.0
