SchemaVersion: 2018-07-01
Owner: Cluster Scalability
Description: |
  Creates a sharded collection with 2 chunks on 2 different shards using ranged sharding and updates
  the shard key to trigger WouldChangeOwningShard errors.

  The workload consists of 3 phases:
    1. Shard an empty collection (using ranged sharding) spreading 2 chunks across 2 shards.
    2. Populate the sharded collection with data.
    3. Update the shard key value to trigger WouldChangeOwningShard errors.

GlobalDefaults:
  Nop: &Nop {Nop: true}

  Database: &Database test
  # Collection0 is the default collection populated by the MonotonicSingleLoader.
  Collection: &Collection Collection0
  Namespace: &Namespace test.Collection0

  DocumentCount: &DocumentCount 10000 # Number of documents to insert and modify.

Actors:
  - Name: CreateShardedCollection
    Type: AdminCommand
    Threads: 1
    Phases:
      - Repeat: 1
        Database: admin
        Operations:
          - OperationMetricsName: EnableSharding
            OperationName: AdminCommand
            OperationCommand:
              enableSharding: *Database
              primaryShard: "rs0"
          - OperationMetricsName: ShardCollection
            OperationName: AdminCommand
            OperationCommand:
              shardCollection: *Namespace
              key: {x: 1}
          - OperationMetricsName: Split
            OperationName: AdminCommand
            OperationCommand:
              split: *Namespace
              middle: {x: 5}
          - OperationMetricsName: MoveChunk
            OperationName: AdminCommand
            OperationCommand:
              moveChunk: *Namespace
              find: {x: 6}
              to: "rs1"
      - *Nop
      - *Nop

  - Name: LoadInitialData
    Type: MonotonicSingleLoader
    Threads: 1
    Phases:
      - *Nop
      - Repeat: 1
        BatchSize: 1000
        DocumentCount: *DocumentCount
        Database: *Database
        Document: {x: 0}
      - *Nop

  - Name: UpdateShardKey
    Type: CrudActor
    Threads: 1 # We want to use 1 thread to avoid updates throwing WriteConflict errors.
    Phases:
      - *Nop
      - *Nop
      - Repeat: *DocumentCount
        Database: *Database
        Collection: *Collection
        Operations:
          - OperationMetricsName: UpdateShardKey
            OperationName: updateOne
            OperationCommand:
              Filter: {x: 0}
              Update: {$inc: {x: 10}}
              Options:
                WriteConcern:
                  Level: majority
                  TimeoutMillis: 5000

AutoRun:
  - When:
      mongodb_setup:
        $eq:
          - shard
          - shard-80-feature-flags
          - shard-all-feature-flags
          - shard-lite-80-feature-flags
      branch_name:
        # Version prior to 6.0 are affected by SERVER-87143 that would cause routers
        # to return WouldChangeOwningShard to the driver.
        $gte: v6.0
