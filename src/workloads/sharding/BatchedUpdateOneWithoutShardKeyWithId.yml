SchemaVersion: 2018-07-01
Owner: "@mongodb/sharding"
Description: |
  Runs the batched updateOne writes of type WithoutShardKeyWithId with a batch size of 1000.

  The workload consists of 3 phases:
    1. Creating an empty sharded collection distributed across all shards in the cluster.
    2. Populating the sharded collection with data.
    3. Running updateOne operations of type WriteWithoutShardKeyWithId.

  The inserted documents have the following form:

      {_id: 10, oldKey: 20, newKey: 30, counter: 0, padding: 'random string of bytes ...'}

  The collection is sharded on {oldKey: 'hashed'}.

GlobalDefaults:
  - &Nop {Nop: true}

  - &Database test
  # Collection0 is the default collection populated by the MonotonicSingleLoader.
  - &Collection Collection0
  - &Namespace test.Collection0

  # Note that the exact document size may exceed ApproxDocumentSize because of field names and other
  # fields in the document.
  - &ApproxDocumentSize 10000  # = 10kB
  - &ApproxDocumentSize80Pct 8000  # = 8kB
  - &DocumentCount 100000  # for an approximate total of 1GB

  - &ShardKeyValueMin 1
  - &ShardKeyValueMax 1000

  - &Document {
      oldKey: {^RandomInt: {min: *ShardKeyValueMin, max: *ShardKeyValueMax}},
      newKey: {^RandomInt: {min: *ShardKeyValueMin, max: *ShardKeyValueMax}},
      counter: 0,
    }

  - &WriteOp {
    q: {_id: {^RandomInt: {min: 1, max: *DocumentCount}}}, u: {$inc: {counter: 1}}
  }

  - &WriteOps10x [
      *WriteOp, *WriteOp, *WriteOp, *WriteOp, *WriteOp,
      *WriteOp, *WriteOp, *WriteOp, *WriteOp, *WriteOp,
    ]

  - &WriteOps100x {
      ^FlattenOnce:
        [
          *WriteOps10x, *WriteOps10x, *WriteOps10x, *WriteOps10x, *WriteOps10x,
          *WriteOps10x, *WriteOps10x, *WriteOps10x, *WriteOps10x, *WriteOps10x,
        ]
    }

  - &WriteOps1000x {
      ^FlattenOnce:
        [
          *WriteOps100x, *WriteOps100x, *WriteOps100x, *WriteOps100x, *WriteOps100x,
          *WriteOps100x, *WriteOps100x, *WriteOps100x, *WriteOps100x, *WriteOps100x,
        ]
    }

Clients:
  Default:
    QueryOptions:
      maxPoolSize: 600

Actors:
- Name: CreateShardedCollection
  Type: AdminCommand
  Threads: 1
  Phases:
  - Repeat: 1
    Database: admin
    Operations:
    - OperationMetricsName: EnableSharding
      OperationName: AdminCommand
      OperationCommand:
        enableSharding: *Database
    - OperationMetricsName: ShardCollection
      OperationName: AdminCommand
      OperationCommand:
        shardCollection: *Namespace
        # Hashed sharding will pre-split the chunk ranges and evenly distribute them across all of
        # the shards.
        key: {oldKey: hashed}
  - *Nop
  - *Nop

- Name: LoadInitialData
  Type: MonotonicSingleLoader
  Threads: 100
  Phases:
  - *Nop
  - Repeat: 1
    BatchSize: 1000
    DocumentCount: *DocumentCount
    Database: *Database
    Document:
      oldKey: {^RandomInt: {min: *ShardKeyValueMin, max: *ShardKeyValueMax}}
      newKey: {^RandomInt: {min: *ShardKeyValueMin, max: *ShardKeyValueMax}}
      counter: 0
      padding: {^FastRandomString: {length: {^RandomInt: {min: *ApproxDocumentSize80Pct, max: *ApproxDocumentSize}}}}
  - *Nop

- Name: WriteCollection
  Type: RunCommand
  Threads: 450
  Database: *Database
  Phases:
  - *Nop
  - *Nop
  - MetricsName: UpdateOneMetrics
    Duration: 200 seconds
    Collection: *Collection
    Operations:
      - OperationName: RunCommand
        OperationCommand:
          update: Collection0
          updates:
            { ^Parameter: { Name: "Operations", Default: *WriteOps1000x } }
          ordered: false

AutoRun:
- When:
    mongodb_setup:
      $eq:
      - shard
      - shard-lite
      - shard-lite-all-feature-flags
    branch_name:
      $gte: v8.0
