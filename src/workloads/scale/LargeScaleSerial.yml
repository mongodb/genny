SchemaVersion: 2018-07-01
Owner: Performance Infrastructure
Description: |
  This config simulates a "typical" large-scale OLTP workload running in parallel with a
  slower analytical operation. This is a use-case intended to improve with the addition of
  durable history.

  The first phase loads data while performing updates, lasts for one hour, and expects an
  overall update throughput of ten updates per millisecond.

  The second phase is a no-op.

  The third phase lasts for another hour, and runs three parallel query operations: a
  warmup that queries 100 collections, and two larger ones that query all 10K
  collections. These aren't performance-sensitive, they just serve to keep various "older"
  records around (hence the rate-limiting). The queries run in parallel with a full
  collection scan, which represents a conventional performance-sensitive OLTP workload
  that shouldn't be too affected by the long-running queries.

Keywords:
  - collections
  - oltp
  - query
  - scale

Clients:
  Default:
    QueryOptions:
      maxPoolSize: 100

Actors:
  - Name: Loader
    Type: Loader
    Threads: 1
    Phases:
      - Threads: 1
        LoadConfig:
          Path: &PhasePath ../../phases/scale/DesignDocWorkloadPhases.yml
          Key: Loader
        Repeat: 1
      - &Nop {Nop: true}
      - *Nop

  - Name: WarmupUpdate
    Type: MultiCollectionUpdate
    Phases:
      - LoadConfig:
          Path: *PhasePath
          Key: Update
        Duration: &Duration 1 hour
        MetricsName: Update
        GlobalRate: 10 per 1 millisecond # Target is 10 operations on every millisecond.
      - *Nop
      - *Nop

  - Name: WarmupQuery
    Type: MultiCollectionQuery
    Threads: 10
    Phases:
      - *Nop
      - *Nop
      - LoadConfig:
          Path: *PhasePath
          Key: Query
        Duration: *Duration

  - Name: TwoMinuteQuery
    Type: MultiCollectionQuery
    Threads: 2 # 2 threads for doing a two-minute query every minute.
    Phases:
      - *Nop
      - *Nop
      - LoadConfig:
          Path: *PhasePath
          Key: LargeQuery
          Parameters:
            Limit: 1024
        Duration: *Duration

  - Name: TenMinuteQuery
    Type: MultiCollectionQuery
    Threads: 2 # 2 threads for doing a two-minute query every minute.
    Phases:
      - *Nop
      - *Nop
      - LoadConfig:
          Path: *PhasePath
          Key: LargeQuery
          Parameters:
            # Documents are 1KB so we want to read 1024 documents over 2 minutes.
            Limit: 1024
        Duration: *Duration
        Sort: {z: 1}

  - Name: FullCollScan
    Type: MultiCollectionQuery
    Threads: 1
    Phases:
      - *Nop
      - *Nop
      - LoadConfig:
          Path: *PhasePath
          Key: CollScan
        Duration: *Duration

# TODO: Actor for "10K MongoDB writes / second" from the design doc.
# TODO: Actor for "1 collection with 9 indexes created and dropped / second".
# TODO: tail the oplog while queries and updates are happening.
# TODO: Need a way to express "queries are rarer and larger as collections get older".
#       Probably using a geometric distribution.
