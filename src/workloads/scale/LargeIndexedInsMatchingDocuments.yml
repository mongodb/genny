SchemaVersion: 2018-07-01
Owner: "@mongodb/product-perf"
Description: |
  This is an indexed $in workload that matches documents in a collection.
  This workload is intended to test a more representative workload

  An extremely common usecase for users is to fetch objects and hydrate with follow up $in query

  For example:
  The first query fetches an Author object
  {
    type: "author",
    name: "Tyler",
    posts: [ObjectId(1), ObjectId(2), ObjectId(3)],
  }

  The second query fetches the related, but not embedded/denormalized objects

  { $in: [ObjectId(1), ObjectId(2), ObjectId(3)] }

  This workload focuses on the second query of this use case matching documents
  using arrays of integers that are generated to be used for the $in queries.

  The important metrics for this workload are:
  * FindBlogPost actor
    * DocumentThroughput

Keywords:
  - Loader
  - CrudActor
  - find
  - $in
  - matching documents

GlobalDefaults:
  database: &database indexedins
  documentCount: &documentCount 2048000
  filterArraySize: &filterArraySize 20000

Actors:
  - Name: BlogPostsLoader
    Type: Loader
    Threads: 1
    Phases:
      - Repeat: 1
        Database: *database
        CollectionCount: 1
        Threads: 1
        DocumentCount: *documentCount
        BatchSize: 100
        Document:
          _id: { ^Inc: { start: 0 } }
          title: &randomString { ^RandomString: { length: 8 } }
          text: *randomString
      - { Nop: true }

  - Name: FindBlogPosts
    Type: CrudActor
    Threads: 64
    Database: *database
    Phases:
      - { Nop: true }
      - Name: MatchDocumentsUsingIn
        Duration: 2 minutes
        Collection: Collection0
        Operations:
          - OperationName: find
            OperationCommand:
              Filter:
                {
                  _id:
                    {
                      $in:
                        {
                          # An array of distinct and sequential integers up to documentCount. It will make sure all documents in this filter are found.
                          ^Array:
                            {
                              of:
                                {
                                  ^Inc:
                                    {
                                      start:
                                        {
                                          ^RandomInt: { min: 0, max: 2028000 }, # max ^Inc.start is documentCount - inArraySize
                                        },
                                    },
                                },
                              number: *filterArraySize,
                            },
                        },
                    },
                }

AutoRun:
  - When:
      mongodb_setup:
        $eq:
          - replica
          - replica-all-feature-flags
          - single-replica
          - single-replica-classic-query-engine
          - single-replica-sbe
