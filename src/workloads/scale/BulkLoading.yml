SchemaVersion: 2018-07-01
Owner: Product Performance
Description: |
  This workload tests the performance of the bulkWrite API, and compares it to normal writes.
  It is modeled as a collection of sensor data. It would be common for this use case to do batching using, e.g., AWS SQS.
  The thread levels for the many connections scenario are tuned for maximum throughput.

  It tests the following scenarios:
  - BulkWrite API, ~30GB data in the db, single connection, no index
  - BulkWrite API, ~30GB data in the db, single connection, with index

  - BulkWrite API, ~30GB data in the db, many connections, no index
  - BulkWrite API, ~30GB data in the db, many connections, with index

  - normal writes, ~30GB data in the db, many connections, no index
  - normal writes, ~30GB data in the db, many connections, with index

  - BulkWrite Upserts, ~30GB data in the db, many connections, with index

# ---Start Phase Description---
# 0 Load
# 1 Measure - BulkWriteSingleConnectionNoIndex
# 2 Delete
# 3 Quiesce

# 4 Load
# 5 Index
# 6 Measure - BulkWriteSingleConnectionWithIndex
# 7 Delete
# 8 Quiese

# 9 Load
# 10 Measure - BulkWriteManyConnectionsNoIndex
# 11 Delete
# 12 Quiesce

# 13 Load
# 14 Index
# 15 Measure - BulkWriteManyConnectionsWithIndex
# 16 Delete
# 17 Quiese

# 18 Load
# 19 Measure - NormalWriteManyConnectionsNoIndex
# 20 Delete
# 21 Quiese

# 22 Load
# 23 Index
# 24 Measure - NormalWriteManyConnectionsWithIndex
# 25 Delete
# 26 Quiese

# 27 Load
# 28 Index
# 29 Measure - BulkUpsertsManyConnectionsWithIndex
# 30 Delete
# 31 Quiese
# ---End Phase Description---

Keywords:
  - bulk insert
  - bulk write
  - indexes
  - upsert
  - stress

Clients:
  Default:
    QueryOptions:
      # Without this, the index builds time out
      socketTimeoutMS: -1
      # The default poolsize of 100 is not enough
      maxPoolSize: 400

GlobalDefaults:
  - &NumPhases 31
  - &DbName db
  - &CollectionName coll
  - &MeasurementDuration 1 minute
  - &LoaderDuration 2 minutes
  - &BulkWriteThreadCount 20
  - &NormalWriteThreadCount 30

  # This document layout leads to ~650% CPU utilization on the genny client,
  # so this is close to the maximum document complexity we can use here.
  # Using ^RandomDate for the timestamp is too compute intensive.
  - &Document {
      sensorId: { ^RandomInt: { min: 0, max: 200000000 } },
      timestamp: { ^RandomInt: { min: 1577836800000, max: 1692020604000 } },
      eventId: { ^RandomInt: { min: 1, max: 10 } },
      dataField1: { ^FastRandomString: { length: 10 } },
      dataField2: { ^FastRandomString: { length: 20 } },
      dataField3: { ^FastRandomString: { length: 30 } },
      dataField4: { ^FastRandomString: { length: 40 } },
      dataField5: { ^FastRandomString: { length: 50 } },
    }

  # This workload uses a batch size of 100 for the bulk writes.
  # We evaluated the impact of different batch sizes and the document throughput
  # does not appear to be impacted by the batch size.
  - &WriteOp { WriteCommand: insertOne, Document: *Document }
  - &WriteOps10x [
      *WriteOp, *WriteOp, *WriteOp, *WriteOp, *WriteOp,
      *WriteOp, *WriteOp, *WriteOp, *WriteOp, *WriteOp,
    ]
  - &WriteOps100x {
      ^FlattenOnce:
        [
          *WriteOps10x, *WriteOps10x, *WriteOps10x, *WriteOps10x, *WriteOps10x,
          *WriteOps10x, *WriteOps10x, *WriteOps10x, *WriteOps10x, *WriteOps10x,
        ],
    }
  - &UpsertOp {
      WriteCommand: updateOne,
      Filter: { sensorId: { ^RandomInt: { min: 0, max: 200000000 } } },
      Update:
        {
          $set:
            { eventId: 0, dataField1: { ^FastRandomString: { length: 10 } } },
        },
      OperationOptions: { Upsert: true },
    }
  - &UpsertOps10x [
      *UpsertOp, *UpsertOp, *UpsertOp, *UpsertOp, *UpsertOp,
      *UpsertOp, *UpsertOp, *UpsertOp, *UpsertOp, *UpsertOp,
    ]
  - &UpsertOps100x {
      ^FlattenOnce:
        [
          *UpsertOps10x, *UpsertOps10x, *UpsertOps10x, *UpsertOps10x, *UpsertOps10x,
          *UpsertOps10x, *UpsertOps10x, *UpsertOps10x, *UpsertOps10x, *UpsertOps10x,
        ],
    }

ActorTemplates:
  - TemplateName: BulkWriterTemplate
    Config:
      # TODO https://jira.mongodb.org/browse/EVG-20735
      Name: { ^Parameter: { Name: "Name", Default: "unset" } }
      Type: CrudActor
      Threads: { ^Parameter: { Name: "Threads", Default: *BulkWriteThreadCount } }
      Phases:
        OnlyActiveInPhases:
          Active:
            # TODO https://jira.mongodb.org/browse/EVG-20735
            { ^Parameter: { Name: "OnlyActiveInPhase", Default: "unset" } }
          NopInPhasesUpTo: *NumPhases
          PhaseConfig:
            Duration: { ^Parameter: { Name: "Duration", Default: *MeasurementDuration } }
            Database: *DbName
            Collection: *CollectionName
            Operations:
              - OperationName: bulkWrite
                OperationCommand:
                  WriteOperations:
                    { ^Parameter: { Name: "Operations", Default: *WriteOps100x } }

  - TemplateName: NormalWriterTemplate
    Config:
      # TODO https://jira.mongodb.org/browse/EVG-20735
      Name: { ^Parameter: { Name: "Name", Default: "unset" } }
      Type: CrudActor
      Threads: { ^Parameter: { Name: "Threads", Default: *NormalWriteThreadCount } }
      Phases:
        OnlyActiveInPhases:
          Active:
            # TODO https://jira.mongodb.org/browse/EVG-20735
            { ^Parameter: { Name: "OnlyActiveInPhase", Default: "unset" } }
          NopInPhasesUpTo: *NumPhases
          PhaseConfig:
            Duration: { ^Parameter: { Name: "Duration", Default: *MeasurementDuration } }
            Database: *DbName
            Collection: *CollectionName
            Operations:
              - OperationName: insertOne
                OperationCommand:
                  Document: *Document

Actors:
  # Each invocation of this actor bulk loads about 35 GB of data to populate the DB
  - ActorFromTemplate:
      TemplateName: BulkWriterTemplate
      TemplateParameters:
        Name: LoadData
        OnlyActiveInPhase: [0, 4, 9, 13, 18, 22, 27]
        Duration: *LoaderDuration

  - Name: BuildIndexActor
    Type: RunCommand
    Threads: 1
    Phases:
      OnlyActiveInPhases:
        Active: [5, 14, 23, 28]
        NopInPhasesUpTo: *NumPhases
        PhaseConfig:
          Repeat: 1
          Database: *DbName
          Operations:
            - OperationMetricsName: BuildIndex
              OperationName: RunCommand
              OperationCommand:
                createIndexes: *CollectionName
                indexes:
                  - key: { sensorId: 1, timestamp: -1 }
                    name: SensorAndTimestamp
                  - key: { timestamp: -1 }
                    name: Timestamp

  - Name: DeleteCollectionActor
    Type: RunCommand
    Threads: 1
    Phases:
      OnlyActiveInPhases:
        Active: [2, 7, 11, 16, 20, 25, 30]
        NopInPhasesUpTo: *NumPhases
        PhaseConfig:
          Repeat: 1
          Database: *DbName
          Operations:
            - OperationName: RunCommand
              OperationCommand:
                drop: *CollectionName

  - Name: QuiesceActor
    Type: QuiesceActor
    Threads: 1
    Database: *DbName
    Phases:
      OnlyActiveInPhases:
        Active: [3, 8, 12, 17, 21, 26, 31]
        NopInPhasesUpTo: *NumPhases
        PhaseConfig:
          Repeat: 1

  - ActorFromTemplate:
      TemplateName: BulkWriterTemplate
      TemplateParameters:
        Name: BulkWriteSingleConnectionNoIndex
        Threads: 1
        OnlyActiveInPhase: [1]
        Operations: *WriteOps100x

  - ActorFromTemplate:
      TemplateName: BulkWriterTemplate
      TemplateParameters:
        Name: BulkWriteSingleConnectionWithIndex
        Threads: 1
        OnlyActiveInPhase: [6]
        Operations: *WriteOps100x

  - ActorFromTemplate:
      TemplateName: BulkWriterTemplate
      TemplateParameters:
        Name: BulkWriteManyConnectionsNoIndex
        OnlyActiveInPhase: [10]
        Operations: *WriteOps100x

  - ActorFromTemplate:
      TemplateName: BulkWriterTemplate
      TemplateParameters:
        Name: BulkWriteManyConnectionsWithIndex
        OnlyActiveInPhase: [15]
        Operations: *WriteOps100x

  - ActorFromTemplate:
      TemplateName: NormalWriterTemplate
      TemplateParameters:
        Name: NormalWriteManyConnectionsNoIndex
        OnlyActiveInPhase: [19]
        # This test runs longer as it's more noisy
        Duration: 2 minutes

  - ActorFromTemplate:
      TemplateName: NormalWriterTemplate
      TemplateParameters:
        Name: NormalWriteManyConnectionsWithIndex
        OnlyActiveInPhase: [24]
        # This test runs longer as it's more noisy
        Duration: 2 minutes

  # We only test upserts with an index, as they would require COLSCANs without an index.
  # 120s * 900,000docs/sec = 108,000,000 docs after loading (slight overestimation since ids could overlapp).
  # With 200,000,000 sensorIds, the upserts have a ~50% chance of requiring an insert.
  - ActorFromTemplate:
      TemplateName: BulkWriterTemplate
      TemplateParameters:
        Name: BulkUpsertsManyConnectionsWithIndex
        OnlyActiveInPhase: [29]
        Operations: *UpsertOps100x

AutoRun:
  - When:
      mongodb_setup:
        $eq:
          - replica
