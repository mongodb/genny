SchemaVersion: 2018-07-01
Owner: "@mongodb/query"
Description: >
  The workload inserts a single large document, and tests concurrently updating the same document
  with many threads. This is intended to test the behavior of the server under heave memory pressure
  caused by update operations with a high rate of write conflicts. The update operation is on an
  integer field, the command itself is relatively small, so most of the memory pressure should come
  from the query subsystem.

Keywords:
- CrudActor
- Loader
- memory
- scale
- stress
- updateOne
- WriteConflict

GlobalDefaults:
  MaxPhases: &MaxPhases 2

Clients:
  Default:
    QueryOptions:
      maxPoolSize: 10100

Actors:

# Phases:
# 1. Insert a single document close to the 16MiB limit.
# 2. Use 10k threads attempting to update the same document.

- Name: InsertData
  Type: Loader
  Threads: 1
  Phases:
    OnlyActiveInPhases:
      Active: [0]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Database: &DB test
        Repeat: 1
        Threads: 1
        CollectionCount: 1  # Collection name will be Collection0, this is not configurable.
        DocumentCount: 1
        BatchSize: 1
        Document:
          _id: 0
          data: {^FastRandomString: {length: 16000000}}
          a: 0

- Name: PerformUpdates
  Type: CrudActor
  Database: *DB
  Threads: 10000
  Phases:
    OnlyActiveInPhases:
      Active: [1]
      NopInPhasesUpTo: *MaxPhases
      PhaseConfig:
        Duration: 10 minutes
        Collection: Collection0
        Operations:
        - OperationName: updateOne
          OperationCommand:
            Filter: {_id: 0 }
            Update: {$set: {a: { ^RandomInt: { min: 0, max: 10000000 }}}}
            Options:
              WriteConcern:
              Level: majority

# The workload is expected to cause an OOM kill. Keep AutoRun disabled.
# AutoRun:
# - When:
#     mongodb_setup:
#       $eq:
#       - single-replica

